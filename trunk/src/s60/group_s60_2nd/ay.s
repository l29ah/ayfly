@ Generated by gcc 2.9-psion-98r2 (Symbian build 539) for ARM/pe
	.file	"ay.cpp"
.gcc2_compiled.:
	.section .rdata
	.align	0
.LC0:
	.ascii	"%1c%1c%1c%1c\000"
	.global	_2ay.init_levels
	.align	0
_2ay.init_levels:
	.word 0x0	@ float 2.91933508814675758023e-319
	.word 0x44614000	@ float 9.01000000004616595106e2
	.word 0x44a7a000	@ float 1.34100000000926593202e3
	.word 0x44ee0000	@ float 1.90400000000929867383e3
	.word 0x452d7000	@ float 2.77500000001866283128e3
	.word 0x457d5000	@ float 4.05300000001872831490e3
	.word 0x45ad8000	@ float 5.55200000003758759703e3
	.word 0x460c3000	@ float 8.97200000007543712854e3
	.word 0x462d3000	@ float 1.10840000000756990630e4
	.word 0x46878200	@ float 1.73450000001519219950e4
	.word 0x46b49600	@ float 2.31150000001524458639e4
	.word 0x46e65e00	@ float 2.94870000001529697329e4
	.word 0x47120400	@ float 3.73800000003069872037e4
	.word 0x472ff100	@ float 4.50410000003085006028e4
	.word 0x47592100	@ float 5.55850000003095483407e4
	.word 0x477fff00	@ float 6.55350000003105960786e4
.text
	.align	0
	.global	__2ayP10AYSongInfo
__2ayP10AYSongInfo:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r5, r0
	mov	r4, r1
	str	r4, [r5, #204]
	ldr	r3, .L3097
	ldr	r2, .L3097+4
	ldr	r0, [r4, r3]
	ldr	r1, [r4, r2]
	bl	__udivsi3
	str	r0, [r5, #200]
	ldr	r3, .L3097+8
	ldr	r0, [r4, r3]
	cmp	r0, #0
	blt	.L3082
	bl	__floatsisf
	b	.L3094
.L3098:
	.align	0
.L3097:
	.word	67172
	.word	67168
	.word	67164
.L3082:
	ldr	r3, [r4, r3]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r4, r0
	mov	r1, r4
	bl	__addsf3
.L3094:
	mov	r4, r0
	ldr	r3, [r5, #204]
	ldr	r2, .L3099
	ldr	r0, [r3, r2]
	cmp	r0, #0
	blt	.L3084
	bl	__floatsisf
	b	.L3095
.L3100:
	.align	0
.L3099:
	.word	67172
.L3084:
	ldr	r3, [r3, r2]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3095:
	mov	r1, r0
	mov	r0, r4
	bl	__divsf3
	ldr	r1, .L3101	@ float
	bl	__divsf3
	mov	r4, r0
	bl	__fixunssfsi
	str	r0, [r5, #180]
	cmp	r0, #0
	blt	.L3087
	bl	__floatsisf
	b	.L3096
.L3102:
	.align	0
.L3101:
	.word 0x0	@ float 3.23785921002060922726e-319
.L3087:
	ldr	r3, [r5, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3096:
	mov	r1, r0
	mov	r0, r4
	bl	__subsf3
	bl	__extendsfdf2
	adr	r2, .L3104
	ldmia	r2, {r2-r3}
	bl	__gedf2
	cmp	r0, #0
	ldrge	r3, [r5, #180]
	addge	r3, r3, #1
	strge	r3, [r5, #180]
.L3085:
	mov	r4, #0
	ldr	r6, .L3104+8
.L3091:
	mov	r3, r4, asl #2
	ldr	r0, [r6, r3]	@ float
	ldr	r1, .L3104+12	@ float
	bl	__divsf3
	str	r0, [r5, r4, asl #2]	@ float
	add	r4, r4, #1
	cmp	r4, #15
	bls	.L3091
	mov	r0, r5
	bl	ayReset__2ay
	mov	r0, r5
	b	.L3103
.L3105:
	.align	0
.L3104:
	.long 0x0, 0xb5b70000	@ double 1.50627168926378855953e-314
	.word	_2ay.init_levels
	.word 0x0	@ float 6.35566046810179554429e-320
.L3103:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
	.global	_._2ay
_._2ay:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	@ I don't think this function clobbers lr
	tst	r1, #1
	bxeq	lr
	b	__builtin_delete
	.align	0
	.global	SetParameters__2ay
SetParameters__2ay:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r5, r0
	ldr	r3, [r5, #204]
	ldr	r2, .L3121
	ldr	r0, [r3, r2]
	cmp	r0, #0
	blt	.L3112
	bl	__floatsisf
	b	.L3118
.L3122:
	.align	0
.L3121:
	.word	67164
.L3112:
	ldr	r3, [r3, r2]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r4, r0
	mov	r1, r4
	bl	__addsf3
.L3118:
	mov	r4, r0
	ldr	r3, [r5, #204]
	ldr	r2, .L3123
	ldr	r0, [r3, r2]
	cmp	r0, #0
	blt	.L3114
	bl	__floatsisf
	b	.L3119
.L3124:
	.align	0
.L3123:
	.word	67172
.L3114:
	ldr	r3, [r3, r2]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3119:
	mov	r1, r0
	mov	r0, r4
	bl	__divsf3
	ldr	r1, .L3125	@ float
	bl	__divsf3
	mov	r4, r0
	bl	__fixunssfsi
	str	r0, [r5, #180]
	cmp	r0, #0
	blt	.L3117
	bl	__floatsisf
	b	.L3120
.L3126:
	.align	0
.L3125:
	.word 0x0	@ float 3.23785921002060922726e-319
.L3117:
	ldr	r3, [r5, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3120:
	mov	r1, r0
	mov	r0, r4
	bl	__subsf3
	bl	__extendsfdf2
	adr	r2, .L3128
	ldmia	r2, {r2-r3}
	bl	__gedf2
	cmp	r0, #0
	ldrge	r3, [r5, #180]
	addge	r3, r3, #1
	strge	r3, [r5, #180]
.L3115:
	ldr	r1, [r5, #204]
	ldr	r3, .L3128+8
	ldr	r2, .L3128+12
	ldr	r0, [r1, r3]
	ldr	r1, [r1, r2]
	bl	__udivsi3
	str	r0, [r5, #200]
	b	.L3127
.L3129:
	.align	0
.L3128:
	.long 0x0, 0xb5b70000	@ double 1.50627168926378855953e-314
	.word	67172
	.word	67168
.L3127:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
	.global	ayReset__2ay
ayReset__2ay:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	mov	r5, #0
	str	r5, [r4, #196]
	add	r0, r4, #64
	mov	r1, r5
	mov	r2, #16
	bl	memset
	mov	r3, #255
	strb	r3, [r4, #79]
	strb	r3, [r4, #78]
	str	r5, [r4, #92]
	str	r5, [r4, #88]
	str	r5, [r4, #84]
	ldr	r3, .L3132	@ float
	str	r3, [r4, #96]	@ float
	str	r3, [r4, #100]	@ float
	str	r3, [r4, #104]	@ float
	strb	r5, [r4, #108]
	strb	r5, [r4, #109]
	strb	r5, [r4, #110]
	strb	r5, [r4, #140]
	strb	r5, [r4, #141]
	strb	r5, [r4, #142]
	mov	r3, #1
	str	r3, [r4, #120]
	str	r3, [r4, #116]
	str	r3, [r4, #112]
	strb	r5, [r4, #178]
	strb	r5, [r4, #177]
	strb	r5, [r4, #176]
	str	r5, [r4, #160]
	str	r5, [r4, #168]
	str	r3, [r4, #136]
	str	r3, [r4, #132]
	str	r3, [r4, #128]
	str	r3, [r4, #148]
	str	r3, [r4, #144]
	str	r5, [r4, #80]
	ldr	r3, .L3132+4	@ float
	str	r3, [r4, #192]	@ float
	str	r3, [r4, #188]	@ float
	str	r3, [r4, #184]	@ float
	mov	r0, r4
	bl	setEnvelope__2ay
	b	.L3131
.L3133:
	.align	0
.L3132:
	.word 0x0	@ float 3.23785921002060922726e-319
	.word 0x0	@ float 6.35566046810179554429e-320
.L3131:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
	.global	ayWrite__2ayUcUc
ayWrite__2ayUcUc:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	and	r0, r1, #255
	and	r1, r1, #15
	add	r3, ip, #64
	strb	r2, [r3, r1]
	cmp	r0, #13
	ldrls	pc, [pc, r0, asl #2]
	b	.L3155
	.align	0
.L3154:
	.word	.L3137
	.word	.L3137
	.word	.L3140
	.word	.L3140
	.word	.L3143
	.word	.L3143
	.word	.L3145
	.word	.L3155
	.word	.L3155
	.word	.L3155
	.word	.L3155
	.word	.L3152
	.word	.L3152
	.word	.L3152
.L3137:
	ldrb	r3, [ip, #65]
	and	r3, r3, #15
	ldrb	r2, [ip, #64]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	str	r3, [ip, #112]
	cmp	r3, #0
	addeq	r3, r3, #1
	streq	r3, [ip, #112]
	ldmfd	sp!, {ip}
	bx	ip
.L3140:
	ldrb	r3, [ip, #67]
	and	r3, r3, #15
	ldrb	r2, [ip, #66]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	str	r3, [ip, #116]
	cmp	r3, #0
	addeq	r3, r3, #1
	streq	r3, [ip, #116]
	ldmfd	sp!, {ip}
	bx	ip
.L3143:
	ldrb	r3, [ip, #69]
	and	r3, r3, #15
	ldrb	r2, [ip, #68]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	str	r3, [ip, #120]
	cmp	r3, #0
	addeq	r3, r3, #1
	streq	r3, [ip, #120]
	ldmfd	sp!, {ip}
	bx	ip
.L3145:
	ldrb	r3, [ip, #70]
	and	r3, r3, #31
	mov	r3, r3, asl #1
	str	r3, [ip, #124]
	ldmfd	sp!, {ip}
	bx	ip
.L3152:
	ldrb	r2, [ip, #76]	@ zero_extendqisi2
	ldrb	r3, [ip, #75]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	mov	r3, r3, asl #1
	str	r3, [ip, #152]
	mov	r0, ip
	bl	setEnvelope__2ay
.L3155:
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
	.global	ayRead__2ayUc
ayRead__2ayUc:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	and	r1, r1, #15
	add	r0, r0, #64
	ldrb	r0, [r0, r1]	@ zero_extendqisi2
	bx	lr
.data
	.align	0
env_type_old.2954:
	.word	0
.text
	.align	0
	.global	setEnvelope__2ay
setEnvelope__2ay:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #77]	@ zero_extendqisi2
	str	r2, [r0, #160]
	ldr	r1, .L3165
	ldr	r3, [r1, #0]
	cmp	r2, r3
	bxeq	lr
	str	r2, [r1, #0]
	mov	r1, #0
	str	r1, [r0, #156]
	str	r1, [r0, #164]
	mov	r3, r2, lsr #2
	ands	r3, r3, #1
	beq	.L3160
	mov	r2, r1
	b	.L3161
.L3166:
	.align	0
.L3165:
	.word	env_type_old.2954
.L3160:
	mov	r2, #15
.L3161:
	str	r2, [r0, #168]
	cmp	r3, #0
	movne	r3, #1
.L3162:
	mvneq	r3, #0
.L3163:
	str	r3, [r0, #172]
	bx	lr
	.align	0
	.global	updateEnvelope__2ay
updateEnvelope__2ay:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, [r0, #156]
	add	r3, r3, #1
	str	r3, [r0, #156]
	ldr	r2, [r0, #152]
	cmp	r3, r2
	bxlt	lr
	mov	r3, #0
	str	r3, [r0, #156]
	ldr	r3, [r0, #164]
	cmp	r3, #15
	bxhi	lr
	bne	.L3170
	ldr	r2, [r0, #160]
	tst	r2, #1
	beq	.L3170
	cmp	r2, #0
	beq	.L3170
	mov	r3, r2, lsr #2
	and	r3, r3, #1
	tst	r2, #2
	eorne	r3, r3, #1
.L3171:
	cmp	r3, #0
	movne	r2, #15
.L3172:
	moveq	r2, #0
.L3173:
	str	r2, [r0, #168]
	cmp	r3, #0
	movne	r3, #1
.L3174:
	mvneq	r3, #0
.L3175:
	str	r3, [r0, #172]
	mov	r3, #16
	str	r3, [r0, #164]
	bx	lr
.L3170:
	ldr	r3, [r0, #164]
	cmp	r3, #15
	bne	.L3177
	ldr	r3, [r0, #160]
	ands	r2, r3, #8
	moveq	r3, #16
	streq	r3, [r0, #164]
	streq	r2, [r0, #168]
	bxeq	lr
.L3177:
	ldr	r3, [r0, #164]
	add	r3, r3, #1
	and	r3, r3, #15
	str	r3, [r0, #164]
	cmp	r3, #0
	bne	.L3179
	ldrb	r1, [r0, #160]
	tst	r1, #2
	beq	.L3180
	ldr	r3, [r0, #172]
	rsb	r3, r3, #0
.L3188:
	str	r3, [r0, #172]
	bx	lr
.L3180:
	ldr	r3, [r0, #160]
	mov	r3, r3, lsr #2
	ands	r3, r3, #1
	movne	r2, #0
.L3182:
	moveq	r2, #15
.L3183:
	str	r2, [r0, #168]
	cmp	r3, #0
	movne	r3, #1
	bne	.L3188
.L3184:
	mvn	r3, #0
	b	.L3188
.L3179:
	add	r1, r0, #168
	ldmia	r1, {r1, r3}
	add	r3, r1, r3
	str	r3, [r0, #168]
	bx	lr
	.align	0
	.global	ayProcess__2ayPUcUl
ayProcess__2ayPUcUl:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	sub	sp, sp, #8
	mov	r6, r0
	mov	r2, r2, lsr #2
	stmia	sp, {r1, r2}	@ phole stm
	mov	r9, #0
	cmp	r9, r2
	bcs	.L3222
.L3193:
	ldr	r2, [r6, #196]
	add	r2, r2, #1
	str	r2, [r6, #196]
	ldr	r3, [r6, #200]
	cmp	r2, r3
	movhi	r3, #0
	strhi	r3, [r6, #196]
	ldrhi	r0, [r6, #204]
	blhi	ay_z80xec
.L3194:
	ldr	r7, .L3230	@ float
	mov	sl, r7
	mov	r8, r7
	mov	r4, #0
	b	.L3223
.L3231:
	.align	0
.L3230:
	.word 0x0	@ float 3.23785921002060922726e-319
.L3198:
	ldr	r3, [r6, #84]
	add	r3, r3, #1
	str	r3, [r6, #84]
	ldr	r2, [r6, #112]
	cmp	r3, r2
	blt	.L3199
	rsb	r3, r2, r3
	str	r3, [r6, #84]
	ldr	r3, [r6, #128]
	eor	r3, r3, #1
	str	r3, [r6, #128]
.L3199:
	ldr	r3, [r6, #88]
	add	r3, r3, #1
	str	r3, [r6, #88]
	ldr	r2, [r6, #116]
	cmp	r3, r2
	blt	.L3200
	rsb	r3, r2, r3
	str	r3, [r6, #88]
	ldr	r3, [r6, #132]
	eor	r3, r3, #1
	str	r3, [r6, #132]
.L3200:
	ldr	r3, [r6, #92]
	add	r3, r3, #1
	str	r3, [r6, #92]
	ldr	r2, [r6, #120]
	cmp	r3, r2
	blt	.L3201
	rsb	r3, r2, r3
	str	r3, [r6, #92]
	ldr	r3, [r6, #136]
	eor	r3, r3, #1
	str	r3, [r6, #136]
.L3201:
	ldr	r2, [r6, #80]
	add	r2, r2, #1
	str	r2, [r6, #80]
	ldr	r3, [r6, #124]
	cmp	r2, r3
	blt	.L3202
	mov	r3, #0
	str	r3, [r6, #80]
	ldr	r3, [r6, #148]
	add	r3, r3, #1
	tst	r3, #2
	ldrne	r3, [r6, #144]
	eorne	r3, r3, #1
	strne	r3, [r6, #144]
.L3203:
	ldr	r3, [r6, #148]
	tst	r3, #1
	eorne	r3, r3, #147456
	strne	r3, [r6, #148]
.L3204:
	ldr	r3, [r6, #148]
	mov	r3, r3, lsr #1
	str	r3, [r6, #148]
.L3202:
	mov	r0, r6
	bl	updateEnvelope__2ay
	ldrb	r1, [r6, #71]
	and	r1, r1, #1
	ldr	r3, [r6, #128]
	orr	r1, r1, r3
	ldrb	r3, [r6, #71]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r3, r3, #1
	ldr	r2, [r6, #144]
	orr	r3, r3, r2
	and	r1, r1, r3
	ldrb	r3, [r6, #176]
	eor	r3, r3, #1
	tst	r1, r3
	beq	.L3205
	ldr	r0, [r6, #184]	@ float
	ldrb	ip, [r6, #72]
	tst	ip, #16
	ldrne	r3, [r6, #168]
.L3206:
	ldreqb	r3, [r6, #72]
	andeq	r3, r3, #15
.L3224:
	ldr	r1, [r6, r3, asl #2]	@ float
	bl	__mulsf3
	mov	r1, r0
	mov	r0, r8
	bl	__addsf3
	mov	r8, r0
.L3205:
	ldrb	r3, [r6, #71]	@ zero_extendqisi2
	mov	r1, r3, lsr #1
	and	r1, r1, #1
	ldr	r2, [r6, #132]
	orr	r1, r1, r2
	mov	r3, r3, lsr #4
	and	r3, r3, #1
	ldr	r2, [r6, #144]
	orr	r3, r3, r2
	and	r1, r1, r3
	ldrb	r3, [r6, #177]
	eor	r3, r3, #1
	tst	r1, r3
	beq	.L3208
	ldr	r0, [r6, #188]	@ float
	ldrb	ip, [r6, #73]
	tst	ip, #16
	ldrne	r3, [r6, #168]
.L3209:
	ldreqb	r3, [r6, #73]
	andeq	r3, r3, #15
.L3225:
	ldr	r1, [r6, r3, asl #2]	@ float
	bl	__mulsf3
	mov	r1, r0
	mov	r0, r7
	bl	__addsf3
	mov	r7, r0
.L3208:
	ldrb	r3, [r6, #71]	@ zero_extendqisi2
	mov	r1, r3, lsr #2
	and	r1, r1, #1
	ldr	r2, [r6, #136]
	orr	r1, r1, r2
	mov	r3, r3, lsr #5
	and	r3, r3, #1
	ldr	r2, [r6, #144]
	orr	r3, r3, r2
	and	r1, r1, r3
	ldrb	r3, [r6, #178]
	eor	r3, r3, #1
	tst	r1, r3
	beq	.L3197
	ldr	r0, [r6, #192]	@ float
	ldrb	ip, [r6, #74]
	tst	ip, #16
	ldrne	r3, [r6, #168]
.L3212:
	ldreqb	r3, [r6, #74]
	andeq	r3, r3, #15
.L3226:
	ldr	r1, [r6, r3, asl #2]	@ float
	bl	__mulsf3
	mov	r1, r0
	mov	r0, sl
	bl	__addsf3
	mov	sl, r0
.L3197:
	add	r4, r4, #1
.L3223:
	ldr	r3, [r6, #180]
	cmp	r4, r3
	bcc	.L3198
	ldr	r0, [r6, #180]
	cmp	r0, #0
	blt	.L3216
	bl	__floatsisf
	b	.L3227
.L3216:
	ldr	r3, [r6, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3227:
	mov	r1, r0
	mov	r0, r8
	bl	__divsf3
	mov	r8, r0
	ldr	r0, [r6, #180]
	cmp	r0, #0
	blt	.L3218
	bl	__floatsisf
	b	.L3228
.L3218:
	ldr	r3, [r6, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3228:
	mov	r1, r0
	mov	r0, r7
	bl	__divsf3
	bl	__extendsfdf2
	adr	r2, .L3232
	ldmia	r2, {r2-r3}
	bl	__divdf3
	bl	__truncdfsf2
	mov	r7, r0
	ldr	r0, [r6, #180]
	cmp	r0, #0
	blt	.L3220
	bl	__floatsisf
	b	.L3229
.L3233:
	.align	0
.L3232:
	.long 0x0, 0xb5b70000	@ double 1.50627168926378855953e-314
.L3220:
	ldr	r3, [r6, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3229:
	mov	r1, r0
	mov	r0, sl
	bl	__divsf3
	mov	sl, r0
	mov	r4, r9, asl #2
	ldr	ip, [sp, #0]
	add	r5, r4, ip
	mov	r0, r8
	mov	r1, r7
	bl	__addsf3
	bl	__fixsfsi
	ldr	ip, [sp, #0]
	strh	r0, [r4, ip]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r0, sl
	mov	r1, r7
	bl	__addsf3
	bl	__fixsfsi
	strh	r0, [r5, #2]	@ movhi   ;; CYGNUS LOCAL nickc
	add	r9, r9, #1
	ldr	ip, [sp, #4]
	cmp	r9, ip
	bcc	.L3193
.L3222:
	add	sp, sp, #8
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	bx	lr
	.align	0
	.global	ayProcessMono__2ayPUcUl
ayProcessMono__2ayPUcUl:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	sub	sp, sp, #4
	mov	r5, r0
	mov	r9, r2, lsr #2
	str	r1, [sp, #0]
	mov	sl, #0
	cmp	sl, r9
	bcs	.L3267
.L3238:
	ldr	r2, [r5, #196]
	add	r2, r2, #1
	str	r2, [r5, #196]
	ldr	r3, [r5, #200]
	cmp	r2, r3
	movhi	r3, #0
	strhi	r3, [r5, #196]
	ldrhi	r0, [r5, #204]
	blhi	ay_z80xec
.L3239:
	ldr	r6, .L3275	@ float
	mov	r7, r6
	mov	r8, r6
	mov	r4, #0
	b	.L3268
.L3276:
	.align	0
.L3275:
	.word 0x0	@ float 3.23785921002060922726e-319
.L3243:
	ldr	r3, [r5, #84]
	add	r3, r3, #1
	str	r3, [r5, #84]
	ldr	r2, [r5, #112]
	cmp	r3, r2
	blt	.L3244
	rsb	r3, r2, r3
	str	r3, [r5, #84]
	ldr	r3, [r5, #128]
	eor	r3, r3, #1
	str	r3, [r5, #128]
.L3244:
	ldr	r3, [r5, #88]
	add	r3, r3, #1
	str	r3, [r5, #88]
	ldr	r2, [r5, #116]
	cmp	r3, r2
	blt	.L3245
	rsb	r3, r2, r3
	str	r3, [r5, #88]
	ldr	r3, [r5, #132]
	eor	r3, r3, #1
	str	r3, [r5, #132]
.L3245:
	ldr	r3, [r5, #92]
	add	r3, r3, #1
	str	r3, [r5, #92]
	ldr	r2, [r5, #120]
	cmp	r3, r2
	blt	.L3246
	rsb	r3, r2, r3
	str	r3, [r5, #92]
	ldr	r3, [r5, #136]
	eor	r3, r3, #1
	str	r3, [r5, #136]
.L3246:
	ldr	r2, [r5, #80]
	add	r2, r2, #1
	str	r2, [r5, #80]
	ldr	r3, [r5, #124]
	cmp	r2, r3
	blt	.L3247
	mov	r3, #0
	str	r3, [r5, #80]
	ldr	r3, [r5, #148]
	add	r3, r3, #1
	tst	r3, #2
	ldrne	r3, [r5, #144]
	eorne	r3, r3, #1
	strne	r3, [r5, #144]
.L3248:
	ldr	r3, [r5, #148]
	tst	r3, #1
	eorne	r3, r3, #147456
	strne	r3, [r5, #148]
.L3249:
	ldr	r3, [r5, #148]
	mov	r3, r3, lsr #1
	str	r3, [r5, #148]
.L3247:
	mov	r0, r5
	bl	updateEnvelope__2ay
	ldrb	r1, [r5, #71]
	and	r1, r1, #1
	ldr	r3, [r5, #128]
	orr	r1, r1, r3
	ldrb	r3, [r5, #71]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r3, r3, #1
	ldr	r2, [r5, #144]
	orr	r3, r3, r2
	and	r1, r1, r3
	ldrb	r3, [r5, #176]
	eor	r3, r3, #1
	tst	r1, r3
	beq	.L3250
	ldr	r0, [r5, #184]	@ float
	ldrb	ip, [r5, #72]
	tst	ip, #16
	ldrne	r3, [r5, #168]
.L3251:
	ldreqb	r3, [r5, #72]
	andeq	r3, r3, #15
.L3269:
	ldr	r1, [r5, r3, asl #2]	@ float
	bl	__mulsf3
	mov	r1, r0
	mov	r0, r8
	bl	__addsf3
	mov	r8, r0
.L3250:
	ldrb	r3, [r5, #71]	@ zero_extendqisi2
	mov	r1, r3, lsr #1
	and	r1, r1, #1
	ldr	r2, [r5, #132]
	orr	r1, r1, r2
	mov	r3, r3, lsr #4
	and	r3, r3, #1
	ldr	r2, [r5, #144]
	orr	r3, r3, r2
	and	r1, r1, r3
	ldrb	r3, [r5, #177]
	eor	r3, r3, #1
	tst	r1, r3
	beq	.L3253
	ldr	r0, [r5, #188]	@ float
	ldrb	ip, [r5, #73]
	tst	ip, #16
	ldrne	r3, [r5, #168]
.L3254:
	ldreqb	r3, [r5, #73]
	andeq	r3, r3, #15
.L3270:
	ldr	r1, [r5, r3, asl #2]	@ float
	bl	__mulsf3
	mov	r1, r0
	mov	r0, r7
	bl	__addsf3
	mov	r7, r0
.L3253:
	ldrb	r3, [r5, #71]	@ zero_extendqisi2
	mov	r1, r3, lsr #2
	and	r1, r1, #1
	ldr	r2, [r5, #136]
	orr	r1, r1, r2
	mov	r3, r3, lsr #5
	and	r3, r3, #1
	ldr	r2, [r5, #144]
	orr	r3, r3, r2
	and	r1, r1, r3
	ldrb	r3, [r5, #178]
	eor	r3, r3, #1
	tst	r1, r3
	beq	.L3242
	ldr	r0, [r5, #192]	@ float
	ldrb	ip, [r5, #74]
	tst	ip, #16
	ldrne	r3, [r5, #168]
.L3257:
	ldreqb	r3, [r5, #74]
	andeq	r3, r3, #15
.L3271:
	ldr	r1, [r5, r3, asl #2]	@ float
	bl	__mulsf3
	mov	r1, r0
	mov	r0, r6
	bl	__addsf3
	mov	r6, r0
.L3242:
	add	r4, r4, #1
.L3268:
	ldr	r3, [r5, #180]
	cmp	r4, r3
	bcc	.L3243
	ldr	r0, [r5, #180]
	cmp	r0, #0
	blt	.L3261
	bl	__floatsisf
	b	.L3272
.L3261:
	ldr	r3, [r5, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3272:
	mov	r1, r0
	mov	r0, r8
	bl	__divsf3
	mov	r8, r0
	ldr	r0, [r5, #180]
	cmp	r0, #0
	blt	.L3263
	bl	__floatsisf
	b	.L3273
.L3263:
	ldr	r3, [r5, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3273:
	mov	r1, r0
	mov	r0, r7
	bl	__divsf3
	bl	__extendsfdf2
	adr	r2, .L3277
	ldmia	r2, {r2-r3}
	bl	__divdf3
	bl	__truncdfsf2
	mov	r7, r0
	ldr	r0, [r5, #180]
	cmp	r0, #0
	blt	.L3265
	bl	__floatsisf
	b	.L3274
.L3278:
	.align	0
.L3277:
	.long 0x0, 0xb5b70000	@ double 1.50627168926378855953e-314
.L3265:
	ldr	r3, [r5, #180]
	and	r0, r3, #1
	orr	r0, r0, r3, lsr #1
	bl	__floatsisf
	mov	r1, r0
	bl	__addsf3
.L3274:
	mov	r1, r0
	mov	r0, r6
	bl	__divsf3
	mov	r6, r0
	mov	r4, sl, asl #1
	mov	r0, r8
	mov	r1, r7
	bl	__addsf3
	mov	r1, r6
	bl	__addsf3
	bl	__fixsfsi
	ldr	ip, [sp, #0]
	strh	r0, [r4, ip]	@ movhi   ;; CYGNUS LOCAL nickc
	add	sl, sl, #1
	cmp	sl, r9
	bcc	.L3238
.L3267:
	add	sp, sp, #4
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	bx	lr
	.section .text$Delete__t13CleanupDelete1Z11MDataSourcePv,"x"
	.linkonce discard
	.align	0
	.global	Delete__t13CleanupDelete1Z11MDataSourcePv
Delete__t13CleanupDelete1Z11MDataSourcePv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	cmp	r0, #0
	ldmeqfd	sp!, {ip}
	bxeq	ip
	ldr	r3, [r0, #8]
	mov	r1, #3
	ldr	ip, [r3, #8]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.section .text$Delete__t13CleanupDelete1Z9MDataSinkPv,"x"
	.linkonce discard
	.align	0
	.global	Delete__t13CleanupDelete1Z9MDataSinkPv
Delete__t13CleanupDelete1Z9MDataSinkPv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	cmp	r0, #0
	ldmeqfd	sp!, {ip}
	bxeq	ip
	ldr	r3, [r0, #8]
	mov	r1, #3
	ldr	ip, [r3, #8]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
