@ Generated by gcc 2.9-psion-98r2 (Symbian build 539) for ARM/pe
	.file	"common.cpp"
.gcc2_compiled.:
	.section .rdata
	.align	0
.LC0:
	.ascii	"%1c%1c%1c%1c\000"
	.align	0
.LC1:
	.ascii	"\000\000"
.text
	.align	0
	.global	ay_sys_getnewinfo__Fv
ay_sys_getnewinfo__Fv:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	sub	sp, sp, #24
	ldr	r0, .L3104
	bl	__builtin_new
	subs	r4, r0, #0
	beq	.L3089
	mov	r0, r4
	mov	r1, #256
	bl	__10TBufBase16i
	add	r0, r4, #520
	mov	r1, #256
	bl	__10TBufBase16i
	add	r0, r4, #1040
	mov	r1, #256
	bl	__10TBufBase16i
.L3089:
	cmp	r4, #0
	beq	.L3098
	add	r0, sp, #16
	ldr	r1, .L3104+4
	bl	__7TPtrC16PCUs
	add	r0, r4, #1040
	add	r1, sp, #16
	bl	Copy__6TDes16RC7TDesC16
	add	r0, sp, #8
	ldr	r1, .L3104+4
	bl	__7TPtrC16PCUs
	add	r0, r4, #520
	add	r1, sp, #8
	bl	Copy__6TDes16RC7TDesC16
	mov	r0, sp
	ldr	r1, .L3104+4
	bl	__7TPtrC16PCUs
	mov	r0, r4
	mov	r1, sp
	bl	Copy__6TDes16RC7TDesC16
	mov	r1, #0
	str	r1, [r4, #1564]
	str	r1, [r4, #1560]
	mov	r3, #1568
	strb	r1, [r4, r3]
	str	r1, [r4, #1572]
	str	r1, [r4, #1576]
	str	r1, [r4, #1580]
	str	r1, [r4, #1584]
	ldr	r3, .L3104+8
	str	r1, [r4, r3]
	ldr	r3, .L3104+12
	str	r1, [r4, r3]
	ldr	r3, .L3104+16
	str	r1, [r4, r3]
	ldr	r3, .L3104+20
	str	r1, [r4, r3]
	ldr	r2, .L3104+24
	ldr	r3, .L3104+28
	str	r3, [r4, r2]
	ldr	r2, .L3104+32
	mov	r3, r3, lsr #1
	str	r3, [r4, r2]
	ldr	r2, .L3104+36
	mov	r3, #50
	str	r3, [r4, r2]
	str	r1, [r4, #1588]
	str	r1, [r4, #1592]
	ldr	r2, .L3104+40
	ldr	r3, .L3104+44
	str	r3, [r4, r2]
	ldr	r3, .L3104+48
	str	r1, [r4, r3]
	add	r0, r4, #1584
	add	r0, r0, #12
	mov	r2, #65536
	bl	memset
	mov	r0, r4
	b	.L3103
.L3105:
	.align	0
.L3104:
	.word	67176
	.word	.LC1
	.word	67132
	.word	67140
	.word	67144
	.word	67148
	.word	67160
	.word	3546900
	.word	67164
	.word	67168
	.word	67172
	.word	44100
	.word	67136
.L3098:
	mov	r0, #0
.L3103:
	add	sp, sp, #24
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	ay_initsong
ay_initsong:
	@ args = 524, pretend = 16, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	sub	sp, sp, #16
	stmfd	sp!, {r4, lr}
	add	ip, sp, #8
	stmia	ip, {r0-r3}	@ str multiple
	bl	ay_sys_getnewinfo__Fv
	subs	r4, r0, #0
	beq	.L3117
	mov	r0, #24
	bl	__builtin_new
	cmp	r0, #0
	movne	r1, r4
	blne	__15Cayfly_s60AudioP10AYSongInfo
.L3108:
	ldr	r3, .L3130
	str	r0, [r4, r3]
	mov	r3, r0
	cmp	r3, #0
	bne	.L3109
	cmp	r4, #0
	movne	r0, r4
	movne	r1, #3
	blne	_._10AYSongInfo
.L3111:
	mov	r0, #0
	b	.L3128
.L3131:
	.align	0
.L3130:
	.word	67136
.L3109:
	add	r0, r4, #1040
	add	r1, sp, #8
	bl	Copy__6TDes16RC7TDesC16
	ldr	r2, .L3132
	ldr	r3, [sp, #528]
	str	r3, [r4, r2]
	mov	r0, r4
	bl	ay_sys_initz80__FR10AYSongInfo
	tst	r0, #255
	beq	.L3129
	mov	r0, r4
	bl	ay_sys_readfromfile__FR10AYSongInfo
	tst	r0, #255
	beq	.L3129
	mov	r0, r4
	bl	ay_sys_initsong__FR10AYSongInfo
	tst	r0, #255
	bne	.L3122
.L3129:
	cmp	r4, #0
	movne	r0, r4
	movne	r1, #3
	blne	_._10AYSongInfo
.L3124:
	mov	r4, #0
	b	.L3117
.L3133:
	.align	0
.L3132:
	.word	67172
.L3122:
	mov	r3, #1568
	ldrb	r3, [r4, r3]	@ zero_extendqisi2
	cmp	r3, #0
	bne	.L3126
	ldr	r3, [r4, #1572]
	cmp	r3, #0
	movne	r0, r4
	movne	lr, pc
	bxne	r3
.L3126:
	mvn	r3, #0
	str	r3, [r4, #1560]
.L3117:
	mov	r0, r4
.L3128:
	ldmfd	sp!, {r4, lr}
	add	sp, sp, #16
	bx	lr
	.align	0
	.global	ay_initsongindirect
ay_initsongindirect:
	@ args = 524, pretend = 8, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	sub	sp, sp, #8
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}
	mov	r7, r0
	mov	r8, r1
	add	r1, sp, #24
	stmia	r1, {r2-r3}	@ str multiple
	ldr	r6, [sp, #544]
	bl	ay_sys_getnewinfo__Fv
	subs	r4, r0, #0
	beq	.L3152
	add	r0, r4, #1040
	add	r1, sp, #24
	bl	Copy__6TDes16RC7TDesC16
	ldr	r3, .L3163
	str	r6, [r4, r3]
	cmp	r6, #65536
	bcc	.L3137
	mov	r5, r6
	b	.L3138
.L3164:
	.align	0
.L3163:
	.word	67132
.L3137:
	mov	r5, #65536
.L3138:
	mov	r0, r5
	bl	__builtin_vec_new
	str	r0, [r4, #1592]
	cmp	r0, #0
	beq	.L3161
	ldr	r0, [r4, #1592]
	mov	r1, #0
	mov	r2, r5
	bl	memset
	ldr	r0, [r4, #1592]
	mov	r1, r7
	mov	r2, r6
	bl	memcpy
	mov	r0, r5
	bl	__builtin_vec_new
	str	r0, [r4, #1588]
	cmp	r0, #0
	beq	.L3161
	ldr	r3, .L3165
	str	r8, [r4, r3]
	mov	r0, #24
	bl	__builtin_new
	cmp	r0, #0
	movne	r1, r4
	blne	__15Cayfly_s60AudioP10AYSongInfo
.L3145:
	ldr	r3, .L3165+4
	str	r0, [r4, r3]
	mov	r3, r0
	cmp	r3, #0
	bne	.L3146
.L3161:
	cmp	r4, #0
	movne	r0, r4
	movne	r1, #3
	blne	_._10AYSongInfo
.L3148:
	mov	r0, #0
	b	.L3160
.L3166:
	.align	0
.L3165:
	.word	67172
	.word	67136
.L3146:
	mov	r0, r4
	bl	ay_sys_initsong__FR10AYSongInfo
	tst	r0, #255
	beq	.L3162
	mov	r0, r4
	bl	ay_sys_initz80__FR10AYSongInfo
	tst	r0, #255
	bne	.L3153
.L3162:
	cmp	r4, #0
	movne	r0, r4
	movne	r1, #3
	blne	_._10AYSongInfo
.L3155:
	mov	r4, #0
	b	.L3152
.L3153:
	mov	r3, #1568
	ldrb	r3, [r4, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L3157
	mov	r0, r4
	bl	ay_sys_resetz80__FR10AYSongInfo
	b	.L3158
.L3157:
	ldr	r3, [r4, #1572]
	cmp	r3, #0
	movne	r0, r4
	movne	lr, pc
	bxne	r3
.L3158:
	mvn	r3, #0
	str	r3, [r4, #1560]
.L3152:
	mov	r0, r4
.L3160:
	ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
	add	sp, sp, #8
	bx	lr
	.align	0
	.global	ay_getsonginfo
ay_getsonginfo:
	@ args = 520, pretend = 16, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	sub	sp, sp, #16
	stmfd	sp!, {r4, lr}
	add	ip, sp, #8
	stmia	ip, {r0-r3}	@ str multiple
	bl	ay_sys_getnewinfo__Fv
	subs	r4, r0, #0
	beq	.L3170
	add	r0, r4, #1040
	add	r1, sp, #8
	bl	Copy__6TDes16RC7TDesC16
	mov	r0, r4
	bl	ay_sys_getsonginfo__FR10AYSongInfo
	tst	r0, #255
	bne	.L3170
	cmp	r4, #0
	movne	r0, r4
	movne	r1, #3
	blne	_._10AYSongInfo
.L3172:
	mov	r4, #0
.L3170:
	mov	r0, r4
	ldmfd	sp!, {r4, lr}
	add	sp, sp, #16
	bx	lr
	.align	0
	.global	ay_getsonginfoindirect
ay_getsonginfoindirect:
	@ args = 524, pretend = 12, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	sub	sp, sp, #12
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r7, r0
	add	r0, sp, #20
	stmia	r0, {r1-r3}	@ str multiple
	ldr	r6, [sp, #540]
	bl	ay_sys_getnewinfo__Fv
	subs	r4, r0, #0
	beq	.L3185
	add	r0, r4, #1040
	add	r1, sp, #20
	bl	Copy__6TDes16RC7TDesC16
	cmp	r6, #65536
	movcs	r5, r6
.L3177:
	movcc	r5, #65536
.L3178:
	mov	r0, r5
	bl	__builtin_vec_new
	str	r0, [r4, #1592]
	cmp	r0, #0
	beq	.L3189
	ldr	r0, [r4, #1592]
	mov	r1, #0
	mov	r2, r5
	bl	memset
	ldr	r0, [r4, #1592]
	mov	r1, r7
	mov	r2, r6
	bl	memcpy
	mov	r0, r5
	bl	__builtin_vec_new
	str	r0, [r4, #1588]
	cmp	r0, #0
	bne	.L3182
.L3189:
	cmp	r4, #0
	movne	r0, r4
	movne	r1, #3
	blne	_._10AYSongInfo
.L3184:
	mov	r0, #0
	b	.L3188
.L3182:
	ldr	r0, [r4, #1592]
	mov	r1, r7
	mov	r2, r6
	bl	memcpy
	mov	r0, r4
	bl	ay_sys_getsonginfoindirect__FR10AYSongInfo
	tst	r0, #255
	bne	.L3185
	cmp	r4, #0
	movne	r0, r4
	movne	r1, #3
	blne	_._10AYSongInfo
.L3187:
	mov	r4, #0
.L3185:
	mov	r0, r4
.L3188:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	add	sp, sp, #12
	bx	lr
	.align	0
	.global	ay_getsongname
ay_getsongname:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	add	r1, r1, #520
	mov	r2, #520
	bl	memcpy
	mov	r0, r4
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	ay_getsongauthor
ay_getsongauthor:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	mov	r2, #520
	bl	memcpy
	mov	r0, r4
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	ay_getsongpath
ay_getsongpath:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	add	r1, r1, #1040
	mov	r2, #520
	bl	memcpy
	mov	r0, r4
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	ay_seeksong
ay_seeksong:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	@ I don't think this function clobbers lr
	b	ay_sys_rewindsong__FR10AYSongInfol
	.align	0
	.global	ay_resetsong
ay_resetsong:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldr	r3, .L3202
	ldr	r0, [r4, r3]
	cmp	r0, #0
	beq	.L3194
	ldrb	r5, [r0, #4]	@ zero_extendqisi2
	cmp	r5, #0
	ldrne	r3, [r0, #16]
	ldrne	ip, [r3, #16]
	movne	lr, pc
	bxne	ip
.L3197:
	ldr	r2, .L3202+4
	mov	r3, #0
	str	r3, [r4, r2]
	mov	r0, r4
	bl	ay_sys_initsong__FR10AYSongInfo
	mov	r3, #1568
	ldrb	r3, [r4, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L3198
	mov	r0, r4
	bl	ay_sys_resetz80__FR10AYSongInfo
	b	.L3199
.L3203:
	.align	0
.L3202:
	.word	67136
	.word	67144
.L3198:
	ldr	r3, [r4, #1572]
	cmp	r3, #0
	movne	r0, r4
	movne	lr, pc
	bxne	r3
.L3199:
	cmp	r5, #0
	beq	.L3194
	ldr	r3, .L3205
	ldr	r0, [r4, r3]
	ldr	r3, [r0, #16]
	ldr	ip, [r3, #12]
	mov	lr, pc
	bx	ip
	b	.L3204
.L3206:
	.align	0
.L3205:
	.word	67136
.L3204:
.L3194:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
	.global	ay_closesong
ay_closesong:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	ldr	r3, [r0, #0]
	mov	r4, r0
	cmp	r3, #0
	movne	r0, r3
	movne	r1, #3
	blne	_._10AYSongInfo
.L3209:
	mov	r3, #0
	str	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	ay_setvolume
ay_setvolume:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3214
	ldr	r3, [r0, r3]
	ldr	r3, [r3, #12]
	cmp	r3, #0
	addne	r3, r3, #184
	strne	r2, [r3, r1, asl #2]	@ float
	bx	lr
.L3215:
	.align	0
.L3214:
	.word	67136
	.align	0
	.global	ay_getvolume
ay_getvolume:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3220
	ldr	r3, [r0, r3]
	ldr	r3, [r3, #12]
	cmp	r3, #0
	beq	.L3217
	add	r3, r3, #184
	ldr	r0, [r3, r1, asl #2]	@ float
	bx	lr
.L3221:
	.align	0
.L3220:
	.word	67136
.L3217:
	ldr	r0, .L3222	@ float
	bx	lr
.L3223:
	.align	0
.L3222:
	.word 0x0	@ float 3.23785921002060922726e-319
	.align	0
	.global	ay_chnlmute
ay_chnlmute:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	ldr	r3, .L3225
	ldr	r0, [r0, r3]
	ldr	r3, [r0, #16]
	ldr	ip, [r3, #24]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
.L3226:
	.align	0
.L3225:
	.word	67136
	.align	0
	.global	ay_chnlmuted
ay_chnlmuted:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	ldr	r3, .L3228
	ldr	r0, [r0, r3]
	ldr	r3, [r0, #16]
	ldr	ip, [r3, #28]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
.L3229:
	.align	0
.L3228:
	.word	67136
	.align	0
	.global	ay_setcallback
ay_setcallback:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3231
	str	r1, [r0, r3]
	ldr	r3, .L3231+4
	str	r2, [r0, r3]
	bx	lr
.L3232:
	.align	0
.L3231:
	.word	67148
	.word	67152
	.align	0
	.global	ay_songstarted
ay_songstarted:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3235
	ldr	r3, [r0, r3]
	ldrb	r0, [r3, #4]
	bx	lr
.L3236:
	.align	0
.L3235:
	.word	67136
	.align	0
	.global	ay_startsong
ay_startsong:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	bl	ay_songstarted
	tst	r0, #255
	bne	.L3238
	ldr	r3, .L3240
	ldr	r0, [r4, r3]
	ldr	r3, [r0, #16]
	ldr	ip, [r3, #12]
	mov	lr, pc
	bx	ip
	b	.L3239
.L3241:
	.align	0
.L3240:
	.word	67136
.L3239:
.L3238:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	ay_stopsong
ay_stopsong:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	bl	ay_songstarted
	tst	r0, #255
	beq	.L3243
	ldr	r3, .L3245
	ldr	r0, [r4, r3]
	ldr	r3, [r0, #16]
	ldr	ip, [r3, #16]
	mov	lr, pc
	bx	ip
	b	.L3244
.L3246:
	.align	0
.L3245:
	.word	67136
.L3244:
.L3243:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	ay_getsonglength
ay_getsonglength:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r0, [r0, #1560]
	bx	lr
	.align	0
	.global	ay_getelapsedtime
ay_getelapsedtime:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3249
	ldr	r0, [r0, r3]
	bx	lr
.L3250:
	.align	0
.L3249:
	.word	67144
	.align	0
	.global	ay_getsongloop
ay_getsongloop:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r0, [r0, #1564]
	bx	lr
	.align	0
	.global	ay_getregs
ay_getregs:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3256
	ldr	r3, [r0, r3]
	ldr	r0, [r3, #12]
	cmp	r0, #0
	beq	.L3253
	add	r0, r0, #64
	bx	lr
.L3257:
	.align	0
.L3256:
	.word	67136
.L3253:
	mov	r0, #0
	bx	lr
	.align	0
	.global	ay_rendersongbuffer
ay_rendersongbuffer:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	mov	r5, r1
	mov	r6, r2
	bl	ay_stopsong
	ldr	r3, .L3261
	ldr	r3, [r4, r3]
	ldr	r0, [r3, #12]
	mov	r1, r5
	mov	r2, r6
	bl	ayProcess__2ayPUcUl
	b	.L3260
.L3262:
	.align	0
.L3261:
	.word	67136
.L3260:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
	.global	ay_getz80freq
ay_getz80freq:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3264
	ldr	r0, [r0, r3]
	bx	lr
.L3265:
	.align	0
.L3264:
	.word	67160
	.align	0
	.global	ay_setz80freq
ay_setz80freq:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	@ I don't think this function clobbers lr
	ldr	r3, .L3268
	str	r1, [r0, r3]
	ldr	r3, .L3268+4
	ldr	r3, [r0, r3]
	ldr	r0, [r3, #12]
	b	SetParameters__2ay
.L3269:
	.align	0
.L3268:
	.word	67160
	.word	67136
	.align	0
	.global	ay_getayfreq
ay_getayfreq:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3271
	ldr	r0, [r0, r3]
	bx	lr
.L3272:
	.align	0
.L3271:
	.word	67164
	.align	0
	.global	ay_setayfreq
ay_setayfreq:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	@ I don't think this function clobbers lr
	ldr	r3, .L3275
	str	r1, [r0, r3]
	ldr	r3, .L3275+4
	ldr	r3, [r0, r3]
	ldr	r0, [r3, #12]
	b	SetParameters__2ay
.L3276:
	.align	0
.L3275:
	.word	67164
	.word	67136
	.align	0
	.global	ay_getintfreq
ay_getintfreq:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3278
	ldr	r0, [r0, r3]
	bx	lr
.L3279:
	.align	0
.L3278:
	.word	67168
	.align	0
	.global	ay_setintfreq
ay_setintfreq:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	@ I don't think this function clobbers lr
	ldr	r3, .L3282
	str	r1, [r0, r3]
	ldr	r3, .L3282+4
	ldr	r3, [r0, r3]
	ldr	r0, [r3, #12]
	b	SetParameters__2ay
.L3283:
	.align	0
.L3282:
	.word	67168
	.word	67136
	.align	0
	.global	ay_setsongplayer
ay_setsongplayer:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	mov	r6, r1
	ldr	r5, .L3289
	ldr	r3, [r4, r5]
	cmp	r3, #0
	beq	.L3285
	bl	ay_stopsong
	ldr	r0, [r4, r5]
	cmp	r0, #0
	ldrne	r3, [r0, #16]
	movne	r1, #3
	ldrne	ip, [r3, #8]
	movne	lr, pc
	bxne	ip
.L3287:
	ldr	r2, .L3289
	mov	r3, #0
	str	r3, [r4, r2]
.L3285:
	ldr	r3, .L3289
	str	r6, [r4, r3]
	b	.L3288
.L3290:
	.align	0
.L3289:
	.word	67136
.L3288:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
	.global	ay_getsongplayer
ay_getsongplayer:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r3, .L3292
	ldr	r0, [r0, r3]
	bx	lr
.L3293:
	.align	0
.L3292:
	.word	67136
	.align	0
	.global	ay_z80xec
ay_z80xec:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	@ I don't think this function clobbers lr
	b	ay_sys_z80exec__FR10AYSongInfo
	.align	0
	.global	_._10AYSongInfo
_._10AYSongInfo:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	mov	r6, r1
	ldr	r3, .L3311
	ldr	r0, [r4, r3]
	cmp	r0, #0
	ldrne	r3, [r0, #16]
	ldrne	ip, [r3, #16]
	movne	lr, pc
	bxne	ip
.L3296:
	ldr	r3, [r4, #1580]
	cmp	r3, #0
	movne	r0, r4
	movne	lr, pc
	bxne	r3
.L3297:
	ldr	r5, .L3311
	ldr	r0, [r4, r5]
	cmp	r0, #0
	beq	.L3298
	ldr	r3, [r0, #16]
	mov	r1, #3
	ldr	ip, [r3, #8]
	mov	lr, pc
	bx	ip
	mov	r3, #0
	str	r3, [r4, r5]
.L3298:
	ldr	r0, [r4, #1588]
	cmp	r0, #0
	beq	.L3301
	bl	__builtin_vec_delete
	mov	r3, #0
	str	r3, [r4, #1588]
.L3301:
	ldr	r0, [r4, #1592]
	cmp	r0, #0
	beq	.L3307
	bl	__builtin_vec_delete
	mov	r3, #0
	str	r3, [r4, #1592]
.L3307:
	tst	r6, #1
	beq	.L3309
	mov	r0, r4
	bl	__builtin_delete
	b	.L3310
.L3312:
	.align	0
.L3311:
	.word	67136
.L3310:
.L3309:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.section .text$Delete__t13CleanupDelete1Z11MDataSourcePv,"x"
	.linkonce discard
	.align	0
	.global	Delete__t13CleanupDelete1Z11MDataSourcePv
Delete__t13CleanupDelete1Z11MDataSourcePv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	cmp	r0, #0
	ldmeqfd	sp!, {ip}
	bxeq	ip
	ldr	r3, [r0, #8]
	mov	r1, #3
	ldr	ip, [r3, #8]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.section .text$Delete__t13CleanupDelete1Z9MDataSinkPv,"x"
	.linkonce discard
	.align	0
	.global	Delete__t13CleanupDelete1Z9MDataSinkPv
Delete__t13CleanupDelete1Z9MDataSinkPv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	cmp	r0, #0
	ldmeqfd	sp!, {ip}
	bxeq	ip
	ldr	r3, [r0, #8]
	mov	r1, #3
	ldr	ip, [r3, #8]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
