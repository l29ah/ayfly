@ Generated by gcc 2.9-psion-98r2 (Symbian build 539) for ARM/pe
	.file	"z80ex.cpp"
.gcc2_compiled.:
.text
	.align	0
op_0x00__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x01__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L5
.L4:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L5:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L6
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L7
.L6:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L7:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0x02__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #1]
	strb	r3, [ip, #148]
	strb	r3, [ip, #61]
	ldrb	r3, [ip, #4]
	add	r3, r3, #1
	strb	r3, [ip, #60]
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	ldrb	r1, [ip, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x03__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r0, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x04__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #5]
	add	r2, r2, #1
	strb	r2, [r0, #5]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #5]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L17
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L14
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L15
.L18:
	.align	0
.L17:
	.word	sz53_table
.L14:
	orr	r1, ip, r1
.L15:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_0x05__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #5]
	tst	ip, #15
	orreq	r3, r3, #18
.L20:
	orrne	r3, r3, #2
.L21:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #5]
	sub	r3, r3, #1
	strb	r3, [r0, #5]
	ldr	r3, .L25
	ldrb	r2, [r0, #5]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L22:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L26:
	.align	0
.L25:
	.word	sz53_table
	.align	0
op_0x06__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L28
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L29
.L28:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L29:
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x07__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	mov	r2, r3, asl #1
	orr	r2, r2, r3, lsr #7
	strb	r2, [r0, #1]
	ldrb	r3, [r0, #0]
	and	r3, r3, #196
	and	r2, r2, #41
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
	.align	0
op_0x08__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 0, current_function_anonymous_args = 0
	sub	sp, sp, #4
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	ldrb	r1, [r0, #1]	@ zero_extendqisi2
	orr	r3, r3, r1, asl #8
	ldrb	r1, [r0, #16]	@ zero_extendqisi2
	ldrb	r2, [r0, #17]	@ zero_extendqisi2
	orr	r2, r1, r2, asl #8
	strh	r2, [r0, #0]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #16]	@ movhi   ;; CYGNUS LOCAL nickc
	add	sp, sp, #4
	bx	lr
	.align	0
op_0x09__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #5]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #12]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #4]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L40
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L36
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L39
.L41:
	.align	0
.L40:
	.word	halfcarry_add_table
.L36:
	orr	r1, lr, r0
.L39:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x0a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x0b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r0, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x0c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #4]
	add	r2, r2, #1
	strb	r2, [r0, #4]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #4]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L50
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L47
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L48
.L51:
	.align	0
.L50:
	.word	sz53_table
.L47:
	orr	r1, ip, r1
.L48:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_0x0d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #4]
	tst	ip, #15
	orreq	r3, r3, #18
.L53:
	orrne	r3, r3, #2
.L54:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #4]
	sub	r3, r3, #1
	strb	r3, [r0, #4]
	ldr	r3, .L58
	ldrb	r2, [r0, #4]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L55:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L59:
	.align	0
.L58:
	.word	sz53_table
	.align	0
op_0x0e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L61
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L62
.L61:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L62:
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x0f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #0]
	and	r2, r2, #196
	ldrb	r3, [r0, #1]
	and	r1, r3, #1
	orr	r2, r2, r1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #1]
	and	r3, r3, #40
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
	.align	0
op_0x10__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L67
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L68
.L67:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L68:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L69:
	ldreqb	r3, [r4, #148]
.L70:
	strb	r3, [r4, #149]
	ldrb	r3, [r4, #5]
	sub	r3, r3, #1
	strb	r3, [r4, #5]
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L66
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #52]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L66:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x11__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L75
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L76
.L75:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L76:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L77
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L78
.L77:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L78:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0x12__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #1]
	strb	r3, [ip, #148]
	strb	r3, [ip, #61]
	ldrb	r3, [ip, #8]
	add	r3, r3, #1
	strb	r3, [ip, #60]
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	ldrb	r1, [ip, #9]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x13__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #8]	@ movhi
	add	r3, r3, #1
	strh	r3, [r0, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x14__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #9]
	add	r2, r2, #1
	strb	r2, [r0, #9]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #9]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L88
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L85
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L86
.L89:
	.align	0
.L88:
	.word	sz53_table
.L85:
	orr	r1, ip, r1
.L86:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_0x15__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #9]
	tst	ip, #15
	orreq	r3, r3, #18
.L91:
	orrne	r3, r3, #2
.L92:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #9]
	sub	r3, r3, #1
	strb	r3, [r0, #9]
	ldr	r3, .L96
	ldrb	r2, [r0, #9]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L93:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L97:
	.align	0
.L96:
	.word	sz53_table
	.align	0
op_0x16__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L99
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L100
.L99:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L100:
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x17__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	ip, [r0, #1]	@ zero_extendqisi2
	ldrb	r1, [r0, #1]
	ldrb	r3, [r0, #0]
	and	r2, r3, #1
	orr	r2, r2, r1, asl #1
	strb	r2, [r0, #1]
	and	r3, r3, #196
	and	r2, r2, #40
	orr	r3, r3, r2
	orr	r3, r3, ip, lsr #7
	strb	r3, [r0, #0]
	bx	lr
	.align	0
op_0x18__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L105
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L106
.L105:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L106:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L107:
	ldreqb	r3, [r4, #148]
.L108:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #52]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x19__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	ldrb	r2, [ip, #9]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #12]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #8]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L115
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L111
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L114
.L116:
	.align	0
.L115:
	.word	halfcarry_add_table
.L111:
	orr	r1, lr, r0
.L114:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x1a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #8]	@ zero_extendqisi2
	ldrb	r1, [r4, #9]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrh	r3, [r4, #8]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x1b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #8]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r0, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x1c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #8]
	add	r2, r2, #1
	strb	r2, [r0, #8]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #8]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L125
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L122
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L123
.L126:
	.align	0
.L125:
	.word	sz53_table
.L122:
	orr	r1, ip, r1
.L123:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_0x1d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #8]
	tst	ip, #15
	orreq	r3, r3, #18
.L128:
	orrne	r3, r3, #2
.L129:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #8]
	sub	r3, r3, #1
	strb	r3, [r0, #8]
	ldr	r3, .L133
	ldrb	r2, [r0, #8]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L130:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L134:
	.align	0
.L133:
	.word	sz53_table
	.align	0
op_0x1e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L136
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L137
.L136:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L137:
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x1f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r2, r3, asl #7
	orr	r2, r2, r1, lsr #1
	strb	r2, [r0, #1]
	and	r3, r3, #196
	and	r2, r2, #40
	orr	r3, r3, r2
	and	r1, r1, #1
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
	.align	0
op_0x20__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L142
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L143
.L142:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L143:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L144:
	ldreqb	r3, [r4, #148]
.L145:
	strb	r3, [r4, #149]
	ldrb	ip, [r4, #0]
	tst	ip, #64
	bne	.L141
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #52]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L141:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x21__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L150
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L151
.L150:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L151:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L152
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L153
.L152:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L153:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0x22__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L156
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L157
.L156:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L157:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L158
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L159
.L158:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L159:
	strb	r0, [r4, #145]
	ldrb	r5, [r4, #12]	@ zero_extendqisi2
	ldrb	r6, [r4, #13]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0x23__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r0, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x24__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #13]
	add	r2, r2, #1
	strb	r2, [r0, #13]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #13]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L167
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L164
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L165
.L168:
	.align	0
.L167:
	.word	sz53_table
.L164:
	orr	r1, ip, r1
.L165:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_0x25__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #13]
	tst	ip, #15
	orreq	r3, r3, #18
.L170:
	orrne	r3, r3, #2
.L171:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #13]
	sub	r3, r3, #1
	strb	r3, [r0, #13]
	ldr	r3, .L175
	ldrb	r2, [r0, #13]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L172:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L176:
	.align	0
.L175:
	.word	sz53_table
	.align	0
op_0x26__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L178
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L179
.L178:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L179:
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x27__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #1]	@ zero_extendqisi2
	ldrb	r2, [r0, #0]
	and	r2, r2, #3
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	mov	r3, r3, lsr #2
	and	r3, r3, #4
	add	r2, r2, r3
	orr	r1, r1, r2, asl #8
	mov	r1, r1, asl #1
	ldr	r3, .L183
	add	r2, r1, r3
	ldrb	r3, [r1, r3]
	strb	r3, [r0, #0]
	ldrb	r3, [r2, #1]
	strb	r3, [r0, #1]
	bx	lr
.L184:
	.align	0
.L183:
	.word	daatab
	.align	0
op_0x28__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L186
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L187
.L186:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L187:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L188:
	ldreqb	r3, [r4, #148]
.L189:
	strb	r3, [r4, #149]
	ldrb	ip, [r4, #0]
	tst	ip, #64
	beq	.L185
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #52]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L185:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x29__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	mov	r1, r1, asl #1
	ldrh	r0, [ip, #12]	@ movhi
	and	r2, r0, #2048
	cmp	r2, #0
	movne	r2, #3
	moveq	r2, #0
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L198
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L194
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L197
.L199:
	.align	0
.L198:
	.word	halfcarry_add_table
.L194:
	orr	r1, lr, r0
.L197:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x2a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L201
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L202
.L201:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L202:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L203
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L204
.L203:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L204:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0x2b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r0, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x2c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]
	add	r2, r2, #1
	strb	r2, [r0, #12]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #12]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L212
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L209
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L210
.L213:
	.align	0
.L212:
	.word	sz53_table
.L209:
	orr	r1, ip, r1
.L210:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_0x2d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #12]
	tst	ip, #15
	orreq	r3, r3, #18
.L215:
	orrne	r3, r3, #2
.L216:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #12]
	sub	r3, r3, #1
	strb	r3, [r0, #12]
	ldr	r3, .L220
	ldrb	r2, [r0, #12]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L217:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L221:
	.align	0
.L220:
	.word	sz53_table
	.align	0
op_0x2e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L223
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L224
.L223:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L224:
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x2f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]
	mvn	r2, r2
	strb	r2, [r0, #1]
	ldrb	r3, [r0, #0]
	and	r3, r3, #197
	and	r2, r2, #40
	orr	r3, r3, r2
	orr	r3, r3, #18
	strb	r3, [r0, #0]
	bx	lr
	.align	0
op_0x30__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L229
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L230
.L229:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L230:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L231:
	ldreqb	r3, [r4, #148]
.L232:
	strb	r3, [r4, #149]
	ldrb	r3, [r4, #0]
	eor	r3, r3, #1
	tst	r3, #1
	beq	.L228
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #52]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L228:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x31__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L237
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L238
.L237:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L238:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L239
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L240
.L239:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L240:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0x32__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L243
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L244
.L243:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L244:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L245
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L246
.L245:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L246:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #1]
	strb	r3, [r4, #148]
	strb	r3, [r4, #61]
	ldrb	r3, [r4, #144]
	add	r3, r3, #1
	strb	r3, [r4, #60]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x33__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #48]	@ movhi
	add	r3, r3, #1
	strh	r3, [r0, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x34__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	add	r0, r0, #1
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	cmp	r2, #128
	movne	r1, #0
	moveq	r1, #1
	orr	r1, r3, r1, asl #2
	ldr	r3, .L254
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r0, #15
	bne	.L251
	orr	r3, r2, #16
	orr	r2, r1, r3
	b	.L252
.L255:
	.align	0
.L254:
	.word	sz53_table
.L251:
	orr	r2, r1, r2
.L252:
	strb	r2, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x35__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	tst	r0, #15
	orreq	r3, r3, #18
.L257:
	orrne	r3, r3, #2
.L258:
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #148]
	sub	r3, r3, #1
	strb	r3, [r4, #148]
	ldr	r3, .L263
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L259:
	orr	r3, r3, r1
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L262
.L264:
	.align	0
.L263:
	.word	sz53_table
.L262:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x36__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L266
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L267
.L266:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L267:
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x37__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #196
	ldrb	r2, [r0, #1]
	and	r2, r2, #40
	orr	r3, r3, r2
	orr	r3, r3, #1
	strb	r3, [r0, #0]
	bx	lr
	.align	0
op_0x38__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L272
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L273
.L272:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L273:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L274:
	ldreqb	r3, [r4, #148]
.L275:
	strb	r3, [r4, #149]
	ldrb	ip, [r4, #0]
	tst	ip, #1
	beq	.L271
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #52]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L271:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x39__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #48]	@ zero_extendqisi2
	ldrb	r2, [ip, #49]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #12]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #48]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L284
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L280
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L283
.L285:
	.align	0
.L284:
	.word	halfcarry_add_table
.L280:
	orr	r1, lr, r0
.L283:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x3a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L287
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L288
.L287:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L288:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L289
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L290
.L289:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L290:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x3b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #48]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r0, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x3c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]
	add	r2, r2, #1
	strb	r2, [r0, #1]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #1]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L298
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L295
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L296
.L299:
	.align	0
.L298:
	.word	sz53_table
.L295:
	orr	r1, ip, r1
.L296:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_0x3d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #1]
	tst	ip, #15
	orreq	r3, r3, #18
.L301:
	orrne	r3, r3, #2
.L302:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #1]
	sub	r3, r3, #1
	strb	r3, [r0, #1]
	ldr	r3, .L306
	ldrb	r2, [r0, #1]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L303:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L307:
	.align	0
.L306:
	.word	sz53_table
	.align	0
op_0x3e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L309
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L310
.L309:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L310:
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x3f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #0]
	and	r1, r2, #196
	ldrb	r3, [r0, #1]
	and	r3, r3, #40
	tst	r2, #1
	orrne	r3, r3, #16
.L313:
	orreq	r3, r3, #1
.L316:
	orr	r2, r1, r3
	strb	r2, [r0, #0]
	bx	lr
	.align	0
op_0x40__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x41__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_0x42__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_0x43__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_0x44__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_0x45__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_0x46__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x47__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_0x48__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_0x49__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x4a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_0x4b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_0x4c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_0x4d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_0x4e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x4f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_0x50__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_0x51__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_0x52__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x53__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_0x54__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_0x55__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_0x56__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x57__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_0x58__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_0x59__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_0x5a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_0x5b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x5c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_0x5d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_0x5e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x5f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_0x60__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_0x61__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_0x62__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_0x63__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_0x64__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x65__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_0x66__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x67__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_0x68__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_0x69__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_0x6a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_0x6b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_0x6c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_0x6d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x6e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x6f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_0x70__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #5]
	strb	r3, [ip, #148]
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	ldrb	r1, [ip, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x71__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #4]
	strb	r3, [ip, #148]
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	ldrb	r1, [ip, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x72__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #9]
	strb	r3, [ip, #148]
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	ldrb	r1, [ip, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x73__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #8]
	strb	r3, [ip, #148]
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	ldrb	r1, [ip, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x74__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #13]
	strb	r3, [ip, #148]
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	ldrb	r1, [ip, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x75__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #12]
	strb	r3, [ip, #148]
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	ldrb	r1, [ip, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x76__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #1
	str	r3, [r0, #68]
	ldrh	r3, [r0, #52]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r0, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0x77__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r3, [ip, #1]
	strb	r3, [ip, #148]
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	ldrb	r1, [ip, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [ip, #148]	@ zero_extendqisi2
	ldr	r3, [ip, #128]
	ldr	ip, [ip, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x78__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_0x79__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_0x7a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_0x7b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_0x7c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_0x7d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_0x7e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x7f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_0x80__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #5]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #5]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L450
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L450+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L450+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L446
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L449
.L451:
	.align	0
.L450:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L446:
	orr	r3, lr, r1
.L449:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x81__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #4]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L457
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L457+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L457+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L453
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L456
.L458:
	.align	0
.L457:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L453:
	orr	r3, lr, r1
.L456:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x82__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #9]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #9]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L464
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L464+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L464+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L460
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L463
.L465:
	.align	0
.L464:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L460:
	orr	r3, lr, r1
.L463:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x83__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #8]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L471
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L471+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L471+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L467
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L470
.L472:
	.align	0
.L471:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L467:
	orr	r3, lr, r1
.L470:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x84__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #13]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L478
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L478+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L478+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L474
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L477
.L479:
	.align	0
.L478:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L474:
	orr	r3, lr, r1
.L477:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x85__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #12]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L485
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L485+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L485+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L481
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L484
.L486:
	.align	0
.L485:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L481:
	orr	r3, lr, r1
.L484:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x86__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r1, r1, r3
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	and	r3, r1, #136
	orr	r0, r0, r3, lsr #1
	strb	r1, [r4, #1]
	ldr	r2, .L492
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L492+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L492+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L488
	orr	r3, r0, #1
	orr	r3, ip, r3
	b	.L491
.L493:
	.align	0
.L492:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L488:
	orr	r3, ip, r0
.L491:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x87__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #1]
	and	r3, r3, #136
	mov	r2, r3, lsr #2
	orr	r2, r2, r3, lsr #3
	mov	r0, r1, asl #1
	and	r1, r1, #68
	orr	r1, r1, r2
	strb	r0, [ip, #1]
	ldr	r2, .L499
	and	r3, r1, #7
	ldrb	lr, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L499+4
	ldrb	r1, [r3, r1, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L499+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L495
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L498
.L500:
	.align	0
.L499:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L495:
	orr	r3, lr, r1
.L498:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x88__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #5]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #5]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L506
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L506+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L506+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L502
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L505
.L507:
	.align	0
.L506:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L502:
	orr	r3, lr, r0
.L505:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x89__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #4]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L513
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L513+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L513+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L509
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L512
.L514:
	.align	0
.L513:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L509:
	orr	r3, lr, r0
.L512:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x8a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #9]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #9]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L520
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L520+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L520+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L516
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L519
.L521:
	.align	0
.L520:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L516:
	orr	r3, lr, r0
.L519:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x8b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #8]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L527
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L527+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L527+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L523
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L526
.L528:
	.align	0
.L527:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L523:
	orr	r3, lr, r0
.L526:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x8c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #13]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L534
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L534+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L534+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L530
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L533
.L535:
	.align	0
.L534:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L530:
	orr	r3, lr, r0
.L533:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x8d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #12]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L541
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L541+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L541+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L537
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L540
.L542:
	.align	0
.L541:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L537:
	orr	r3, lr, r0
.L540:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x8e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [r4, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	and	r3, r1, #136
	orr	r0, r0, r3, lsr #1
	strb	r1, [r4, #1]
	ldr	r2, .L548
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L548+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L548+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L544
	orr	r3, r0, #1
	orr	r3, ip, r3
	b	.L547
.L549:
	.align	0
.L548:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L544:
	orr	r3, ip, r0
.L547:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x8f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #1]	@ zero_extendqisi2
	ldrb	r0, [ip, #0]
	and	r0, r0, #1
	ldrb	r3, [ip, #1]
	and	r3, r3, #136
	mov	r2, r3, lsr #2
	orr	r2, r2, r3, lsr #3
	orr	r0, r0, r1, asl #1
	and	r1, r1, #68
	orr	r1, r1, r2
	strb	r0, [ip, #1]
	ldr	r2, .L555
	and	r3, r1, #7
	ldrb	lr, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L555+4
	ldrb	r1, [r3, r1, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L555+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L551
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L554
.L556:
	.align	0
.L555:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L551:
	orr	r3, lr, r1
.L554:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x90__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #5]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #5]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L562
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L562+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L562+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L558
	orr	r3, r1, #3
	b	.L561
.L563:
	.align	0
.L562:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L558:
	orr	r3, r1, #2
.L561:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x91__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #4]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L569
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L569+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L569+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L565
	orr	r3, r1, #3
	b	.L568
.L570:
	.align	0
.L569:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L565:
	orr	r3, r1, #2
.L568:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x92__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #9]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #9]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L576
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L576+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L576+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L572
	orr	r3, r1, #3
	b	.L575
.L577:
	.align	0
.L576:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L572:
	orr	r3, r1, #2
.L575:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x93__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #8]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L583
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L583+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L583+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L579
	orr	r3, r1, #3
	b	.L582
.L584:
	.align	0
.L583:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L579:
	orr	r3, r1, #2
.L582:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x94__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #13]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L590
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L590+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L590+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L586
	orr	r3, r1, #3
	b	.L589
.L591:
	.align	0
.L590:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L586:
	orr	r3, r1, #2
.L589:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x95__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #12]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L597
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L597+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L597+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L593
	orr	r3, r1, #3
	b	.L596
.L598:
	.align	0
.L597:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L593:
	orr	r3, r1, #2
.L596:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x96__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	rsb	r3, r2, r3
	mov	r3, r3, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r2, lsr #3
	mov	r1, r3, lsr #16
	and	r3, r3, #8912896
	orr	r0, r0, r3, lsr #17
	strb	r1, [r4, #1]
	ldr	r2, .L604
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L604+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L604+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L600
	orr	r3, r0, #3
	b	.L603
.L605:
	.align	0
.L604:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L600:
	orr	r3, r0, #2
.L603:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x97__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	ip, #0
	ldrb	r3, [r0, #1]
	and	r3, r3, #136
	mov	r2, r3, lsr #2
	orr	r2, r2, r3, lsr #3
	strb	ip, [r0, #1]
	ldr	r1, .L610
	and	r3, r2, #7
	ldrb	r1, [r1, r3]	@ zero_extendqisi2
	ldr	r3, .L610+4
	ldrb	r3, [r3, r2, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L610+8
	ldrb	r2, [r2, ip]	@ zero_extendqisi2
	orr	r3, r3, #2
	orr	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0]
	bx	lr
.L611:
	.align	0
.L610:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
	.align	0
op_0x98__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #5]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #5]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L617
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L617+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L617+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L613
	orr	r3, r1, #3
	b	.L616
.L618:
	.align	0
.L617:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L613:
	orr	r3, r1, #2
.L616:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x99__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #4]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L624
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L624+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L624+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L620
	orr	r3, r1, #3
	b	.L623
.L625:
	.align	0
.L624:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L620:
	orr	r3, r1, #2
.L623:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x9a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #9]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #9]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L631
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L631+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L631+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L627
	orr	r3, r1, #3
	b	.L630
.L632:
	.align	0
.L631:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L627:
	orr	r3, r1, #2
.L630:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x9b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #8]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L638
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L638+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L638+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L634
	orr	r3, r1, #3
	b	.L637
.L639:
	.align	0
.L638:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L634:
	orr	r3, r1, #2
.L637:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x9c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #13]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L645
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L645+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L645+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L641
	orr	r3, r1, #3
	b	.L644
.L646:
	.align	0
.L645:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L641:
	orr	r3, r1, #2
.L644:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x9d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #12]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #12]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L652
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L652+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L652+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L648
	orr	r3, r1, #3
	b	.L651
.L653:
	.align	0
.L652:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L648:
	orr	r3, r1, #2
.L651:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0x9e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	mov	r1, r2, lsr #16
	and	r2, r2, #8912896
	orr	r0, r0, r2, lsr #17
	strb	r1, [r4, #1]
	ldr	r2, .L659
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L659+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L659+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L655
	orr	r3, r0, #3
	b	.L658
.L660:
	.align	0
.L659:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L655:
	orr	r3, r0, #2
.L658:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0x9f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #0]
	and	r2, r2, #1
	rsb	r2, r2, #0
	mov	r2, r2, asl #16
	ldrb	r3, [ip, #1]
	and	r3, r3, #136
	mov	r1, r3, lsr #2
	orr	r1, r1, r3, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r1, r1, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r2, .L666
	and	r3, r1, #7
	ldrb	lr, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L666+4
	ldrb	r1, [r3, r1, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L666+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L662
	orr	r3, r1, #3
	b	.L665
.L667:
	.align	0
.L666:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L662:
	orr	r3, r1, #2
.L665:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_0xa0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #5]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L670
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L671:
	.align	0
.L670:
	.word	sz53p_table
	.align	0
op_0xa1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #4]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L674
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L675:
	.align	0
.L674:
	.word	sz53p_table
	.align	0
op_0xa2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #9]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L678
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L679:
	.align	0
.L678:
	.word	sz53p_table
	.align	0
op_0xa3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #8]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L682
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L683:
	.align	0
.L682:
	.word	sz53p_table
	.align	0
op_0xa4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #13]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L686
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L687:
	.align	0
.L686:
	.word	sz53p_table
	.align	0
op_0xa5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #12]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L690
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L691:
	.align	0
.L690:
	.word	sz53p_table
	.align	0
op_0xa6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	and	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L695
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r4, #0]
	b	.L694
.L696:
	.align	0
.L695:
	.word	sz53p_table
.L694:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xa7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, r3
	strb	r3, [r0, #1]
	ldr	r2, .L699
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L700:
	.align	0
.L699:
	.word	sz53p_table
	.align	0
op_0xa8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #5]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L703
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L704:
	.align	0
.L703:
	.word	sz53p_table
	.align	0
op_0xa9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #4]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L707
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L708:
	.align	0
.L707:
	.word	sz53p_table
	.align	0
op_0xaa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #9]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L711
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L712:
	.align	0
.L711:
	.word	sz53p_table
	.align	0
op_0xab__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #8]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L715
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L716:
	.align	0
.L715:
	.word	sz53p_table
	.align	0
op_0xac__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #13]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L719
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L720:
	.align	0
.L719:
	.word	sz53p_table
	.align	0
op_0xad__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #12]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L723
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L724:
	.align	0
.L723:
	.word	sz53p_table
	.align	0
op_0xae__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	eor	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L728
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L727
.L729:
	.align	0
.L728:
	.word	sz53p_table
.L727:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xaf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	eor	r3, r3, r3
	strb	r3, [r0, #1]
	ldr	r2, .L732
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L733:
	.align	0
.L732:
	.word	sz53p_table
	.align	0
op_0xb0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #5]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L736
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L737:
	.align	0
.L736:
	.word	sz53p_table
	.align	0
op_0xb1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #4]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L740
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L741:
	.align	0
.L740:
	.word	sz53p_table
	.align	0
op_0xb2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #9]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L744
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L745:
	.align	0
.L744:
	.word	sz53p_table
	.align	0
op_0xb3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #8]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L748
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L749:
	.align	0
.L748:
	.word	sz53p_table
	.align	0
op_0xb4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #13]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L752
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L753:
	.align	0
.L752:
	.word	sz53p_table
	.align	0
op_0xb5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #12]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L756
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L757:
	.align	0
.L756:
	.word	sz53p_table
	.align	0
op_0xb6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	orr	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L761
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L760
.L762:
	.align	0
.L761:
	.word	sz53p_table
.L760:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xb7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	strb	r3, [r0, #1]
	ldr	r2, .L765
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L766:
	.align	0
.L765:
	.word	sz53p_table
	.align	0
op_0xb8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #5]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L774
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L774+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L768
	cmp	r3, #0
	bne	.L770
	orr	r3, r2, #66
	b	.L773
.L775:
	.align	0
.L774:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L770:
	orr	r3, r2, #2
	b	.L773
.L768:
	orr	r3, r2, #3
.L773:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xb9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #4]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L783
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L783+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L777
	cmp	r3, #0
	bne	.L779
	orr	r3, r2, #66
	b	.L782
.L784:
	.align	0
.L783:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L779:
	orr	r3, r2, #2
	b	.L782
.L777:
	orr	r3, r2, #3
.L782:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xba__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #9]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #9]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L792
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L792+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L786
	cmp	r3, #0
	bne	.L788
	orr	r3, r2, #66
	b	.L791
.L793:
	.align	0
.L792:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L788:
	orr	r3, r2, #2
	b	.L791
.L786:
	orr	r3, r2, #3
.L791:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xbb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #8]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #8]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L801
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L801+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L795
	cmp	r3, #0
	bne	.L797
	orr	r3, r2, #66
	b	.L800
.L802:
	.align	0
.L801:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L797:
	orr	r3, r2, #2
	b	.L800
.L795:
	orr	r3, r2, #3
.L800:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xbc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #13]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #13]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L810
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L810+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L804
	cmp	r3, #0
	bne	.L806
	orr	r3, r2, #66
	b	.L809
.L811:
	.align	0
.L810:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L806:
	orr	r3, r2, #2
	b	.L809
.L804:
	orr	r3, r2, #3
.L809:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xbd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #12]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L819
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L819+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L813
	cmp	r3, #0
	bne	.L815
	orr	r3, r2, #66
	b	.L818
.L820:
	.align	0
.L819:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L815:
	orr	r3, r2, #2
	b	.L818
.L813:
	orr	r3, r2, #3
.L818:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xbe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r3, r0, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	ip, .L828
	and	r2, r3, #7
	ldrb	lr, [ip, r2]	@ zero_extendqisi2
	ldr	r2, .L828+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	r0, r0, #40
	and	r3, r1, #8388608
	mov	ip, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L822
	cmp	r3, #0
	bne	.L824
	orr	r3, r2, #66
	b	.L827
.L829:
	.align	0
.L828:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L824:
	orr	r3, r2, #2
	b	.L827
.L822:
	orr	r3, r2, #3
.L827:
	orr	r3, lr, r3
	orr	r3, r3, r0
	orr	r3, r3, ip
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xbf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	ip, [r0, #1]
	and	r3, ip, #136
	mov	r1, r3, lsr #2
	orr	r1, r1, r3, lsr #3
	ldr	r2, .L836
	and	r3, r1, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L836+4
	ldrb	r3, [r3, r1, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	orr	r3, r3, #66
	orr	r2, r2, r3
	orr	r2, r2, ip
	strb	r2, [r0, #0]
	bx	lr
.L837:
	.align	0
.L836:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.align	0
op_0xc0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #0]
	ands	r6, r3, #64
	bne	.L838
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, r6
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, r6
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L838:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xc1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xc2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L845
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L846
.L845:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L846:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L847
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L848
.L847:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L848:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #0]
	tst	r5, #64
	ldreqh	r3, [r4, #140]	@ movhi
	streqh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	streqh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L849:
	ldrneb	r5, [r4, #140]	@ zero_extendqisi2
	ldrneb	r6, [r4, #141]	@ zero_extendqisi2
	orrne	r6, r5, r6, asl #8
	strneh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L844:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xc3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L853
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L854
.L853:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L854:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L855
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L856
.L855:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L856:
	strb	r0, [r4, #141]
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xc4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L859
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L860
.L859:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L860:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L861
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L862
.L861:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L862:
	strb	r0, [r4, #141]
	ldrb	r6, [r4, #0]
	tst	r6, #64
	bne	.L863
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L858
.L863:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L858:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_0xc5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #4]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xc6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L869
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L874
.L869:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L874:
	mov	r1, r0
	strb	r1, [r4, #148]
	ldrb	r0, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r3, r1, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [r4, #1]
	ldr	r1, .L876
	and	r2, r3, #7
	ldrb	ip, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L876+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L876+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L871
	orr	r3, r1, #1
	orr	r3, ip, r3
	b	.L875
.L877:
	.align	0
.L876:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L871:
	orr	r3, ip, r1
.L875:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xc7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #0
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xc8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	ip, [r4, #0]
	tst	ip, #64
	beq	.L880
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L880:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xc9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xca__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L887
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L888
.L887:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L888:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L889
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L890
.L889:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L890:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #0]
	tst	r5, #64
	ldrneh	r3, [r4, #140]	@ movhi
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strneh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L891:
	ldreqb	r5, [r4, #140]	@ zero_extendqisi2
	ldreqb	r6, [r4, #141]	@ zero_extendqisi2
	orreq	r6, r5, r6, asl #8
	streqh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L886:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_p_CB__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #203
	strb	r3, [r0, #89]
	mov	r3, #1
	str	r3, [r0, #80]
	bx	lr
	.align	0
op_0xcc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L897
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L898
.L897:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L898:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L899
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L900
.L899:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L900:
	strb	r0, [r4, #141]
	ldrb	r6, [r4, #0]
	tst	r6, #64
	beq	.L901
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L896
.L901:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L896:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_0xcd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L905
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L906
.L905:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L906:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L907
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L908
.L907:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L908:
	strb	r0, [r4, #141]
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xce__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L911
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L912
.L911:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L912:
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [r4, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r3, r0, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [r4, #1]
	ldr	r0, .L917
	and	r2, r3, #7
	ldrb	ip, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L917+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L917+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L913
	orr	r3, r0, #1
	orr	r3, ip, r3
	b	.L916
.L918:
	.align	0
.L917:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L913:
	orr	r3, ip, r0
.L916:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xcf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #8
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xd0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #0]
	eor	r3, r3, #1
	tst	r3, #1
	beq	.L921
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L921:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xd1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xd2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L928
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L929
.L928:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L929:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L930
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L931
.L930:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L931:
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #0]
	eor	r3, r3, #1
	tst	r3, #1
	ldrneh	r3, [r4, #140]	@ movhi
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strneh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L932:
	ldreqb	r5, [r4, #140]	@ zero_extendqisi2
	ldreqb	r6, [r4, #141]	@ zero_extendqisi2
	orreq	r6, r5, r6, asl #8
	streqh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L927:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xd3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r5, [r4, #1]	@ zero_extendqisi2
	mov	r5, r5, asl #8
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L936
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L939
.L936:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L939:
	and	r0, r0, #255
	add	r0, r0, r5
	strh	r0, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #140]	@ zero_extendqisi2
	ldrb	r1, [r4, #141]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrb	r3, [r4, #140]
	add	r3, r3, #1
	strb	r3, [r4, #60]
	ldrb	r3, [r4, #1]
	strb	r3, [r4, #61]
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xd4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L941
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L942
.L941:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L942:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L943
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L944
.L943:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L944:
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #0]
	eor	r3, r3, #1
	tst	r3, #1
	beq	.L945
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L940
.L945:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L940:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_0xd5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #8]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xd6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L951
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L952
.L951:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L952:
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	rsb	r3, r2, r3
	mov	r3, r3, asl #16
	ldrb	r1, [r4, #1]
	and	r1, r1, #136
	and	r2, r0, #136
	mov	r2, r2, lsr #2
	orr	r2, r2, r1, lsr #3
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	orr	r2, r2, r3, lsr #17
	strb	r0, [r4, #1]
	ldr	r1, .L957
	and	r3, r2, #7
	ldrb	ip, [r1, r3]	@ zero_extendqisi2
	ldr	r3, .L957+4
	ldrb	r1, [r3, r2, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L957+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L953
	orr	r3, r1, #3
	b	.L956
.L958:
	.align	0
.L957:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L953:
	orr	r3, r1, #2
.L956:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xd7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #16
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xd8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	ip, [r4, #0]
	tst	ip, #1
	beq	.L961
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L961:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xd9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 0, current_function_anonymous_args = 0
	sub	sp, sp, #4
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r1, [r0, #5]	@ zero_extendqisi2
	orr	r3, r3, r1, asl #8
	ldrb	r1, [r0, #20]	@ zero_extendqisi2
	ldrb	r2, [r0, #21]	@ zero_extendqisi2
	orr	r2, r1, r2, asl #8
	strh	r2, [r0, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #20]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r1, [r0, #9]	@ zero_extendqisi2
	orr	r3, r3, r1, asl #8
	ldrb	r1, [r0, #24]	@ zero_extendqisi2
	ldrb	r2, [r0, #25]	@ zero_extendqisi2
	orr	r2, r1, r2, asl #8
	strh	r2, [r0, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #24]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r1, [r0, #13]	@ zero_extendqisi2
	orr	r3, r3, r1, asl #8
	ldrb	r1, [r0, #28]	@ zero_extendqisi2
	ldrb	r2, [r0, #29]	@ zero_extendqisi2
	orr	r2, r1, r2, asl #8
	strh	r2, [r0, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #28]	@ movhi   ;; CYGNUS LOCAL nickc
	add	sp, sp, #4
	bx	lr
	.align	0
op_0xda__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L968
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L969
.L968:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L969:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L970
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L971
.L970:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L971:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #0]
	tst	r5, #1
	ldrneh	r3, [r4, #140]	@ movhi
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strneh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L972:
	ldreqb	r5, [r4, #140]	@ zero_extendqisi2
	ldreqb	r6, [r4, #141]	@ zero_extendqisi2
	orreq	r6, r5, r6, asl #8
	streqh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L967:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xdb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r5, [r4, #1]	@ zero_extendqisi2
	mov	r5, r5, asl #8
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L976
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L979
.L976:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L979:
	and	r0, r0, #255
	add	r0, r0, r5
	strh	r0, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #140]	@ zero_extendqisi2
	ldrb	r1, [r4, #141]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #1]
	ldrh	r3, [r4, #140]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xdc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L981
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L982
.L981:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L982:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L983
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L984
.L983:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L984:
	strb	r0, [r4, #141]
	ldrb	r6, [r4, #0]
	tst	r6, #1
	beq	.L985
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L980
.L985:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L980:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_p_DD__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #221
	strb	r3, [r0, #89]
	mov	r3, #1
	str	r3, [r0, #80]
	bx	lr
	.align	0
op_0xde__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L991
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L992
.L991:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L992:
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [r4, #1]
	and	r1, r1, #136
	and	r3, r0, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [r4, #1]
	ldr	r1, .L997
	and	r2, r3, #7
	ldrb	ip, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L997+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L997+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L993
	orr	r3, r1, #3
	b	.L996
.L998:
	.align	0
.L997:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L993:
	orr	r3, r1, #2
.L996:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xdf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #24
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xe0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #0]
	ands	r6, r3, #4
	bne	.L1001
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, r6
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, r6
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1001:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xe1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xe2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1008
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1009
.L1008:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1009:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1010
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1011
.L1010:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1011:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #0]
	tst	r5, #4
	ldreqh	r3, [r4, #140]	@ movhi
	streqh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	streqh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1012:
	ldrneb	r5, [r4, #140]	@ zero_extendqisi2
	ldrneb	r6, [r4, #141]	@ zero_extendqisi2
	orrne	r6, r5, r6, asl #8
	strneh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1007:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xe3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	add	r5, r4, #48
	ldrb	r3, [r4, #48]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #48]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #140]	@ zero_extendqisi2
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	ldrb	r6, [r4, #12]	@ zero_extendqisi2
	ldrb	r7, [r4, #13]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #48]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_0xe4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1018
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1019
.L1018:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1019:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1020
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1021
.L1020:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1021:
	strb	r0, [r4, #141]
	ldrb	r6, [r4, #0]
	tst	r6, #4
	bne	.L1022
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L1017
.L1022:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1017:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_0xe5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #12]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xe6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1028
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1029
.L1028:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1029:
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	and	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1032
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r4, #0]
	b	.L1031
.L1033:
	.align	0
.L1032:
	.word	sz53p_table
.L1031:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xe7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #32
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xe8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	ip, [r4, #0]
	tst	ip, #4
	beq	.L1036
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1036:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xe9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	strh	r3, [r0, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0xea__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1043
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1044
.L1043:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1044:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1045
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1046
.L1045:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1046:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #0]
	tst	r5, #4
	ldrneh	r3, [r4, #140]	@ movhi
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strneh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1047:
	ldreqb	r5, [r4, #140]	@ zero_extendqisi2
	ldreqb	r6, [r4, #141]	@ zero_extendqisi2
	orreq	r6, r5, r6, asl #8
	streqh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1042:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xeb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 0, current_function_anonymous_args = 0
	sub	sp, sp, #4
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r1, [r0, #9]	@ zero_extendqisi2
	orr	r3, r3, r1, asl #8
	ldrb	r1, [r0, #12]	@ zero_extendqisi2
	ldrb	r2, [r0, #13]	@ zero_extendqisi2
	orr	r2, r1, r2, asl #8
	strh	r2, [r0, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	add	sp, sp, #4
	bx	lr
	.align	0
op_0xec__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1053
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1054
.L1053:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1054:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1055
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1056
.L1055:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1056:
	strb	r0, [r4, #141]
	ldrb	r6, [r4, #0]
	tst	r6, #4
	beq	.L1057
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L1052
.L1057:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1052:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_p_ED__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #237
	strb	r3, [r0, #89]
	mov	r3, #1
	str	r3, [r0, #80]
	bx	lr
	.align	0
op_0xee__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1063
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1064
.L1063:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1064:
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	eor	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1067
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L1066
.L1068:
	.align	0
.L1067:
	.word	sz53p_table
.L1066:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xef__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #40
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xf0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #0]
	ands	r6, r3, #128
	bne	.L1071
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, r6
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, r6
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1071:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xf1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #0]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xf2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1078
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1079
.L1078:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1079:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1080
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1081
.L1080:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1081:
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #0]
	tst	r3, #128
	ldreqh	r3, [r4, #140]	@ movhi
	streqh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	streqh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1082:
	ldrneb	r5, [r4, #140]	@ zero_extendqisi2
	ldrneb	r6, [r4, #141]	@ zero_extendqisi2
	orrne	r6, r5, r6, asl #8
	strneh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1077:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xf3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #0
	strb	r3, [r0, #57]
	strb	r3, [r0, #56]
	bx	lr
	.align	0
op_0xf4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1088
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1089
.L1088:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1089:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1090
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1091
.L1090:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1091:
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #0]
	tst	r3, #128
	bne	.L1092
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L1087
.L1092:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1087:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_0xf5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #0]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xf6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1098
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1099
.L1098:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1099:
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	orr	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1102
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L1101
.L1103:
	.align	0
.L1102:
	.word	sz53p_table
.L1101:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xf7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #48
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xf8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #0]
	tst	r3, #128
	beq	.L1106
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1106:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_0xf9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	strh	r3, [r0, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_0xfa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1113
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1114
.L1113:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1114:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1115
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1116
.L1115:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1116:
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #0]
	tst	r3, #128
	ldrneh	r3, [r4, #140]	@ movhi
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strneh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1117:
	ldreqb	r5, [r4, #140]	@ zero_extendqisi2
	ldreqb	r6, [r4, #141]	@ zero_extendqisi2
	orreq	r6, r5, r6, asl #8
	streqh	r6, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1112:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_0xfb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #1
	strb	r3, [r0, #57]
	strb	r3, [r0, #56]
	str	r3, [r0, #80]
	bx	lr
	.align	0
op_0xfc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1123
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1124
.L1123:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1124:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1125
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1126
.L1125:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1126:
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #0]
	tst	r3, #128
	beq	.L1127
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r0, r4
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #140]	@ movhi
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L1122
.L1127:
	ldrb	r6, [r4, #140]	@ zero_extendqisi2
	ldrb	r7, [r4, #141]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L1122:
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_p_FD__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #253
	strb	r3, [r0, #89]
	mov	r3, #1
	str	r3, [r0, #80]
	bx	lr
	.align	0
op_0xfe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1133
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1140
.L1133:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1140:
	mov	ip, r0
	strb	ip, [r4, #148]
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L1142
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1142+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	r0, ip, #40
	and	r3, r1, #8388608
	mov	ip, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L1135
	cmp	r3, #0
	bne	.L1137
	orr	r3, r2, #66
	b	.L1141
.L1143:
	.align	0
.L1142:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L1137:
	orr	r3, r2, #2
	b	.L1141
.L1135:
	orr	r3, r2, #3
.L1141:
	orr	r3, lr, r3
	orr	r3, r3, r0
	orr	r3, r3, ip
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_0xff__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #56
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
.data
	.align	0
opcodes_base:
	.word	op_0x00__FP16_z80_cpu_context
	.word	op_0x01__FP16_z80_cpu_context
	.word	op_0x02__FP16_z80_cpu_context
	.word	op_0x03__FP16_z80_cpu_context
	.word	op_0x04__FP16_z80_cpu_context
	.word	op_0x05__FP16_z80_cpu_context
	.word	op_0x06__FP16_z80_cpu_context
	.word	op_0x07__FP16_z80_cpu_context
	.word	op_0x08__FP16_z80_cpu_context
	.word	op_0x09__FP16_z80_cpu_context
	.word	op_0x0a__FP16_z80_cpu_context
	.word	op_0x0b__FP16_z80_cpu_context
	.word	op_0x0c__FP16_z80_cpu_context
	.word	op_0x0d__FP16_z80_cpu_context
	.word	op_0x0e__FP16_z80_cpu_context
	.word	op_0x0f__FP16_z80_cpu_context
	.word	op_0x10__FP16_z80_cpu_context
	.word	op_0x11__FP16_z80_cpu_context
	.word	op_0x12__FP16_z80_cpu_context
	.word	op_0x13__FP16_z80_cpu_context
	.word	op_0x14__FP16_z80_cpu_context
	.word	op_0x15__FP16_z80_cpu_context
	.word	op_0x16__FP16_z80_cpu_context
	.word	op_0x17__FP16_z80_cpu_context
	.word	op_0x18__FP16_z80_cpu_context
	.word	op_0x19__FP16_z80_cpu_context
	.word	op_0x1a__FP16_z80_cpu_context
	.word	op_0x1b__FP16_z80_cpu_context
	.word	op_0x1c__FP16_z80_cpu_context
	.word	op_0x1d__FP16_z80_cpu_context
	.word	op_0x1e__FP16_z80_cpu_context
	.word	op_0x1f__FP16_z80_cpu_context
	.word	op_0x20__FP16_z80_cpu_context
	.word	op_0x21__FP16_z80_cpu_context
	.word	op_0x22__FP16_z80_cpu_context
	.word	op_0x23__FP16_z80_cpu_context
	.word	op_0x24__FP16_z80_cpu_context
	.word	op_0x25__FP16_z80_cpu_context
	.word	op_0x26__FP16_z80_cpu_context
	.word	op_0x27__FP16_z80_cpu_context
	.word	op_0x28__FP16_z80_cpu_context
	.word	op_0x29__FP16_z80_cpu_context
	.word	op_0x2a__FP16_z80_cpu_context
	.word	op_0x2b__FP16_z80_cpu_context
	.word	op_0x2c__FP16_z80_cpu_context
	.word	op_0x2d__FP16_z80_cpu_context
	.word	op_0x2e__FP16_z80_cpu_context
	.word	op_0x2f__FP16_z80_cpu_context
	.word	op_0x30__FP16_z80_cpu_context
	.word	op_0x31__FP16_z80_cpu_context
	.word	op_0x32__FP16_z80_cpu_context
	.word	op_0x33__FP16_z80_cpu_context
	.word	op_0x34__FP16_z80_cpu_context
	.word	op_0x35__FP16_z80_cpu_context
	.word	op_0x36__FP16_z80_cpu_context
	.word	op_0x37__FP16_z80_cpu_context
	.word	op_0x38__FP16_z80_cpu_context
	.word	op_0x39__FP16_z80_cpu_context
	.word	op_0x3a__FP16_z80_cpu_context
	.word	op_0x3b__FP16_z80_cpu_context
	.word	op_0x3c__FP16_z80_cpu_context
	.word	op_0x3d__FP16_z80_cpu_context
	.word	op_0x3e__FP16_z80_cpu_context
	.word	op_0x3f__FP16_z80_cpu_context
	.word	op_0x40__FP16_z80_cpu_context
	.word	op_0x41__FP16_z80_cpu_context
	.word	op_0x42__FP16_z80_cpu_context
	.word	op_0x43__FP16_z80_cpu_context
	.word	op_0x44__FP16_z80_cpu_context
	.word	op_0x45__FP16_z80_cpu_context
	.word	op_0x46__FP16_z80_cpu_context
	.word	op_0x47__FP16_z80_cpu_context
	.word	op_0x48__FP16_z80_cpu_context
	.word	op_0x49__FP16_z80_cpu_context
	.word	op_0x4a__FP16_z80_cpu_context
	.word	op_0x4b__FP16_z80_cpu_context
	.word	op_0x4c__FP16_z80_cpu_context
	.word	op_0x4d__FP16_z80_cpu_context
	.word	op_0x4e__FP16_z80_cpu_context
	.word	op_0x4f__FP16_z80_cpu_context
	.word	op_0x50__FP16_z80_cpu_context
	.word	op_0x51__FP16_z80_cpu_context
	.word	op_0x52__FP16_z80_cpu_context
	.word	op_0x53__FP16_z80_cpu_context
	.word	op_0x54__FP16_z80_cpu_context
	.word	op_0x55__FP16_z80_cpu_context
	.word	op_0x56__FP16_z80_cpu_context
	.word	op_0x57__FP16_z80_cpu_context
	.word	op_0x58__FP16_z80_cpu_context
	.word	op_0x59__FP16_z80_cpu_context
	.word	op_0x5a__FP16_z80_cpu_context
	.word	op_0x5b__FP16_z80_cpu_context
	.word	op_0x5c__FP16_z80_cpu_context
	.word	op_0x5d__FP16_z80_cpu_context
	.word	op_0x5e__FP16_z80_cpu_context
	.word	op_0x5f__FP16_z80_cpu_context
	.word	op_0x60__FP16_z80_cpu_context
	.word	op_0x61__FP16_z80_cpu_context
	.word	op_0x62__FP16_z80_cpu_context
	.word	op_0x63__FP16_z80_cpu_context
	.word	op_0x64__FP16_z80_cpu_context
	.word	op_0x65__FP16_z80_cpu_context
	.word	op_0x66__FP16_z80_cpu_context
	.word	op_0x67__FP16_z80_cpu_context
	.word	op_0x68__FP16_z80_cpu_context
	.word	op_0x69__FP16_z80_cpu_context
	.word	op_0x6a__FP16_z80_cpu_context
	.word	op_0x6b__FP16_z80_cpu_context
	.word	op_0x6c__FP16_z80_cpu_context
	.word	op_0x6d__FP16_z80_cpu_context
	.word	op_0x6e__FP16_z80_cpu_context
	.word	op_0x6f__FP16_z80_cpu_context
	.word	op_0x70__FP16_z80_cpu_context
	.word	op_0x71__FP16_z80_cpu_context
	.word	op_0x72__FP16_z80_cpu_context
	.word	op_0x73__FP16_z80_cpu_context
	.word	op_0x74__FP16_z80_cpu_context
	.word	op_0x75__FP16_z80_cpu_context
	.word	op_0x76__FP16_z80_cpu_context
	.word	op_0x77__FP16_z80_cpu_context
	.word	op_0x78__FP16_z80_cpu_context
	.word	op_0x79__FP16_z80_cpu_context
	.word	op_0x7a__FP16_z80_cpu_context
	.word	op_0x7b__FP16_z80_cpu_context
	.word	op_0x7c__FP16_z80_cpu_context
	.word	op_0x7d__FP16_z80_cpu_context
	.word	op_0x7e__FP16_z80_cpu_context
	.word	op_0x7f__FP16_z80_cpu_context
	.word	op_0x80__FP16_z80_cpu_context
	.word	op_0x81__FP16_z80_cpu_context
	.word	op_0x82__FP16_z80_cpu_context
	.word	op_0x83__FP16_z80_cpu_context
	.word	op_0x84__FP16_z80_cpu_context
	.word	op_0x85__FP16_z80_cpu_context
	.word	op_0x86__FP16_z80_cpu_context
	.word	op_0x87__FP16_z80_cpu_context
	.word	op_0x88__FP16_z80_cpu_context
	.word	op_0x89__FP16_z80_cpu_context
	.word	op_0x8a__FP16_z80_cpu_context
	.word	op_0x8b__FP16_z80_cpu_context
	.word	op_0x8c__FP16_z80_cpu_context
	.word	op_0x8d__FP16_z80_cpu_context
	.word	op_0x8e__FP16_z80_cpu_context
	.word	op_0x8f__FP16_z80_cpu_context
	.word	op_0x90__FP16_z80_cpu_context
	.word	op_0x91__FP16_z80_cpu_context
	.word	op_0x92__FP16_z80_cpu_context
	.word	op_0x93__FP16_z80_cpu_context
	.word	op_0x94__FP16_z80_cpu_context
	.word	op_0x95__FP16_z80_cpu_context
	.word	op_0x96__FP16_z80_cpu_context
	.word	op_0x97__FP16_z80_cpu_context
	.word	op_0x98__FP16_z80_cpu_context
	.word	op_0x99__FP16_z80_cpu_context
	.word	op_0x9a__FP16_z80_cpu_context
	.word	op_0x9b__FP16_z80_cpu_context
	.word	op_0x9c__FP16_z80_cpu_context
	.word	op_0x9d__FP16_z80_cpu_context
	.word	op_0x9e__FP16_z80_cpu_context
	.word	op_0x9f__FP16_z80_cpu_context
	.word	op_0xa0__FP16_z80_cpu_context
	.word	op_0xa1__FP16_z80_cpu_context
	.word	op_0xa2__FP16_z80_cpu_context
	.word	op_0xa3__FP16_z80_cpu_context
	.word	op_0xa4__FP16_z80_cpu_context
	.word	op_0xa5__FP16_z80_cpu_context
	.word	op_0xa6__FP16_z80_cpu_context
	.word	op_0xa7__FP16_z80_cpu_context
	.word	op_0xa8__FP16_z80_cpu_context
	.word	op_0xa9__FP16_z80_cpu_context
	.word	op_0xaa__FP16_z80_cpu_context
	.word	op_0xab__FP16_z80_cpu_context
	.word	op_0xac__FP16_z80_cpu_context
	.word	op_0xad__FP16_z80_cpu_context
	.word	op_0xae__FP16_z80_cpu_context
	.word	op_0xaf__FP16_z80_cpu_context
	.word	op_0xb0__FP16_z80_cpu_context
	.word	op_0xb1__FP16_z80_cpu_context
	.word	op_0xb2__FP16_z80_cpu_context
	.word	op_0xb3__FP16_z80_cpu_context
	.word	op_0xb4__FP16_z80_cpu_context
	.word	op_0xb5__FP16_z80_cpu_context
	.word	op_0xb6__FP16_z80_cpu_context
	.word	op_0xb7__FP16_z80_cpu_context
	.word	op_0xb8__FP16_z80_cpu_context
	.word	op_0xb9__FP16_z80_cpu_context
	.word	op_0xba__FP16_z80_cpu_context
	.word	op_0xbb__FP16_z80_cpu_context
	.word	op_0xbc__FP16_z80_cpu_context
	.word	op_0xbd__FP16_z80_cpu_context
	.word	op_0xbe__FP16_z80_cpu_context
	.word	op_0xbf__FP16_z80_cpu_context
	.word	op_0xc0__FP16_z80_cpu_context
	.word	op_0xc1__FP16_z80_cpu_context
	.word	op_0xc2__FP16_z80_cpu_context
	.word	op_0xc3__FP16_z80_cpu_context
	.word	op_0xc4__FP16_z80_cpu_context
	.word	op_0xc5__FP16_z80_cpu_context
	.word	op_0xc6__FP16_z80_cpu_context
	.word	op_0xc7__FP16_z80_cpu_context
	.word	op_0xc8__FP16_z80_cpu_context
	.word	op_0xc9__FP16_z80_cpu_context
	.word	op_0xca__FP16_z80_cpu_context
	.word	op_p_CB__FP16_z80_cpu_context
	.word	op_0xcc__FP16_z80_cpu_context
	.word	op_0xcd__FP16_z80_cpu_context
	.word	op_0xce__FP16_z80_cpu_context
	.word	op_0xcf__FP16_z80_cpu_context
	.word	op_0xd0__FP16_z80_cpu_context
	.word	op_0xd1__FP16_z80_cpu_context
	.word	op_0xd2__FP16_z80_cpu_context
	.word	op_0xd3__FP16_z80_cpu_context
	.word	op_0xd4__FP16_z80_cpu_context
	.word	op_0xd5__FP16_z80_cpu_context
	.word	op_0xd6__FP16_z80_cpu_context
	.word	op_0xd7__FP16_z80_cpu_context
	.word	op_0xd8__FP16_z80_cpu_context
	.word	op_0xd9__FP16_z80_cpu_context
	.word	op_0xda__FP16_z80_cpu_context
	.word	op_0xdb__FP16_z80_cpu_context
	.word	op_0xdc__FP16_z80_cpu_context
	.word	op_p_DD__FP16_z80_cpu_context
	.word	op_0xde__FP16_z80_cpu_context
	.word	op_0xdf__FP16_z80_cpu_context
	.word	op_0xe0__FP16_z80_cpu_context
	.word	op_0xe1__FP16_z80_cpu_context
	.word	op_0xe2__FP16_z80_cpu_context
	.word	op_0xe3__FP16_z80_cpu_context
	.word	op_0xe4__FP16_z80_cpu_context
	.word	op_0xe5__FP16_z80_cpu_context
	.word	op_0xe6__FP16_z80_cpu_context
	.word	op_0xe7__FP16_z80_cpu_context
	.word	op_0xe8__FP16_z80_cpu_context
	.word	op_0xe9__FP16_z80_cpu_context
	.word	op_0xea__FP16_z80_cpu_context
	.word	op_0xeb__FP16_z80_cpu_context
	.word	op_0xec__FP16_z80_cpu_context
	.word	op_p_ED__FP16_z80_cpu_context
	.word	op_0xee__FP16_z80_cpu_context
	.word	op_0xef__FP16_z80_cpu_context
	.word	op_0xf0__FP16_z80_cpu_context
	.word	op_0xf1__FP16_z80_cpu_context
	.word	op_0xf2__FP16_z80_cpu_context
	.word	op_0xf3__FP16_z80_cpu_context
	.word	op_0xf4__FP16_z80_cpu_context
	.word	op_0xf5__FP16_z80_cpu_context
	.word	op_0xf6__FP16_z80_cpu_context
	.word	op_0xf7__FP16_z80_cpu_context
	.word	op_0xf8__FP16_z80_cpu_context
	.word	op_0xf9__FP16_z80_cpu_context
	.word	op_0xfa__FP16_z80_cpu_context
	.word	op_0xfb__FP16_z80_cpu_context
	.word	op_0xfc__FP16_z80_cpu_context
	.word	op_p_FD__FP16_z80_cpu_context
	.word	op_0xfe__FP16_z80_cpu_context
	.word	op_0xff__FP16_z80_cpu_context
.text
	.align	0
op_DD_0x09__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #32]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #5]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #32]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #4]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1151
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1147
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1150
.L1152:
	.align	0
.L1151:
	.word	halfcarry_add_table
.L1147:
	orr	r1, lr, r0
.L1150:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x19__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #32]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	ldrb	r2, [ip, #9]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #32]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #8]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1158
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1154
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1157
.L1159:
	.align	0
.L1158:
	.word	halfcarry_add_table
.L1154:
	orr	r1, lr, r0
.L1157:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x21__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1161
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1162
.L1161:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1162:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1163
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1164
.L1163:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1164:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_DD_0x22__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1167
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1168
.L1167:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1168:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1169
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1170
.L1169:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1170:
	strb	r0, [r4, #145]
	ldrb	r5, [r4, #32]	@ zero_extendqisi2
	ldrb	r6, [r4, #33]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_DD_0x23__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #32]	@ movhi
	add	r3, r3, #1
	strh	r3, [r0, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_DD_0x24__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #33]
	add	r2, r2, #1
	strb	r2, [r0, #33]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #33]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L1178
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L1175
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L1176
.L1179:
	.align	0
.L1178:
	.word	sz53_table
.L1175:
	orr	r1, ip, r1
.L1176:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_DD_0x25__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #33]
	tst	ip, #15
	orreq	r3, r3, #18
.L1181:
	orrne	r3, r3, #2
.L1182:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #33]
	sub	r3, r3, #1
	strb	r3, [r0, #33]
	ldr	r3, .L1186
	ldrb	r2, [r0, #33]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L1183:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L1187:
	.align	0
.L1186:
	.word	sz53_table
	.align	0
op_DD_0x26__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1189
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1190
.L1189:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1190:
	strb	r0, [r4, #148]
	strb	r0, [r4, #33]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x29__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #32]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	mov	r1, r1, asl #1
	ldrh	r0, [ip, #32]	@ movhi
	and	r2, r0, #2048
	cmp	r2, #0
	movne	r2, #3
	moveq	r2, #0
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1197
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1193
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1196
.L1198:
	.align	0
.L1197:
	.word	halfcarry_add_table
.L1193:
	orr	r1, lr, r0
.L1196:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x2a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1200
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1201
.L1200:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1201:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1202
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1203
.L1202:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1203:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_DD_0x2b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #32]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r0, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_DD_0x2c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #32]
	add	r2, r2, #1
	strb	r2, [r0, #32]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #32]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L1211
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L1208
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L1209
.L1212:
	.align	0
.L1211:
	.word	sz53_table
.L1208:
	orr	r1, ip, r1
.L1209:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_DD_0x2d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #32]
	tst	ip, #15
	orreq	r3, r3, #18
.L1214:
	orrne	r3, r3, #2
.L1215:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #32]
	sub	r3, r3, #1
	strb	r3, [r0, #32]
	ldr	r3, .L1219
	ldrb	r2, [r0, #32]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L1216:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L1220:
	.align	0
.L1219:
	.word	sz53_table
	.align	0
op_DD_0x2e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1222
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1223
.L1222:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1223:
	strb	r0, [r4, #148]
	strb	r0, [r4, #32]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x34__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1226
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1227
.L1226:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1227:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1228:
	ldreqb	r3, [r4, #148]
.L1229:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	add	r0, r0, #1
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	cmp	r2, #128
	movne	r1, #0
	moveq	r1, #1
	orr	r1, r3, r1, asl #2
	ldr	r3, .L1233
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r0, #15
	bne	.L1230
	orr	r3, r2, #16
	orr	r2, r1, r3
	b	.L1231
.L1234:
	.align	0
.L1233:
	.word	sz53_table
.L1230:
	orr	r2, r1, r2
.L1231:
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x35__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1236
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1237
.L1236:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1237:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1238:
	ldreqb	r3, [r4, #148]
.L1239:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	tst	r0, #15
	orreq	r3, r3, #18
.L1240:
	orrne	r3, r3, #2
.L1241:
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #148]
	sub	r3, r3, #1
	strb	r3, [r4, #148]
	ldr	r3, .L1246
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L1242:
	orr	r3, r3, r1
	strb	r3, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L1245
.L1247:
	.align	0
.L1246:
	.word	sz53_table
.L1245:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x36__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1249
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1250
.L1249:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1250:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1251:
	ldreqb	r3, [r4, #148]
.L1252:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1253
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1254
.L1253:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1254:
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x39__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #32]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #48]	@ zero_extendqisi2
	ldrb	r2, [ip, #49]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #32]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #48]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1261
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1257
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1260
.L1262:
	.align	0
.L1261:
	.word	halfcarry_add_table
.L1257:
	orr	r1, lr, r0
.L1260:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x44__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #33]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_DD_0x45__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #32]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_DD_0x46__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1268
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1269
.L1268:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1269:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1270:
	ldreqb	r3, [r4, #148]
.L1271:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x4c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #33]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_DD_0x4d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #32]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_DD_0x4e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1278
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1279
.L1278:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1279:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1280:
	ldreqb	r3, [r4, #148]
.L1281:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x54__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #33]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_DD_0x55__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #32]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_DD_0x56__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1288
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1289
.L1288:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1289:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1290:
	ldreqb	r3, [r4, #148]
.L1291:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x5c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #33]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_DD_0x5d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #32]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_DD_0x5e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1298
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1299
.L1298:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1299:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1300:
	ldreqb	r3, [r4, #148]
.L1301:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x60__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #33]
	bx	lr
	.align	0
op_DD_0x61__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #33]
	bx	lr
	.align	0
op_DD_0x62__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #33]
	bx	lr
	.align	0
op_DD_0x63__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #33]
	bx	lr
	.align	0
op_DD_0x64__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_DD_0x65__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #32]
	strb	r3, [r0, #33]
	bx	lr
	.align	0
op_DD_0x66__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1316
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1317
.L1316:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1317:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1318:
	ldreqb	r3, [r4, #148]
.L1319:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x67__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #33]
	bx	lr
	.align	0
op_DD_0x68__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #32]
	bx	lr
	.align	0
op_DD_0x69__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #32]
	bx	lr
	.align	0
op_DD_0x6a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #32]
	bx	lr
	.align	0
op_DD_0x6b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #32]
	bx	lr
	.align	0
op_DD_0x6c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #33]
	strb	r3, [r0, #32]
	bx	lr
	.align	0
op_DD_0x6d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_DD_0x6e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1336
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1337
.L1336:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1337:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1338:
	ldreqb	r3, [r4, #148]
.L1339:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x6f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #32]
	bx	lr
	.align	0
op_DD_0x70__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1344
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1345
.L1344:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1345:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1346:
	ldreqb	r3, [r4, #148]
.L1347:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #5]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x71__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1350
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1351
.L1350:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1351:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1352:
	ldreqb	r3, [r4, #148]
.L1353:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #4]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x72__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1356
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1357
.L1356:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1357:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1358:
	ldreqb	r3, [r4, #148]
.L1359:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #9]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x73__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1362
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1363
.L1362:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1363:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1364:
	ldreqb	r3, [r4, #148]
.L1365:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #8]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x74__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1368
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1369
.L1368:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1369:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1370:
	ldreqb	r3, [r4, #148]
.L1371:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #13]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x75__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1374
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1375
.L1374:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1375:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1376:
	ldreqb	r3, [r4, #148]
.L1377:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #12]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x77__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1380
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1381
.L1380:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1381:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1382:
	ldreqb	r3, [r4, #148]
.L1383:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #1]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x7c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #33]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_DD_0x7d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #32]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_DD_0x7e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1390
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1391
.L1390:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1391:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1392:
	ldreqb	r3, [r4, #148]
.L1393:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x84__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #33]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L1400
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1400+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1400+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1396
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L1399
.L1401:
	.align	0
.L1400:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1396:
	orr	r3, lr, r1
.L1399:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x85__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #32]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #32]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L1407
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1407+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1407+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1403
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L1406
.L1408:
	.align	0
.L1407:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1403:
	orr	r3, lr, r1
.L1406:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x86__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1410
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1411
.L1410:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1411:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1412:
	ldreqb	r3, [r4, #148]
.L1413:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r1, r1, r3
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	and	r3, r1, #136
	orr	r0, r0, r3, lsr #1
	strb	r1, [r4, #1]
	ldr	r2, .L1418
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1418+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1418+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1414
	orr	r3, r0, #1
	orr	r3, ip, r3
	b	.L1417
.L1419:
	.align	0
.L1418:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1414:
	orr	r3, ip, r0
.L1417:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x8c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #33]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L1425
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1425+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1425+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1421
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L1424
.L1426:
	.align	0
.L1425:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1421:
	orr	r3, lr, r0
.L1424:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x8d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #32]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #32]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L1432
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1432+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1432+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1428
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L1431
.L1433:
	.align	0
.L1432:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1428:
	orr	r3, lr, r0
.L1431:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x8e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1435
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1436
.L1435:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1436:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1437:
	ldreqb	r3, [r4, #148]
.L1438:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [r4, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	and	r3, r1, #136
	orr	r0, r0, r3, lsr #1
	strb	r1, [r4, #1]
	ldr	r2, .L1443
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1443+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1443+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1439
	orr	r3, r0, #1
	orr	r3, ip, r3
	b	.L1442
.L1444:
	.align	0
.L1443:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1439:
	orr	r3, ip, r0
.L1442:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x94__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #33]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1450
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1450+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1450+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1446
	orr	r3, r1, #3
	b	.L1449
.L1451:
	.align	0
.L1450:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1446:
	orr	r3, r1, #2
.L1449:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x95__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #32]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #32]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1457
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1457+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1457+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1453
	orr	r3, r1, #3
	b	.L1456
.L1458:
	.align	0
.L1457:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1453:
	orr	r3, r1, #2
.L1456:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x96__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1460
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1461
.L1460:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1461:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1462:
	ldreqb	r3, [r4, #148]
.L1463:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	rsb	r3, r2, r3
	mov	r3, r3, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r2, lsr #3
	mov	r1, r3, lsr #16
	and	r3, r3, #8912896
	orr	r0, r0, r3, lsr #17
	strb	r1, [r4, #1]
	ldr	r2, .L1468
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1468+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1468+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1464
	orr	r3, r0, #3
	b	.L1467
.L1469:
	.align	0
.L1468:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1464:
	orr	r3, r0, #2
.L1467:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0x9c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #33]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #33]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1475
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1475+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1475+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1471
	orr	r3, r1, #3
	b	.L1474
.L1476:
	.align	0
.L1475:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1471:
	orr	r3, r1, #2
.L1474:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x9d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #32]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #32]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1482
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1482+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1482+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1478
	orr	r3, r1, #3
	b	.L1481
.L1483:
	.align	0
.L1482:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1478:
	orr	r3, r1, #2
.L1481:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_DD_0x9e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1485
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1486
.L1485:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1486:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1487:
	ldreqb	r3, [r4, #148]
.L1488:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	mov	r1, r2, lsr #16
	and	r2, r2, #8912896
	orr	r0, r0, r2, lsr #17
	strb	r1, [r4, #1]
	ldr	r2, .L1493
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1493+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1493+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1489
	orr	r3, r0, #3
	b	.L1492
.L1494:
	.align	0
.L1493:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1489:
	orr	r3, r0, #2
.L1492:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0xa4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #33]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1497
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L1498:
	.align	0
.L1497:
	.word	sz53p_table
	.align	0
op_DD_0xa5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #32]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1501
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L1502:
	.align	0
.L1501:
	.word	sz53p_table
	.align	0
op_DD_0xa6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1504
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1505
.L1504:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1505:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1506:
	ldreqb	r3, [r4, #148]
.L1507:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	and	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1510
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r4, #0]
	b	.L1509
.L1511:
	.align	0
.L1510:
	.word	sz53p_table
.L1509:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0xac__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #33]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1514
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1515:
	.align	0
.L1514:
	.word	sz53p_table
	.align	0
op_DD_0xad__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #32]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1518
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1519:
	.align	0
.L1518:
	.word	sz53p_table
	.align	0
op_DD_0xae__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1521
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1522
.L1521:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1522:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1523:
	ldreqb	r3, [r4, #148]
.L1524:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	eor	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1527
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L1526
.L1528:
	.align	0
.L1527:
	.word	sz53p_table
.L1526:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0xb4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #33]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1531
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1532:
	.align	0
.L1531:
	.word	sz53p_table
	.align	0
op_DD_0xb5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #32]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1535
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1536:
	.align	0
.L1535:
	.word	sz53p_table
	.align	0
op_DD_0xb6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1538
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1539
.L1538:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1539:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1540:
	ldreqb	r3, [r4, #148]
.L1541:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	orr	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1544
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L1543
.L1545:
	.align	0
.L1544:
	.word	sz53p_table
.L1543:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0xbc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #33]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #33]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L1553
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1553+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L1547
	cmp	r3, #0
	bne	.L1549
	orr	r3, r2, #66
	b	.L1552
.L1554:
	.align	0
.L1553:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L1549:
	orr	r3, r2, #2
	b	.L1552
.L1547:
	orr	r3, r2, #3
.L1552:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0xbd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #32]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #32]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L1562
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1562+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L1556
	cmp	r3, #0
	bne	.L1558
	orr	r3, r2, #66
	b	.L1561
.L1563:
	.align	0
.L1562:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L1558:
	orr	r3, r2, #2
	b	.L1561
.L1556:
	orr	r3, r2, #3
.L1561:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0xbe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1565
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1566
.L1565:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1566:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1567:
	ldreqb	r3, [r4, #148]
.L1568:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r3, r0, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	ip, .L1575
	and	r2, r3, #7
	ldrb	lr, [ip, r2]	@ zero_extendqisi2
	ldr	r2, .L1575+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	r0, r0, #40
	and	r3, r1, #8388608
	mov	ip, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L1569
	cmp	r3, #0
	bne	.L1571
	orr	r3, r2, #66
	b	.L1574
.L1576:
	.align	0
.L1575:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L1571:
	orr	r3, r2, #2
	b	.L1574
.L1569:
	orr	r3, r2, #3
.L1574:
	orr	r3, lr, r3
	orr	r3, r3, r0
	orr	r3, r3, ip
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DD_0xe1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_DD_0xe3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	add	r5, r4, #48
	ldrb	r3, [r4, #48]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #48]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #140]	@ zero_extendqisi2
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	ldrb	r6, [r4, #32]	@ zero_extendqisi2
	ldrb	r7, [r4, #33]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #48]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_DD_0xe5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #32]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_DD_0xe9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #32]	@ zero_extendqisi2
	ldrb	r3, [r0, #33]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	strh	r3, [r0, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_DD_0xf9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #32]	@ zero_extendqisi2
	ldrb	r3, [r0, #33]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	strh	r3, [r0, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.data
	.align	0
opcodes_dd:
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x09__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x19__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x21__FP16_z80_cpu_context
	.word	op_DD_0x22__FP16_z80_cpu_context
	.word	op_DD_0x23__FP16_z80_cpu_context
	.word	op_DD_0x24__FP16_z80_cpu_context
	.word	op_DD_0x25__FP16_z80_cpu_context
	.word	op_DD_0x26__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	op_DD_0x29__FP16_z80_cpu_context
	.word	op_DD_0x2a__FP16_z80_cpu_context
	.word	op_DD_0x2b__FP16_z80_cpu_context
	.word	op_DD_0x2c__FP16_z80_cpu_context
	.word	op_DD_0x2d__FP16_z80_cpu_context
	.word	op_DD_0x2e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x34__FP16_z80_cpu_context
	.word	op_DD_0x35__FP16_z80_cpu_context
	.word	op_DD_0x36__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	op_DD_0x39__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x44__FP16_z80_cpu_context
	.word	op_DD_0x45__FP16_z80_cpu_context
	.word	op_DD_0x46__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x4c__FP16_z80_cpu_context
	.word	op_DD_0x4d__FP16_z80_cpu_context
	.word	op_DD_0x4e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x54__FP16_z80_cpu_context
	.word	op_DD_0x55__FP16_z80_cpu_context
	.word	op_DD_0x56__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x5c__FP16_z80_cpu_context
	.word	op_DD_0x5d__FP16_z80_cpu_context
	.word	op_DD_0x5e__FP16_z80_cpu_context
	.word	0
	.word	op_DD_0x60__FP16_z80_cpu_context
	.word	op_DD_0x61__FP16_z80_cpu_context
	.word	op_DD_0x62__FP16_z80_cpu_context
	.word	op_DD_0x63__FP16_z80_cpu_context
	.word	op_DD_0x64__FP16_z80_cpu_context
	.word	op_DD_0x65__FP16_z80_cpu_context
	.word	op_DD_0x66__FP16_z80_cpu_context
	.word	op_DD_0x67__FP16_z80_cpu_context
	.word	op_DD_0x68__FP16_z80_cpu_context
	.word	op_DD_0x69__FP16_z80_cpu_context
	.word	op_DD_0x6a__FP16_z80_cpu_context
	.word	op_DD_0x6b__FP16_z80_cpu_context
	.word	op_DD_0x6c__FP16_z80_cpu_context
	.word	op_DD_0x6d__FP16_z80_cpu_context
	.word	op_DD_0x6e__FP16_z80_cpu_context
	.word	op_DD_0x6f__FP16_z80_cpu_context
	.word	op_DD_0x70__FP16_z80_cpu_context
	.word	op_DD_0x71__FP16_z80_cpu_context
	.word	op_DD_0x72__FP16_z80_cpu_context
	.word	op_DD_0x73__FP16_z80_cpu_context
	.word	op_DD_0x74__FP16_z80_cpu_context
	.word	op_DD_0x75__FP16_z80_cpu_context
	.word	0
	.word	op_DD_0x77__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x7c__FP16_z80_cpu_context
	.word	op_DD_0x7d__FP16_z80_cpu_context
	.word	op_DD_0x7e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x84__FP16_z80_cpu_context
	.word	op_DD_0x85__FP16_z80_cpu_context
	.word	op_DD_0x86__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x8c__FP16_z80_cpu_context
	.word	op_DD_0x8d__FP16_z80_cpu_context
	.word	op_DD_0x8e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x94__FP16_z80_cpu_context
	.word	op_DD_0x95__FP16_z80_cpu_context
	.word	op_DD_0x96__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0x9c__FP16_z80_cpu_context
	.word	op_DD_0x9d__FP16_z80_cpu_context
	.word	op_DD_0x9e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0xa4__FP16_z80_cpu_context
	.word	op_DD_0xa5__FP16_z80_cpu_context
	.word	op_DD_0xa6__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0xac__FP16_z80_cpu_context
	.word	op_DD_0xad__FP16_z80_cpu_context
	.word	op_DD_0xae__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0xb4__FP16_z80_cpu_context
	.word	op_DD_0xb5__FP16_z80_cpu_context
	.word	op_DD_0xb6__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0xbc__FP16_z80_cpu_context
	.word	op_DD_0xbd__FP16_z80_cpu_context
	.word	op_DD_0xbe__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0xe1__FP16_z80_cpu_context
	.word	0
	.word	op_DD_0xe3__FP16_z80_cpu_context
	.word	0
	.word	op_DD_0xe5__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	op_DD_0xe9__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_DD_0xf9__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
.text
	.align	0
op_FD_0x09__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #36]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #5]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #36]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #4]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1592
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1588
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1591
.L1593:
	.align	0
.L1592:
	.word	halfcarry_add_table
.L1588:
	orr	r1, lr, r0
.L1591:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x19__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #36]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	ldrb	r2, [ip, #9]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #36]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #8]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1599
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1595
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1598
.L1600:
	.align	0
.L1599:
	.word	halfcarry_add_table
.L1595:
	orr	r1, lr, r0
.L1598:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x21__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1602
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1603
.L1602:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1603:
	strb	r0, [r4, #140]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1604
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1605
.L1604:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1605:
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_FD_0x22__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1608
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1609
.L1608:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1609:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1610
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1611
.L1610:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1611:
	strb	r0, [r4, #145]
	ldrb	r5, [r4, #36]	@ zero_extendqisi2
	ldrb	r6, [r4, #37]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_FD_0x23__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #36]	@ movhi
	add	r3, r3, #1
	strh	r3, [r0, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_FD_0x24__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #37]
	add	r2, r2, #1
	strb	r2, [r0, #37]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #37]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L1619
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L1616
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L1617
.L1620:
	.align	0
.L1619:
	.word	sz53_table
.L1616:
	orr	r1, ip, r1
.L1617:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_FD_0x25__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #37]
	tst	ip, #15
	orreq	r3, r3, #18
.L1622:
	orrne	r3, r3, #2
.L1623:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #37]
	sub	r3, r3, #1
	strb	r3, [r0, #37]
	ldr	r3, .L1627
	ldrb	r2, [r0, #37]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L1624:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L1628:
	.align	0
.L1627:
	.word	sz53_table
	.align	0
op_FD_0x26__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1630
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1631
.L1630:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1631:
	strb	r0, [r4, #148]
	strb	r0, [r4, #37]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x29__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #36]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	mov	r1, r1, asl #1
	ldrh	r0, [ip, #36]	@ movhi
	and	r2, r0, #2048
	cmp	r2, #0
	movne	r2, #3
	moveq	r2, #0
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1638
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1634
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1637
.L1639:
	.align	0
.L1638:
	.word	halfcarry_add_table
.L1634:
	orr	r1, lr, r0
.L1637:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x2a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1641
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1642
.L1641:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1642:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1643
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1644
.L1643:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1644:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_FD_0x2b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrh	r3, [r0, #36]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r0, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_FD_0x2c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #36]
	add	r2, r2, #1
	strb	r2, [r0, #36]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	r1, [r0, #36]	@ zero_extendqisi2
	cmp	r1, #128
	movne	ip, #0
	moveq	ip, #1
	orr	ip, r3, ip, asl #2
	ldr	r3, .L1652
	ldrb	r1, [r3, r1]	@ zero_extendqisi2
	tst	r2, #15
	bne	.L1649
	orr	r3, r1, #16
	orr	r1, ip, r3
	b	.L1650
.L1653:
	.align	0
.L1652:
	.word	sz53_table
.L1649:
	orr	r1, ip, r1
.L1650:
	strb	r1, [r0, #0]
	bx	lr
	.align	0
op_FD_0x2d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	ldrb	ip, [r0, #36]
	tst	ip, #15
	orreq	r3, r3, #18
.L1655:
	orrne	r3, r3, #2
.L1656:
	strb	r3, [r0, #0]
	ldrb	r3, [r0, #36]
	sub	r3, r3, #1
	strb	r3, [r0, #36]
	ldr	r3, .L1660
	ldrb	r2, [r0, #36]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L1657:
	orr	r3, r3, r1
	strb	r3, [r0, #0]
	bx	lr
.L1661:
	.align	0
.L1660:
	.word	sz53_table
	.align	0
op_FD_0x2e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1663
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1664
.L1663:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1664:
	strb	r0, [r4, #148]
	strb	r0, [r4, #36]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x34__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1667
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1668
.L1667:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1668:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1669:
	ldreqb	r3, [r4, #148]
.L1670:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	add	r0, r0, #1
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	cmp	r2, #128
	movne	r1, #0
	moveq	r1, #1
	orr	r1, r3, r1, asl #2
	ldr	r3, .L1674
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r0, #15
	bne	.L1671
	orr	r3, r2, #16
	orr	r2, r1, r3
	b	.L1672
.L1675:
	.align	0
.L1674:
	.word	sz53_table
.L1671:
	orr	r2, r1, r2
.L1672:
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x35__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1677
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1678
.L1677:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1678:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1679:
	ldreqb	r3, [r4, #148]
.L1680:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	tst	r0, #15
	orreq	r3, r3, #18
.L1681:
	orrne	r3, r3, #2
.L1682:
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #148]
	sub	r3, r3, #1
	strb	r3, [r4, #148]
	ldr	r3, .L1687
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r3, r2]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]	@ zero_extendqisi2
	cmp	r2, #127
	orreq	r3, r3, #4
.L1683:
	orr	r3, r3, r1
	strb	r3, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L1686
.L1688:
	.align	0
.L1687:
	.word	sz53_table
.L1686:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x36__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1690
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1691
.L1690:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1691:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1692:
	ldreqb	r3, [r4, #148]
.L1693:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1694
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1695
.L1694:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1695:
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x39__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r1, [ip, #36]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	orr	r1, r1, r3, asl #8
	ldrb	r3, [ip, #48]	@ zero_extendqisi2
	ldrb	r2, [ip, #49]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r1, r1, r3
	ldrh	r0, [ip, #36]	@ movhi
	and	r3, r0, #2048
	ldrh	r2, [ip, #48]	@ movhi
	and	r2, r2, #2048
	cmp	r2, #0
	movne	r2, #2
	moveq	r2, #0
	cmp	r3, #0
	orrne	r2, r2, #1
	and	r3, r1, #2048
	mov	r3, r3, lsr #9
	orr	r2, r2, r3
	and	r2, r2, #255
	add	r0, r0, #1
	strh	r0, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r1, [ip, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [ip, #0]
	and	lr, r3, #196
	mov	r0, r1, lsr #8
	and	r0, r0, #40
	ldr	r3, .L1702
	ldrb	r2, [r3, r2]	@ zero_extendqisi2
	tst	r1, #65536
	beq	.L1698
	orr	r3, r0, #1
	orr	r1, lr, r3
	b	.L1701
.L1703:
	.align	0
.L1702:
	.word	halfcarry_add_table
.L1698:
	orr	r1, lr, r0
.L1701:
	orr	r1, r1, r2
	strb	r1, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x44__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #37]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_FD_0x45__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #36]
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_FD_0x46__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1709
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1710
.L1709:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1710:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1711:
	ldreqb	r3, [r4, #148]
.L1712:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x4c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #37]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_FD_0x4d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #36]
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_FD_0x4e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1719
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1720
.L1719:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1720:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1721:
	ldreqb	r3, [r4, #148]
.L1722:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x54__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #37]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_FD_0x55__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #36]
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_FD_0x56__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1729
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1730
.L1729:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1730:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1731:
	ldreqb	r3, [r4, #148]
.L1732:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x5c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #37]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_FD_0x5d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #36]
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_FD_0x5e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1739
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1740
.L1739:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1740:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1741:
	ldreqb	r3, [r4, #148]
.L1742:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x60__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #37]
	bx	lr
	.align	0
op_FD_0x61__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #37]
	bx	lr
	.align	0
op_FD_0x62__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #37]
	bx	lr
	.align	0
op_FD_0x63__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #37]
	bx	lr
	.align	0
op_FD_0x64__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_FD_0x65__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #36]
	strb	r3, [r0, #37]
	bx	lr
	.align	0
op_FD_0x66__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1757
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1758
.L1757:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1758:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1759:
	ldreqb	r3, [r4, #148]
.L1760:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x67__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #37]
	bx	lr
	.align	0
op_FD_0x68__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	strb	r3, [r0, #36]
	bx	lr
	.align	0
op_FD_0x69__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	strb	r3, [r0, #36]
	bx	lr
	.align	0
op_FD_0x6a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	strb	r3, [r0, #36]
	bx	lr
	.align	0
op_FD_0x6b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	strb	r3, [r0, #36]
	bx	lr
	.align	0
op_FD_0x6c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #37]
	strb	r3, [r0, #36]
	bx	lr
	.align	0
op_FD_0x6d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
op_FD_0x6e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1777
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1778
.L1777:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1778:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1779:
	ldreqb	r3, [r4, #148]
.L1780:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x6f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #36]
	bx	lr
	.align	0
op_FD_0x70__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1785
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1786
.L1785:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1786:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1787:
	ldreqb	r3, [r4, #148]
.L1788:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #5]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x71__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1791
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1792
.L1791:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1792:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1793:
	ldreqb	r3, [r4, #148]
.L1794:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #4]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x72__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1797
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1798
.L1797:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1798:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1799:
	ldreqb	r3, [r4, #148]
.L1800:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #9]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x73__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1803
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1804
.L1803:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1804:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1805:
	ldreqb	r3, [r4, #148]
.L1806:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #8]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x74__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1809
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1810
.L1809:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1810:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1811:
	ldreqb	r3, [r4, #148]
.L1812:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #13]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x75__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1815
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1816
.L1815:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1816:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1817:
	ldreqb	r3, [r4, #148]
.L1818:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #12]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x77__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1821
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1822
.L1821:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1822:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1823:
	ldreqb	r3, [r4, #148]
.L1824:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #1]
	strb	r3, [r4, #148]
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x7c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #37]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_FD_0x7d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #36]
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_FD_0x7e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1831
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1832
.L1831:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1832:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1833:
	ldreqb	r3, [r4, #148]
.L1834:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x84__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #37]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L1841
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1841+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1841+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1837
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L1840
.L1842:
	.align	0
.L1841:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1837:
	orr	r3, lr, r1
.L1840:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x85__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #36]	@ zero_extendqisi2
	add	r0, r0, r3
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #36]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r0, #136
	orr	r3, r3, r2, lsr #1
	strb	r0, [ip, #1]
	ldr	r1, .L1848
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1848+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1848+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1844
	orr	r3, r1, #1
	orr	r3, lr, r3
	b	.L1847
.L1849:
	.align	0
.L1848:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1844:
	orr	r3, lr, r1
.L1847:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x86__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1851
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1852
.L1851:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1852:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1853:
	ldreqb	r3, [r4, #148]
.L1854:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r1, r1, r3
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	and	r3, r1, #136
	orr	r0, r0, r3, lsr #1
	strb	r1, [r4, #1]
	ldr	r2, .L1859
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1859+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1859+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1855
	orr	r3, r0, #1
	orr	r3, ip, r3
	b	.L1858
.L1860:
	.align	0
.L1859:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1855:
	orr	r3, ip, r0
.L1858:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x8c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #37]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L1866
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1866+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1866+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1862
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L1865
.L1867:
	.align	0
.L1866:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1862:
	orr	r3, lr, r0
.L1865:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x8d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #36]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [ip, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r2, [ip, #1]
	and	r2, r2, #136
	ldrb	r3, [ip, #36]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #136
	orr	r3, r3, r2, lsr #1
	strb	r1, [ip, #1]
	ldr	r0, .L1873
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1873+4
	ldrb	r0, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1873+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1869
	orr	r3, r0, #1
	orr	r3, lr, r3
	b	.L1872
.L1874:
	.align	0
.L1873:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1869:
	orr	r3, lr, r0
.L1872:
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x8e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1876
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1877
.L1876:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1877:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1878:
	ldreqb	r3, [r4, #148]
.L1879:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	add	r2, r2, r3
	ldrb	r1, [r4, #0]
	and	r1, r1, #1
	add	r1, r1, r2
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	and	r3, r1, #136
	orr	r0, r0, r3, lsr #1
	strb	r1, [r4, #1]
	ldr	r2, .L1884
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1884+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1884+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1880
	orr	r3, r0, #1
	orr	r3, ip, r3
	b	.L1883
.L1885:
	.align	0
.L1884:
	.word	halfcarry_add_table
	.word	overflow_add_table
	.word	sz53_table
.L1880:
	orr	r3, ip, r0
.L1883:
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x94__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #37]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1891
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1891+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1891+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1887
	orr	r3, r1, #3
	b	.L1890
.L1892:
	.align	0
.L1891:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1887:
	orr	r3, r1, #2
.L1890:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x95__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #36]	@ zero_extendqisi2
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #36]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1898
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1898+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1898+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1894
	orr	r3, r1, #3
	b	.L1897
.L1899:
	.align	0
.L1898:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1894:
	orr	r3, r1, #2
.L1897:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x96__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1901
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1902
.L1901:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1902:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1903:
	ldreqb	r3, [r4, #148]
.L1904:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	rsb	r3, r2, r3
	mov	r3, r3, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r2, lsr #3
	mov	r1, r3, lsr #16
	and	r3, r3, #8912896
	orr	r0, r0, r3, lsr #17
	strb	r1, [r4, #1]
	ldr	r2, .L1909
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1909+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1909+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1905
	orr	r3, r0, #3
	b	.L1908
.L1910:
	.align	0
.L1909:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1905:
	orr	r3, r0, #2
.L1908:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0x9c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #37]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #37]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1916
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1916+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1916+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1912
	orr	r3, r1, #3
	b	.L1915
.L1917:
	.align	0
.L1916:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1912:
	orr	r3, r1, #2
.L1915:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x9d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	ldrb	r3, [ip, #36]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r1, [ip, #1]
	and	r1, r1, #136
	ldrb	r3, [ip, #36]
	and	r3, r3, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r1, lsr #3
	mov	r0, r2, lsr #16
	and	r2, r2, #8912896
	orr	r3, r3, r2, lsr #17
	strb	r0, [ip, #1]
	ldr	r1, .L1923
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L1923+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1923+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L1919
	orr	r3, r1, #3
	b	.L1922
.L1924:
	.align	0
.L1923:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1919:
	orr	r3, r1, #2
.L1922:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_FD_0x9e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1926
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1927
.L1926:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1927:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1928:
	ldreqb	r3, [r4, #148]
.L1929:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r2, r3, r2
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	rsb	r2, r3, r2
	mov	r2, r2, asl #16
	ldrb	r3, [r4, #1]
	and	r3, r3, #136
	and	r0, r0, #136
	mov	r0, r0, lsr #2
	orr	r0, r0, r3, lsr #3
	mov	r1, r2, lsr #16
	and	r2, r2, #8912896
	orr	r0, r0, r2, lsr #17
	strb	r1, [r4, #1]
	ldr	r2, .L1934
	and	r3, r0, #7
	ldrb	ip, [r2, r3]	@ zero_extendqisi2
	ldr	r3, .L1934+4
	ldrb	r0, [r3, r0, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L1934+8
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r1, #256
	beq	.L1930
	orr	r3, r0, #3
	b	.L1933
.L1935:
	.align	0
.L1934:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L1930:
	orr	r3, r0, #2
.L1933:
	orr	r3, ip, r3
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0xa4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #37]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1938
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L1939:
	.align	0
.L1938:
	.word	sz53p_table
	.align	0
op_FD_0xa5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #36]
	and	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1942
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r0, #0]
	bx	lr
.L1943:
	.align	0
.L1942:
	.word	sz53p_table
	.align	0
op_FD_0xa6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1945
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1946
.L1945:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1946:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1947:
	ldreqb	r3, [r4, #148]
.L1948:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	and	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1951
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, #16
	strb	r3, [r4, #0]
	b	.L1950
.L1952:
	.align	0
.L1951:
	.word	sz53p_table
.L1950:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0xac__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #37]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1955
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1956:
	.align	0
.L1955:
	.word	sz53p_table
	.align	0
op_FD_0xad__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #36]
	eor	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1959
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1960:
	.align	0
.L1959:
	.word	sz53p_table
	.align	0
op_FD_0xae__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1962
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1963
.L1962:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1963:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1964:
	ldreqb	r3, [r4, #148]
.L1965:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	eor	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1968
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L1967
.L1969:
	.align	0
.L1968:
	.word	sz53p_table
.L1967:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0xb4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #37]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1972
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1973:
	.align	0
.L1972:
	.word	sz53p_table
	.align	0
op_FD_0xb5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	ldrb	r2, [r0, #36]
	orr	r3, r3, r2
	strb	r3, [r0, #1]
	ldr	r2, .L1976
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r0, #0]
	bx	lr
.L1977:
	.align	0
.L1976:
	.word	sz53p_table
	.align	0
op_FD_0xb6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L1979
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L1980
.L1979:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L1980:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L1981:
	ldreqb	r3, [r4, #148]
.L1982:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #1]
	orr	r3, r3, r0
	strb	r3, [r4, #1]
	ldr	r2, .L1985
	ldrb	r3, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	strb	r3, [r4, #0]
	b	.L1984
.L1986:
	.align	0
.L1985:
	.word	sz53p_table
.L1984:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0xbc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #37]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #37]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L1994
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L1994+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L1988
	cmp	r3, #0
	bne	.L1990
	orr	r3, r2, #66
	b	.L1993
.L1995:
	.align	0
.L1994:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L1990:
	orr	r3, r2, #2
	b	.L1993
.L1988:
	orr	r3, r2, #3
.L1993:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0xbd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #36]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	ldrb	ip, [r4, #36]
	and	r3, ip, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	r0, .L2003
	and	r2, r3, #7
	ldrb	lr, [r0, r2]	@ zero_extendqisi2
	ldr	r2, .L2003+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	ip, ip, #40
	and	r3, r1, #8388608
	mov	r0, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L1997
	cmp	r3, #0
	bne	.L1999
	orr	r3, r2, #66
	b	.L2002
.L2004:
	.align	0
.L2003:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L1999:
	orr	r3, r2, #2
	b	.L2002
.L1997:
	orr	r3, r2, #3
.L2002:
	orr	r3, lr, r3
	orr	r3, r3, ip
	orr	r3, r3, r0
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0xbe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2006
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2007
.L2006:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2007:
	strb	r0, [r4, #148]
	tst	r0, #128
	orrne	r3, r0, #128
.L2008:
	ldreqb	r3, [r4, #148]
.L2009:
	strb	r3, [r4, #149]
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	rsb	r1, r3, r1
	mov	r1, r1, asl #16
	ldrb	r2, [r4, #1]
	and	r2, r2, #136
	and	r3, r0, #136
	mov	r3, r3, lsr #2
	orr	r3, r3, r2, lsr #3
	and	r2, r1, #8912896
	orr	r3, r3, r2, lsr #17
	ldr	ip, .L2016
	and	r2, r3, #7
	ldrb	lr, [ip, r2]	@ zero_extendqisi2
	ldr	r2, .L2016+4
	ldrb	r2, [r2, r3, lsr #4]	@ zero_extendqisi2
	and	r0, r0, #40
	and	r3, r1, #8388608
	mov	ip, r3, lsr #16
	mov	r3, r1, lsr #16
	tst	r1, #16777216
	bne	.L2010
	cmp	r3, #0
	bne	.L2012
	orr	r3, r2, #66
	b	.L2015
.L2017:
	.align	0
.L2016:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
.L2012:
	orr	r3, r2, #2
	b	.L2015
.L2010:
	orr	r3, r2, #3
.L2015:
	orr	r3, lr, r3
	orr	r3, r3, r0
	orr	r3, r3, ip
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FD_0xe1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_FD_0xe3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}
	mov	r4, r0
	add	r5, r4, #48
	ldrb	r3, [r4, #48]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #48]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r3, [r4, #140]	@ zero_extendqisi2
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	ldrb	r6, [r4, #36]	@ zero_extendqisi2
	ldrb	r7, [r4, #37]	@ zero_extendqisi2
	orr	r7, r6, r7, asl #8
	strh	r7, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #48]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, r7, lr}
	bx	lr
	.align	0
op_FD_0xe5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrh	r3, [r4, #36]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r5, lsr #16
	mov	r5, r3, ror #16
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r5, lsr #8
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r5, #255
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_FD_0xe9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #36]	@ zero_extendqisi2
	ldrb	r3, [r0, #37]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	strh	r3, [r0, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_FD_0xf9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #36]	@ zero_extendqisi2
	ldrb	r3, [r0, #37]	@ zero_extendqisi2
	orr	r3, r2, r3, asl #8
	strh	r3, [r0, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.data
	.align	0
opcodes_fd:
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x09__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x19__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x21__FP16_z80_cpu_context
	.word	op_FD_0x22__FP16_z80_cpu_context
	.word	op_FD_0x23__FP16_z80_cpu_context
	.word	op_FD_0x24__FP16_z80_cpu_context
	.word	op_FD_0x25__FP16_z80_cpu_context
	.word	op_FD_0x26__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	op_FD_0x29__FP16_z80_cpu_context
	.word	op_FD_0x2a__FP16_z80_cpu_context
	.word	op_FD_0x2b__FP16_z80_cpu_context
	.word	op_FD_0x2c__FP16_z80_cpu_context
	.word	op_FD_0x2d__FP16_z80_cpu_context
	.word	op_FD_0x2e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x34__FP16_z80_cpu_context
	.word	op_FD_0x35__FP16_z80_cpu_context
	.word	op_FD_0x36__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	op_FD_0x39__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x44__FP16_z80_cpu_context
	.word	op_FD_0x45__FP16_z80_cpu_context
	.word	op_FD_0x46__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x4c__FP16_z80_cpu_context
	.word	op_FD_0x4d__FP16_z80_cpu_context
	.word	op_FD_0x4e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x54__FP16_z80_cpu_context
	.word	op_FD_0x55__FP16_z80_cpu_context
	.word	op_FD_0x56__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x5c__FP16_z80_cpu_context
	.word	op_FD_0x5d__FP16_z80_cpu_context
	.word	op_FD_0x5e__FP16_z80_cpu_context
	.word	0
	.word	op_FD_0x60__FP16_z80_cpu_context
	.word	op_FD_0x61__FP16_z80_cpu_context
	.word	op_FD_0x62__FP16_z80_cpu_context
	.word	op_FD_0x63__FP16_z80_cpu_context
	.word	op_FD_0x64__FP16_z80_cpu_context
	.word	op_FD_0x65__FP16_z80_cpu_context
	.word	op_FD_0x66__FP16_z80_cpu_context
	.word	op_FD_0x67__FP16_z80_cpu_context
	.word	op_FD_0x68__FP16_z80_cpu_context
	.word	op_FD_0x69__FP16_z80_cpu_context
	.word	op_FD_0x6a__FP16_z80_cpu_context
	.word	op_FD_0x6b__FP16_z80_cpu_context
	.word	op_FD_0x6c__FP16_z80_cpu_context
	.word	op_FD_0x6d__FP16_z80_cpu_context
	.word	op_FD_0x6e__FP16_z80_cpu_context
	.word	op_FD_0x6f__FP16_z80_cpu_context
	.word	op_FD_0x70__FP16_z80_cpu_context
	.word	op_FD_0x71__FP16_z80_cpu_context
	.word	op_FD_0x72__FP16_z80_cpu_context
	.word	op_FD_0x73__FP16_z80_cpu_context
	.word	op_FD_0x74__FP16_z80_cpu_context
	.word	op_FD_0x75__FP16_z80_cpu_context
	.word	0
	.word	op_FD_0x77__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x7c__FP16_z80_cpu_context
	.word	op_FD_0x7d__FP16_z80_cpu_context
	.word	op_FD_0x7e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x84__FP16_z80_cpu_context
	.word	op_FD_0x85__FP16_z80_cpu_context
	.word	op_FD_0x86__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x8c__FP16_z80_cpu_context
	.word	op_FD_0x8d__FP16_z80_cpu_context
	.word	op_FD_0x8e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x94__FP16_z80_cpu_context
	.word	op_FD_0x95__FP16_z80_cpu_context
	.word	op_FD_0x96__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0x9c__FP16_z80_cpu_context
	.word	op_FD_0x9d__FP16_z80_cpu_context
	.word	op_FD_0x9e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0xa4__FP16_z80_cpu_context
	.word	op_FD_0xa5__FP16_z80_cpu_context
	.word	op_FD_0xa6__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0xac__FP16_z80_cpu_context
	.word	op_FD_0xad__FP16_z80_cpu_context
	.word	op_FD_0xae__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0xb4__FP16_z80_cpu_context
	.word	op_FD_0xb5__FP16_z80_cpu_context
	.word	op_FD_0xb6__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0xbc__FP16_z80_cpu_context
	.word	op_FD_0xbd__FP16_z80_cpu_context
	.word	op_FD_0xbe__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0xe1__FP16_z80_cpu_context
	.word	0
	.word	op_FD_0xe3__FP16_z80_cpu_context
	.word	0
	.word	op_FD_0xe5__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	op_FD_0xe9__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_FD_0xf9__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
.text
	.align	0
op_CB_0x00__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #5]
	mov	r3, r2, asl #1
	orr	r3, r3, r2, lsr #7
	strb	r3, [r0, #5]
	and	r3, r3, #1
	ldr	r1, .L2030
	ldrb	r2, [r0, #5]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2031:
	.align	0
.L2030:
	.word	sz53p_table
	.align	0
op_CB_0x01__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #4]
	mov	r3, r2, asl #1
	orr	r3, r3, r2, lsr #7
	strb	r3, [r0, #4]
	and	r3, r3, #1
	ldr	r1, .L2034
	ldrb	r2, [r0, #4]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2035:
	.align	0
.L2034:
	.word	sz53p_table
	.align	0
op_CB_0x02__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #9]
	mov	r3, r2, asl #1
	orr	r3, r3, r2, lsr #7
	strb	r3, [r0, #9]
	and	r3, r3, #1
	ldr	r1, .L2038
	ldrb	r2, [r0, #9]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2039:
	.align	0
.L2038:
	.word	sz53p_table
	.align	0
op_CB_0x03__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #8]
	mov	r3, r2, asl #1
	orr	r3, r3, r2, lsr #7
	strb	r3, [r0, #8]
	and	r3, r3, #1
	ldr	r1, .L2042
	ldrb	r2, [r0, #8]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2043:
	.align	0
.L2042:
	.word	sz53p_table
	.align	0
op_CB_0x04__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #13]
	mov	r3, r2, asl #1
	orr	r3, r3, r2, lsr #7
	strb	r3, [r0, #13]
	and	r3, r3, #1
	ldr	r1, .L2046
	ldrb	r2, [r0, #13]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2047:
	.align	0
.L2046:
	.word	sz53p_table
	.align	0
op_CB_0x05__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]
	mov	r3, r2, asl #1
	orr	r3, r3, r2, lsr #7
	strb	r3, [r0, #12]
	and	r3, r3, #1
	ldr	r1, .L2050
	ldrb	r2, [r0, #12]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2051:
	.align	0
.L2050:
	.word	sz53p_table
	.align	0
op_CB_0x06__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r0, r0, #1
	ldr	r2, .L2055
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2054
.L2056:
	.align	0
.L2055:
	.word	sz53p_table
.L2054:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x07__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]
	mov	r3, r2, asl #1
	orr	r3, r3, r2, lsr #7
	strb	r3, [r0, #1]
	and	r3, r3, #1
	ldr	r1, .L2059
	ldrb	r2, [r0, #1]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2060:
	.align	0
.L2059:
	.word	sz53p_table
	.align	0
op_CB_0x08__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r2, r3, #1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #5]
	ldr	r1, .L2063
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2064:
	.align	0
.L2063:
	.word	sz53p_table
	.align	0
op_CB_0x09__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r2, r3, #1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #4]
	ldr	r1, .L2067
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2068:
	.align	0
.L2067:
	.word	sz53p_table
	.align	0
op_CB_0x0a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r2, r3, #1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #9]
	ldr	r1, .L2071
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2072:
	.align	0
.L2071:
	.word	sz53p_table
	.align	0
op_CB_0x0b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r2, r3, #1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #8]
	ldr	r1, .L2075
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2076:
	.align	0
.L2075:
	.word	sz53p_table
	.align	0
op_CB_0x0c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r2, r3, #1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #13]
	ldr	r1, .L2079
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2080:
	.align	0
.L2079:
	.word	sz53p_table
	.align	0
op_CB_0x0d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r2, r3, #1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #12]
	ldr	r1, .L2083
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2084:
	.align	0
.L2083:
	.word	sz53p_table
	.align	0
op_CB_0x0e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L2088
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2087
.L2089:
	.align	0
.L2088:
	.word	sz53p_table
.L2087:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x0f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r2, r3, #1
	strb	r2, [r0, #0]
	and	r1, r3, #255
	mov	r3, r3, asl #7
	orr	r3, r3, r1, lsr #1
	strb	r3, [r0, #1]
	ldr	r1, .L2092
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2093:
	.align	0
.L2092:
	.word	sz53p_table
	.align	0
op_CB_0x10__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #5]	@ zero_extendqisi2
	ldrb	r2, [r0, #5]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	orr	r3, r3, r2, asl #1
	strb	r3, [r0, #5]
	ldr	r2, .L2096
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r0, #0]
	bx	lr
.L2097:
	.align	0
.L2096:
	.word	sz53p_table
	.align	0
op_CB_0x11__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #4]	@ zero_extendqisi2
	ldrb	r2, [r0, #4]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	orr	r3, r3, r2, asl #1
	strb	r3, [r0, #4]
	ldr	r2, .L2100
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r0, #0]
	bx	lr
.L2101:
	.align	0
.L2100:
	.word	sz53p_table
	.align	0
op_CB_0x12__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #9]	@ zero_extendqisi2
	ldrb	r2, [r0, #9]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	orr	r3, r3, r2, asl #1
	strb	r3, [r0, #9]
	ldr	r2, .L2104
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r0, #0]
	bx	lr
.L2105:
	.align	0
.L2104:
	.word	sz53p_table
	.align	0
op_CB_0x13__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #8]	@ zero_extendqisi2
	ldrb	r2, [r0, #8]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	orr	r3, r3, r2, asl #1
	strb	r3, [r0, #8]
	ldr	r2, .L2108
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r0, #0]
	bx	lr
.L2109:
	.align	0
.L2108:
	.word	sz53p_table
	.align	0
op_CB_0x14__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #13]	@ zero_extendqisi2
	ldrb	r2, [r0, #13]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	orr	r3, r3, r2, asl #1
	strb	r3, [r0, #13]
	ldr	r2, .L2112
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r0, #0]
	bx	lr
.L2113:
	.align	0
.L2112:
	.word	sz53p_table
	.align	0
op_CB_0x15__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #12]	@ zero_extendqisi2
	ldrb	r2, [r0, #12]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	orr	r3, r3, r2, asl #1
	strb	r3, [r0, #12]
	ldr	r2, .L2116
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r0, #0]
	bx	lr
.L2117:
	.align	0
.L2116:
	.word	sz53p_table
	.align	0
op_CB_0x16__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	orr	r3, r3, r0, asl #1
	strb	r3, [r4, #148]
	ldr	r2, .L2121
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2120
.L2122:
	.align	0
.L2121:
	.word	sz53p_table
.L2120:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x17__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #1]	@ zero_extendqisi2
	ldrb	r2, [r0, #1]
	ldrb	r3, [r0, #0]
	and	r3, r3, #1
	orr	r3, r3, r2, asl #1
	strb	r3, [r0, #1]
	ldr	r2, .L2125
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r0, #0]
	bx	lr
.L2126:
	.align	0
.L2125:
	.word	sz53p_table
	.align	0
op_CB_0x18__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r0, #5]
	and	r2, r2, #1
	ldr	r1, .L2129
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2130:
	.align	0
.L2129:
	.word	sz53p_table
	.align	0
op_CB_0x19__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r0, #4]
	and	r2, r2, #1
	ldr	r1, .L2133
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2134:
	.align	0
.L2133:
	.word	sz53p_table
	.align	0
op_CB_0x1a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r0, #9]
	and	r2, r2, #1
	ldr	r1, .L2137
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2138:
	.align	0
.L2137:
	.word	sz53p_table
	.align	0
op_CB_0x1b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r0, #8]
	and	r2, r2, #1
	ldr	r1, .L2141
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2142:
	.align	0
.L2141:
	.word	sz53p_table
	.align	0
op_CB_0x1c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r0, #13]
	and	r2, r2, #1
	ldr	r1, .L2145
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2146:
	.align	0
.L2145:
	.word	sz53p_table
	.align	0
op_CB_0x1d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r0, #12]
	and	r2, r2, #1
	ldr	r1, .L2149
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2150:
	.align	0
.L2149:
	.word	sz53p_table
	.align	0
op_CB_0x1e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r4, #148]
	and	r2, r2, #1
	ldr	r1, .L2154
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2153
.L2155:
	.align	0
.L2154:
	.word	sz53p_table
.L2153:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x1f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r0, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r0, #1]
	and	r2, r2, #1
	ldr	r1, .L2158
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2159:
	.align	0
.L2158:
	.word	sz53p_table
	.align	0
op_CB_0x20__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #5]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #5]
	mov	r3, r3, asl #1
	strb	r3, [r0, #5]
	ldr	r1, .L2162
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2163:
	.align	0
.L2162:
	.word	sz53p_table
	.align	0
op_CB_0x21__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #4]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #4]
	mov	r3, r3, asl #1
	strb	r3, [r0, #4]
	ldr	r1, .L2166
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2167:
	.align	0
.L2166:
	.word	sz53p_table
	.align	0
op_CB_0x22__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #9]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #9]
	mov	r3, r3, asl #1
	strb	r3, [r0, #9]
	ldr	r1, .L2170
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2171:
	.align	0
.L2170:
	.word	sz53p_table
	.align	0
op_CB_0x23__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #8]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #8]
	mov	r3, r3, asl #1
	strb	r3, [r0, #8]
	ldr	r1, .L2174
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2175:
	.align	0
.L2174:
	.word	sz53p_table
	.align	0
op_CB_0x24__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #13]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #13]
	mov	r3, r3, asl #1
	strb	r3, [r0, #13]
	ldr	r1, .L2178
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2179:
	.align	0
.L2178:
	.word	sz53p_table
	.align	0
op_CB_0x25__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #12]
	mov	r3, r3, asl #1
	strb	r3, [r0, #12]
	ldr	r1, .L2182
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2183:
	.align	0
.L2182:
	.word	sz53p_table
	.align	0
op_CB_0x26__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L2187
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2186
.L2188:
	.align	0
.L2187:
	.word	sz53p_table
.L2186:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x27__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #1]
	mov	r3, r3, asl #1
	strb	r3, [r0, #1]
	ldr	r1, .L2191
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2192:
	.align	0
.L2191:
	.word	sz53p_table
	.align	0
op_CB_0x28__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #5]
	and	r1, r2, #1
	strb	r1, [r0, #0]
	and	r2, r2, #128
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r2, r2, r3
	strb	r2, [r0, #5]
	ldr	r2, .L2195
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r0, #0]
	bx	lr
.L2196:
	.align	0
.L2195:
	.word	sz53p_table
	.align	0
op_CB_0x29__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #4]
	and	r1, r2, #1
	strb	r1, [r0, #0]
	and	r2, r2, #128
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r2, r2, r3
	strb	r2, [r0, #4]
	ldr	r2, .L2199
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r0, #0]
	bx	lr
.L2200:
	.align	0
.L2199:
	.word	sz53p_table
	.align	0
op_CB_0x2a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #9]
	and	r1, r2, #1
	strb	r1, [r0, #0]
	and	r2, r2, #128
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r2, r2, r3
	strb	r2, [r0, #9]
	ldr	r2, .L2203
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r0, #0]
	bx	lr
.L2204:
	.align	0
.L2203:
	.word	sz53p_table
	.align	0
op_CB_0x2b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #8]
	and	r1, r2, #1
	strb	r1, [r0, #0]
	and	r2, r2, #128
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r2, r2, r3
	strb	r2, [r0, #8]
	ldr	r2, .L2207
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r0, #0]
	bx	lr
.L2208:
	.align	0
.L2207:
	.word	sz53p_table
	.align	0
op_CB_0x2c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #13]
	and	r1, r2, #1
	strb	r1, [r0, #0]
	and	r2, r2, #128
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r2, r2, r3
	strb	r2, [r0, #13]
	ldr	r2, .L2211
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r0, #0]
	bx	lr
.L2212:
	.align	0
.L2211:
	.word	sz53p_table
	.align	0
op_CB_0x2d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]
	and	r1, r2, #1
	strb	r1, [r0, #0]
	and	r2, r2, #128
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r2, r2, r3
	strb	r2, [r0, #12]
	ldr	r2, .L2215
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r0, #0]
	bx	lr
.L2216:
	.align	0
.L2215:
	.word	sz53p_table
	.align	0
op_CB_0x2e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L2220
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2219
.L2221:
	.align	0
.L2220:
	.word	sz53p_table
.L2219:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x2f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]
	and	r1, r2, #1
	strb	r1, [r0, #0]
	and	r2, r2, #128
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r2, r2, r3
	strb	r2, [r0, #1]
	ldr	r2, .L2224
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r0, #0]
	bx	lr
.L2225:
	.align	0
.L2224:
	.word	sz53p_table
	.align	0
op_CB_0x30__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #5]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #5]
	mov	r3, r3, asl #1
	orr	r3, r3, #1
	strb	r3, [r0, #5]
	ldr	r1, .L2228
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2229:
	.align	0
.L2228:
	.word	sz53p_table
	.align	0
op_CB_0x31__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #4]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #4]
	mov	r3, r3, asl #1
	orr	r3, r3, #1
	strb	r3, [r0, #4]
	ldr	r1, .L2232
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2233:
	.align	0
.L2232:
	.word	sz53p_table
	.align	0
op_CB_0x32__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #9]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #9]
	mov	r3, r3, asl #1
	orr	r3, r3, #1
	strb	r3, [r0, #9]
	ldr	r1, .L2236
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2237:
	.align	0
.L2236:
	.word	sz53p_table
	.align	0
op_CB_0x33__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #8]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #8]
	mov	r3, r3, asl #1
	orr	r3, r3, #1
	strb	r3, [r0, #8]
	ldr	r1, .L2240
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2241:
	.align	0
.L2240:
	.word	sz53p_table
	.align	0
op_CB_0x34__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #13]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #13]
	mov	r3, r3, asl #1
	orr	r3, r3, #1
	strb	r3, [r0, #13]
	ldr	r1, .L2244
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2245:
	.align	0
.L2244:
	.word	sz53p_table
	.align	0
op_CB_0x35__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #12]
	mov	r3, r3, asl #1
	orr	r3, r3, #1
	strb	r3, [r0, #12]
	ldr	r1, .L2248
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2249:
	.align	0
.L2248:
	.word	sz53p_table
	.align	0
op_CB_0x36__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L2253
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2252
.L2254:
	.align	0
.L2253:
	.word	sz53p_table
.L2252:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x37__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #1]
	mov	r3, r3, asl #1
	orr	r3, r3, #1
	strb	r3, [r0, #1]
	ldr	r1, .L2257
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2258:
	.align	0
.L2257:
	.word	sz53p_table
	.align	0
op_CB_0x38__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #5]
	and	r2, r2, #1
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r0, #5]
	ldr	r1, .L2261
	ldrb	r3, [r0, #5]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2262:
	.align	0
.L2261:
	.word	sz53p_table
	.align	0
op_CB_0x39__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #4]
	and	r2, r2, #1
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r0, #4]
	ldr	r1, .L2265
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2266:
	.align	0
.L2265:
	.word	sz53p_table
	.align	0
op_CB_0x3a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #9]
	and	r2, r2, #1
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r0, #9]
	ldr	r1, .L2269
	ldrb	r3, [r0, #9]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2270:
	.align	0
.L2269:
	.word	sz53p_table
	.align	0
op_CB_0x3b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #8]
	and	r2, r2, #1
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r0, #8]
	ldr	r1, .L2273
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2274:
	.align	0
.L2273:
	.word	sz53p_table
	.align	0
op_CB_0x3c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #13]
	and	r2, r2, #1
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r0, #13]
	ldr	r1, .L2277
	ldrb	r3, [r0, #13]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2278:
	.align	0
.L2277:
	.word	sz53p_table
	.align	0
op_CB_0x3d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #12]
	and	r2, r2, #1
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r0, #12]
	ldr	r1, .L2281
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2282:
	.align	0
.L2281:
	.word	sz53p_table
	.align	0
op_CB_0x3e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r4, #148]
	ldr	r2, .L2286
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L2285
.L2287:
	.align	0
.L2286:
	.word	sz53p_table
.L2285:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x3f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #1]
	and	r2, r2, #1
	strb	r2, [r0, #0]
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r0, #1]
	ldr	r1, .L2290
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r0, #0]
	bx	lr
.L2291:
	.align	0
.L2290:
	.word	sz53p_table
	.align	0
op_CB_0x40__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2294
	ldrb	r2, [r0, #5]
	and	r3, r2, #1
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2295:
	.align	0
.L2294:
	.word	sz53p_table
	.align	0
op_CB_0x41__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2298
	ldrb	r2, [r0, #4]
	and	r3, r2, #1
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2299:
	.align	0
.L2298:
	.word	sz53p_table
	.align	0
op_CB_0x42__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2302
	ldrb	r2, [r0, #9]
	and	r3, r2, #1
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2303:
	.align	0
.L2302:
	.word	sz53p_table
	.align	0
op_CB_0x43__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2306
	ldrb	r2, [r0, #8]
	and	r3, r2, #1
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2307:
	.align	0
.L2306:
	.word	sz53p_table
	.align	0
op_CB_0x44__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2310
	ldrb	r2, [r0, #13]
	and	r3, r2, #1
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2311:
	.align	0
.L2310:
	.word	sz53p_table
	.align	0
op_CB_0x45__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2314
	ldrb	r2, [r0, #12]
	and	r3, r2, #1
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2315:
	.align	0
.L2314:
	.word	sz53p_table
	.align	0
op_CB_0x46__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2319
	and	r0, r0, #1
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2318
.L2320:
	.align	0
.L2319:
	.word	sz53p_table
.L2318:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x47__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2323
	ldrb	r2, [r0, #1]
	and	r3, r2, #1
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2324:
	.align	0
.L2323:
	.word	sz53p_table
	.align	0
op_CB_0x48__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2327
	ldrb	r2, [r0, #5]
	and	r3, r2, #2
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2328:
	.align	0
.L2327:
	.word	sz53p_table
	.align	0
op_CB_0x49__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2331
	ldrb	r2, [r0, #4]
	and	r3, r2, #2
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2332:
	.align	0
.L2331:
	.word	sz53p_table
	.align	0
op_CB_0x4a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2335
	ldrb	r2, [r0, #9]
	and	r3, r2, #2
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2336:
	.align	0
.L2335:
	.word	sz53p_table
	.align	0
op_CB_0x4b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2339
	ldrb	r2, [r0, #8]
	and	r3, r2, #2
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2340:
	.align	0
.L2339:
	.word	sz53p_table
	.align	0
op_CB_0x4c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2343
	ldrb	r2, [r0, #13]
	and	r3, r2, #2
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2344:
	.align	0
.L2343:
	.word	sz53p_table
	.align	0
op_CB_0x4d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2347
	ldrb	r2, [r0, #12]
	and	r3, r2, #2
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2348:
	.align	0
.L2347:
	.word	sz53p_table
	.align	0
op_CB_0x4e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2352
	and	r0, r0, #2
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2351
.L2353:
	.align	0
.L2352:
	.word	sz53p_table
.L2351:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x4f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2356
	ldrb	r2, [r0, #1]
	and	r3, r2, #2
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2357:
	.align	0
.L2356:
	.word	sz53p_table
	.align	0
op_CB_0x50__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2360
	ldrb	r2, [r0, #5]
	and	r3, r2, #4
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2361:
	.align	0
.L2360:
	.word	sz53p_table
	.align	0
op_CB_0x51__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2364
	ldrb	r2, [r0, #4]
	and	r3, r2, #4
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2365:
	.align	0
.L2364:
	.word	sz53p_table
	.align	0
op_CB_0x52__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2368
	ldrb	r2, [r0, #9]
	and	r3, r2, #4
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2369:
	.align	0
.L2368:
	.word	sz53p_table
	.align	0
op_CB_0x53__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2372
	ldrb	r2, [r0, #8]
	and	r3, r2, #4
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2373:
	.align	0
.L2372:
	.word	sz53p_table
	.align	0
op_CB_0x54__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2376
	ldrb	r2, [r0, #13]
	and	r3, r2, #4
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2377:
	.align	0
.L2376:
	.word	sz53p_table
	.align	0
op_CB_0x55__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2380
	ldrb	r2, [r0, #12]
	and	r3, r2, #4
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2381:
	.align	0
.L2380:
	.word	sz53p_table
	.align	0
op_CB_0x56__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2385
	and	r0, r0, #4
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2384
.L2386:
	.align	0
.L2385:
	.word	sz53p_table
.L2384:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x57__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2389
	ldrb	r2, [r0, #1]
	and	r3, r2, #4
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2390:
	.align	0
.L2389:
	.word	sz53p_table
	.align	0
op_CB_0x58__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2393
	ldrb	r2, [r0, #5]
	and	r3, r2, #8
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2394:
	.align	0
.L2393:
	.word	sz53p_table
	.align	0
op_CB_0x59__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2397
	ldrb	r2, [r0, #4]
	and	r3, r2, #8
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2398:
	.align	0
.L2397:
	.word	sz53p_table
	.align	0
op_CB_0x5a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2401
	ldrb	r2, [r0, #9]
	and	r3, r2, #8
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2402:
	.align	0
.L2401:
	.word	sz53p_table
	.align	0
op_CB_0x5b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2405
	ldrb	r2, [r0, #8]
	and	r3, r2, #8
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2406:
	.align	0
.L2405:
	.word	sz53p_table
	.align	0
op_CB_0x5c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2409
	ldrb	r2, [r0, #13]
	and	r3, r2, #8
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2410:
	.align	0
.L2409:
	.word	sz53p_table
	.align	0
op_CB_0x5d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2413
	ldrb	r2, [r0, #12]
	and	r3, r2, #8
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2414:
	.align	0
.L2413:
	.word	sz53p_table
	.align	0
op_CB_0x5e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2418
	and	r0, r0, #8
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2417
.L2419:
	.align	0
.L2418:
	.word	sz53p_table
.L2417:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x5f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2422
	ldrb	r2, [r0, #1]
	and	r3, r2, #8
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2423:
	.align	0
.L2422:
	.word	sz53p_table
	.align	0
op_CB_0x60__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2426
	ldrb	r2, [r0, #5]
	and	r3, r2, #16
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2427:
	.align	0
.L2426:
	.word	sz53p_table
	.align	0
op_CB_0x61__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2430
	ldrb	r2, [r0, #4]
	and	r3, r2, #16
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2431:
	.align	0
.L2430:
	.word	sz53p_table
	.align	0
op_CB_0x62__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2434
	ldrb	r2, [r0, #9]
	and	r3, r2, #16
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2435:
	.align	0
.L2434:
	.word	sz53p_table
	.align	0
op_CB_0x63__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2438
	ldrb	r2, [r0, #8]
	and	r3, r2, #16
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2439:
	.align	0
.L2438:
	.word	sz53p_table
	.align	0
op_CB_0x64__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2442
	ldrb	r2, [r0, #13]
	and	r3, r2, #16
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2443:
	.align	0
.L2442:
	.word	sz53p_table
	.align	0
op_CB_0x65__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2446
	ldrb	r2, [r0, #12]
	and	r3, r2, #16
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2447:
	.align	0
.L2446:
	.word	sz53p_table
	.align	0
op_CB_0x66__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2451
	and	r0, r0, #16
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2450
.L2452:
	.align	0
.L2451:
	.word	sz53p_table
.L2450:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x67__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2455
	ldrb	r2, [r0, #1]
	and	r3, r2, #16
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2456:
	.align	0
.L2455:
	.word	sz53p_table
	.align	0
op_CB_0x68__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2459
	ldrb	r2, [r0, #5]
	and	r3, r2, #32
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2460:
	.align	0
.L2459:
	.word	sz53p_table
	.align	0
op_CB_0x69__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2463
	ldrb	r2, [r0, #4]
	and	r3, r2, #32
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2464:
	.align	0
.L2463:
	.word	sz53p_table
	.align	0
op_CB_0x6a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2467
	ldrb	r2, [r0, #9]
	and	r3, r2, #32
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2468:
	.align	0
.L2467:
	.word	sz53p_table
	.align	0
op_CB_0x6b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2471
	ldrb	r2, [r0, #8]
	and	r3, r2, #32
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2472:
	.align	0
.L2471:
	.word	sz53p_table
	.align	0
op_CB_0x6c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2475
	ldrb	r2, [r0, #13]
	and	r3, r2, #32
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2476:
	.align	0
.L2475:
	.word	sz53p_table
	.align	0
op_CB_0x6d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2479
	ldrb	r2, [r0, #12]
	and	r3, r2, #32
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2480:
	.align	0
.L2479:
	.word	sz53p_table
	.align	0
op_CB_0x6e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2484
	and	r0, r0, #32
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2483
.L2485:
	.align	0
.L2484:
	.word	sz53p_table
.L2483:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x6f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2488
	ldrb	r2, [r0, #1]
	and	r3, r2, #32
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2489:
	.align	0
.L2488:
	.word	sz53p_table
	.align	0
op_CB_0x70__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2492
	ldrb	r2, [r0, #5]
	and	r3, r2, #64
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2493:
	.align	0
.L2492:
	.word	sz53p_table
	.align	0
op_CB_0x71__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2496
	ldrb	r2, [r0, #4]
	and	r3, r2, #64
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2497:
	.align	0
.L2496:
	.word	sz53p_table
	.align	0
op_CB_0x72__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2500
	ldrb	r2, [r0, #9]
	and	r3, r2, #64
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2501:
	.align	0
.L2500:
	.word	sz53p_table
	.align	0
op_CB_0x73__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2504
	ldrb	r2, [r0, #8]
	and	r3, r2, #64
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2505:
	.align	0
.L2504:
	.word	sz53p_table
	.align	0
op_CB_0x74__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2508
	ldrb	r2, [r0, #13]
	and	r3, r2, #64
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2509:
	.align	0
.L2508:
	.word	sz53p_table
	.align	0
op_CB_0x75__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2512
	ldrb	r2, [r0, #12]
	and	r3, r2, #64
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2513:
	.align	0
.L2512:
	.word	sz53p_table
	.align	0
op_CB_0x76__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2517
	and	r0, r0, #64
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2516
.L2518:
	.align	0
.L2517:
	.word	sz53p_table
.L2516:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x77__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2521
	ldrb	r2, [r0, #1]
	and	r3, r2, #64
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2522:
	.align	0
.L2521:
	.word	sz53p_table
	.align	0
op_CB_0x78__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2525
	ldrb	r2, [r0, #5]
	and	r3, r2, #128
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2526:
	.align	0
.L2525:
	.word	sz53p_table
	.align	0
op_CB_0x79__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2529
	ldrb	r2, [r0, #4]
	and	r3, r2, #128
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2530:
	.align	0
.L2529:
	.word	sz53p_table
	.align	0
op_CB_0x7a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2533
	ldrb	r2, [r0, #9]
	and	r3, r2, #128
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2534:
	.align	0
.L2533:
	.word	sz53p_table
	.align	0
op_CB_0x7b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2537
	ldrb	r2, [r0, #8]
	and	r3, r2, #128
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2538:
	.align	0
.L2537:
	.word	sz53p_table
	.align	0
op_CB_0x7c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2541
	ldrb	r2, [r0, #13]
	and	r3, r2, #128
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2542:
	.align	0
.L2541:
	.word	sz53p_table
	.align	0
op_CB_0x7d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2545
	ldrb	r2, [r0, #12]
	and	r3, r2, #128
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2546:
	.align	0
.L2545:
	.word	sz53p_table
	.align	0
op_CB_0x7e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L2550
	and	r0, r0, #128
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L2549
.L2551:
	.align	0
.L2550:
	.word	sz53p_table
.L2549:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_CB_0x7f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	ip, .L2554
	ldrb	r2, [r0, #1]
	and	r3, r2, #128
	ldrb	r3, [ip, r3]
	cmp	r1, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r0, #0]
	bx	lr
.L2555:
	.align	0
.L2554:
	.word	sz53p_table
	.align	0
op_CB_0x80__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #254
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0x81__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #254
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0x82__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #254
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0x83__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #254
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0x84__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #254
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0x85__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #254
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0x86__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x87__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #254
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0x88__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #253
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0x89__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #253
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0x8a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #253
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0x8b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #253
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0x8c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #253
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0x8d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #253
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0x8e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x8f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #253
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0x90__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #251
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0x91__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #251
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0x92__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #251
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0x93__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #251
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0x94__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #251
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0x95__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #251
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0x96__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x97__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #251
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0x98__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #247
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0x99__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #247
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0x9a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #247
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0x9b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #247
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0x9c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #247
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0x9d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #247
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0x9e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0x9f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #247
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xa0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #239
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xa1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #239
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xa2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #239
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xa3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #239
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xa4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #239
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xa5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #239
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xa6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xa7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #239
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xa8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #223
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xa9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #223
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xaa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #223
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xab__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #223
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xac__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #223
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xad__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #223
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xae__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xaf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #223
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xb0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #191
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xb1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #191
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xb2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #191
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xb3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #191
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xb4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #191
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xb5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #191
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xb6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xb7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #191
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xb8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	and	r3, r3, #127
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xb9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	and	r3, r3, #127
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xba__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	and	r3, r3, #127
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xbb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	and	r3, r3, #127
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xbc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	and	r3, r3, #127
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xbd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	and	r3, r3, #127
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xbe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xbf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	and	r3, r3, #127
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xc0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #1
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xc1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #1
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xc2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #1
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xc3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #1
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xc4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #1
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xc5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #1
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xc6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xc7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #1
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xc8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #2
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xc9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #2
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xca__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #2
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xcb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #2
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xcc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #2
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xcd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #2
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xce__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xcf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #2
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xd0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #4
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xd1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #4
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xd2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #4
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xd3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #4
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xd4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #4
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xd5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #4
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xd6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xd7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #4
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xd8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #8
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xd9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #8
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xda__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #8
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xdb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #8
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xdc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #8
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xdd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #8
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xde__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xdf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #8
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xe0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #16
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xe1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #16
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xe2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #16
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xe3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #16
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xe4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #16
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xe5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #16
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xe6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xe7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #16
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xe8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #32
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xe9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #32
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xea__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #32
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xeb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #32
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xec__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #32
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xed__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #32
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xee__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xef__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #32
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xf0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #64
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xf1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #64
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xf2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #64
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xf3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #64
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xf4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #64
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xf5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #64
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xf6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xf7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #64
	strb	r3, [r0, #1]
	bx	lr
	.align	0
op_CB_0xf8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #5]
	orr	r3, r3, #128
	strb	r3, [r0, #5]
	bx	lr
	.align	0
op_CB_0xf9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #4]
	orr	r3, r3, #128
	strb	r3, [r0, #4]
	bx	lr
	.align	0
op_CB_0xfa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #9]
	orr	r3, r3, #128
	strb	r3, [r0, #9]
	bx	lr
	.align	0
op_CB_0xfb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #8]
	orr	r3, r3, #128
	strb	r3, [r0, #8]
	bx	lr
	.align	0
op_CB_0xfc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #13]
	orr	r3, r3, #128
	strb	r3, [r0, #13]
	bx	lr
	.align	0
op_CB_0xfd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #12]
	orr	r3, r3, #128
	strb	r3, [r0, #12]
	bx	lr
	.align	0
op_CB_0xfe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	add	r5, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #1]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_CB_0xff__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	orr	r3, r3, #128
	strb	r3, [r0, #1]
	bx	lr
.data
	.align	0
opcodes_cb:
	.word	op_CB_0x00__FP16_z80_cpu_context
	.word	op_CB_0x01__FP16_z80_cpu_context
	.word	op_CB_0x02__FP16_z80_cpu_context
	.word	op_CB_0x03__FP16_z80_cpu_context
	.word	op_CB_0x04__FP16_z80_cpu_context
	.word	op_CB_0x05__FP16_z80_cpu_context
	.word	op_CB_0x06__FP16_z80_cpu_context
	.word	op_CB_0x07__FP16_z80_cpu_context
	.word	op_CB_0x08__FP16_z80_cpu_context
	.word	op_CB_0x09__FP16_z80_cpu_context
	.word	op_CB_0x0a__FP16_z80_cpu_context
	.word	op_CB_0x0b__FP16_z80_cpu_context
	.word	op_CB_0x0c__FP16_z80_cpu_context
	.word	op_CB_0x0d__FP16_z80_cpu_context
	.word	op_CB_0x0e__FP16_z80_cpu_context
	.word	op_CB_0x0f__FP16_z80_cpu_context
	.word	op_CB_0x10__FP16_z80_cpu_context
	.word	op_CB_0x11__FP16_z80_cpu_context
	.word	op_CB_0x12__FP16_z80_cpu_context
	.word	op_CB_0x13__FP16_z80_cpu_context
	.word	op_CB_0x14__FP16_z80_cpu_context
	.word	op_CB_0x15__FP16_z80_cpu_context
	.word	op_CB_0x16__FP16_z80_cpu_context
	.word	op_CB_0x17__FP16_z80_cpu_context
	.word	op_CB_0x18__FP16_z80_cpu_context
	.word	op_CB_0x19__FP16_z80_cpu_context
	.word	op_CB_0x1a__FP16_z80_cpu_context
	.word	op_CB_0x1b__FP16_z80_cpu_context
	.word	op_CB_0x1c__FP16_z80_cpu_context
	.word	op_CB_0x1d__FP16_z80_cpu_context
	.word	op_CB_0x1e__FP16_z80_cpu_context
	.word	op_CB_0x1f__FP16_z80_cpu_context
	.word	op_CB_0x20__FP16_z80_cpu_context
	.word	op_CB_0x21__FP16_z80_cpu_context
	.word	op_CB_0x22__FP16_z80_cpu_context
	.word	op_CB_0x23__FP16_z80_cpu_context
	.word	op_CB_0x24__FP16_z80_cpu_context
	.word	op_CB_0x25__FP16_z80_cpu_context
	.word	op_CB_0x26__FP16_z80_cpu_context
	.word	op_CB_0x27__FP16_z80_cpu_context
	.word	op_CB_0x28__FP16_z80_cpu_context
	.word	op_CB_0x29__FP16_z80_cpu_context
	.word	op_CB_0x2a__FP16_z80_cpu_context
	.word	op_CB_0x2b__FP16_z80_cpu_context
	.word	op_CB_0x2c__FP16_z80_cpu_context
	.word	op_CB_0x2d__FP16_z80_cpu_context
	.word	op_CB_0x2e__FP16_z80_cpu_context
	.word	op_CB_0x2f__FP16_z80_cpu_context
	.word	op_CB_0x30__FP16_z80_cpu_context
	.word	op_CB_0x31__FP16_z80_cpu_context
	.word	op_CB_0x32__FP16_z80_cpu_context
	.word	op_CB_0x33__FP16_z80_cpu_context
	.word	op_CB_0x34__FP16_z80_cpu_context
	.word	op_CB_0x35__FP16_z80_cpu_context
	.word	op_CB_0x36__FP16_z80_cpu_context
	.word	op_CB_0x37__FP16_z80_cpu_context
	.word	op_CB_0x38__FP16_z80_cpu_context
	.word	op_CB_0x39__FP16_z80_cpu_context
	.word	op_CB_0x3a__FP16_z80_cpu_context
	.word	op_CB_0x3b__FP16_z80_cpu_context
	.word	op_CB_0x3c__FP16_z80_cpu_context
	.word	op_CB_0x3d__FP16_z80_cpu_context
	.word	op_CB_0x3e__FP16_z80_cpu_context
	.word	op_CB_0x3f__FP16_z80_cpu_context
	.word	op_CB_0x40__FP16_z80_cpu_context
	.word	op_CB_0x41__FP16_z80_cpu_context
	.word	op_CB_0x42__FP16_z80_cpu_context
	.word	op_CB_0x43__FP16_z80_cpu_context
	.word	op_CB_0x44__FP16_z80_cpu_context
	.word	op_CB_0x45__FP16_z80_cpu_context
	.word	op_CB_0x46__FP16_z80_cpu_context
	.word	op_CB_0x47__FP16_z80_cpu_context
	.word	op_CB_0x48__FP16_z80_cpu_context
	.word	op_CB_0x49__FP16_z80_cpu_context
	.word	op_CB_0x4a__FP16_z80_cpu_context
	.word	op_CB_0x4b__FP16_z80_cpu_context
	.word	op_CB_0x4c__FP16_z80_cpu_context
	.word	op_CB_0x4d__FP16_z80_cpu_context
	.word	op_CB_0x4e__FP16_z80_cpu_context
	.word	op_CB_0x4f__FP16_z80_cpu_context
	.word	op_CB_0x50__FP16_z80_cpu_context
	.word	op_CB_0x51__FP16_z80_cpu_context
	.word	op_CB_0x52__FP16_z80_cpu_context
	.word	op_CB_0x53__FP16_z80_cpu_context
	.word	op_CB_0x54__FP16_z80_cpu_context
	.word	op_CB_0x55__FP16_z80_cpu_context
	.word	op_CB_0x56__FP16_z80_cpu_context
	.word	op_CB_0x57__FP16_z80_cpu_context
	.word	op_CB_0x58__FP16_z80_cpu_context
	.word	op_CB_0x59__FP16_z80_cpu_context
	.word	op_CB_0x5a__FP16_z80_cpu_context
	.word	op_CB_0x5b__FP16_z80_cpu_context
	.word	op_CB_0x5c__FP16_z80_cpu_context
	.word	op_CB_0x5d__FP16_z80_cpu_context
	.word	op_CB_0x5e__FP16_z80_cpu_context
	.word	op_CB_0x5f__FP16_z80_cpu_context
	.word	op_CB_0x60__FP16_z80_cpu_context
	.word	op_CB_0x61__FP16_z80_cpu_context
	.word	op_CB_0x62__FP16_z80_cpu_context
	.word	op_CB_0x63__FP16_z80_cpu_context
	.word	op_CB_0x64__FP16_z80_cpu_context
	.word	op_CB_0x65__FP16_z80_cpu_context
	.word	op_CB_0x66__FP16_z80_cpu_context
	.word	op_CB_0x67__FP16_z80_cpu_context
	.word	op_CB_0x68__FP16_z80_cpu_context
	.word	op_CB_0x69__FP16_z80_cpu_context
	.word	op_CB_0x6a__FP16_z80_cpu_context
	.word	op_CB_0x6b__FP16_z80_cpu_context
	.word	op_CB_0x6c__FP16_z80_cpu_context
	.word	op_CB_0x6d__FP16_z80_cpu_context
	.word	op_CB_0x6e__FP16_z80_cpu_context
	.word	op_CB_0x6f__FP16_z80_cpu_context
	.word	op_CB_0x70__FP16_z80_cpu_context
	.word	op_CB_0x71__FP16_z80_cpu_context
	.word	op_CB_0x72__FP16_z80_cpu_context
	.word	op_CB_0x73__FP16_z80_cpu_context
	.word	op_CB_0x74__FP16_z80_cpu_context
	.word	op_CB_0x75__FP16_z80_cpu_context
	.word	op_CB_0x76__FP16_z80_cpu_context
	.word	op_CB_0x77__FP16_z80_cpu_context
	.word	op_CB_0x78__FP16_z80_cpu_context
	.word	op_CB_0x79__FP16_z80_cpu_context
	.word	op_CB_0x7a__FP16_z80_cpu_context
	.word	op_CB_0x7b__FP16_z80_cpu_context
	.word	op_CB_0x7c__FP16_z80_cpu_context
	.word	op_CB_0x7d__FP16_z80_cpu_context
	.word	op_CB_0x7e__FP16_z80_cpu_context
	.word	op_CB_0x7f__FP16_z80_cpu_context
	.word	op_CB_0x80__FP16_z80_cpu_context
	.word	op_CB_0x81__FP16_z80_cpu_context
	.word	op_CB_0x82__FP16_z80_cpu_context
	.word	op_CB_0x83__FP16_z80_cpu_context
	.word	op_CB_0x84__FP16_z80_cpu_context
	.word	op_CB_0x85__FP16_z80_cpu_context
	.word	op_CB_0x86__FP16_z80_cpu_context
	.word	op_CB_0x87__FP16_z80_cpu_context
	.word	op_CB_0x88__FP16_z80_cpu_context
	.word	op_CB_0x89__FP16_z80_cpu_context
	.word	op_CB_0x8a__FP16_z80_cpu_context
	.word	op_CB_0x8b__FP16_z80_cpu_context
	.word	op_CB_0x8c__FP16_z80_cpu_context
	.word	op_CB_0x8d__FP16_z80_cpu_context
	.word	op_CB_0x8e__FP16_z80_cpu_context
	.word	op_CB_0x8f__FP16_z80_cpu_context
	.word	op_CB_0x90__FP16_z80_cpu_context
	.word	op_CB_0x91__FP16_z80_cpu_context
	.word	op_CB_0x92__FP16_z80_cpu_context
	.word	op_CB_0x93__FP16_z80_cpu_context
	.word	op_CB_0x94__FP16_z80_cpu_context
	.word	op_CB_0x95__FP16_z80_cpu_context
	.word	op_CB_0x96__FP16_z80_cpu_context
	.word	op_CB_0x97__FP16_z80_cpu_context
	.word	op_CB_0x98__FP16_z80_cpu_context
	.word	op_CB_0x99__FP16_z80_cpu_context
	.word	op_CB_0x9a__FP16_z80_cpu_context
	.word	op_CB_0x9b__FP16_z80_cpu_context
	.word	op_CB_0x9c__FP16_z80_cpu_context
	.word	op_CB_0x9d__FP16_z80_cpu_context
	.word	op_CB_0x9e__FP16_z80_cpu_context
	.word	op_CB_0x9f__FP16_z80_cpu_context
	.word	op_CB_0xa0__FP16_z80_cpu_context
	.word	op_CB_0xa1__FP16_z80_cpu_context
	.word	op_CB_0xa2__FP16_z80_cpu_context
	.word	op_CB_0xa3__FP16_z80_cpu_context
	.word	op_CB_0xa4__FP16_z80_cpu_context
	.word	op_CB_0xa5__FP16_z80_cpu_context
	.word	op_CB_0xa6__FP16_z80_cpu_context
	.word	op_CB_0xa7__FP16_z80_cpu_context
	.word	op_CB_0xa8__FP16_z80_cpu_context
	.word	op_CB_0xa9__FP16_z80_cpu_context
	.word	op_CB_0xaa__FP16_z80_cpu_context
	.word	op_CB_0xab__FP16_z80_cpu_context
	.word	op_CB_0xac__FP16_z80_cpu_context
	.word	op_CB_0xad__FP16_z80_cpu_context
	.word	op_CB_0xae__FP16_z80_cpu_context
	.word	op_CB_0xaf__FP16_z80_cpu_context
	.word	op_CB_0xb0__FP16_z80_cpu_context
	.word	op_CB_0xb1__FP16_z80_cpu_context
	.word	op_CB_0xb2__FP16_z80_cpu_context
	.word	op_CB_0xb3__FP16_z80_cpu_context
	.word	op_CB_0xb4__FP16_z80_cpu_context
	.word	op_CB_0xb5__FP16_z80_cpu_context
	.word	op_CB_0xb6__FP16_z80_cpu_context
	.word	op_CB_0xb7__FP16_z80_cpu_context
	.word	op_CB_0xb8__FP16_z80_cpu_context
	.word	op_CB_0xb9__FP16_z80_cpu_context
	.word	op_CB_0xba__FP16_z80_cpu_context
	.word	op_CB_0xbb__FP16_z80_cpu_context
	.word	op_CB_0xbc__FP16_z80_cpu_context
	.word	op_CB_0xbd__FP16_z80_cpu_context
	.word	op_CB_0xbe__FP16_z80_cpu_context
	.word	op_CB_0xbf__FP16_z80_cpu_context
	.word	op_CB_0xc0__FP16_z80_cpu_context
	.word	op_CB_0xc1__FP16_z80_cpu_context
	.word	op_CB_0xc2__FP16_z80_cpu_context
	.word	op_CB_0xc3__FP16_z80_cpu_context
	.word	op_CB_0xc4__FP16_z80_cpu_context
	.word	op_CB_0xc5__FP16_z80_cpu_context
	.word	op_CB_0xc6__FP16_z80_cpu_context
	.word	op_CB_0xc7__FP16_z80_cpu_context
	.word	op_CB_0xc8__FP16_z80_cpu_context
	.word	op_CB_0xc9__FP16_z80_cpu_context
	.word	op_CB_0xca__FP16_z80_cpu_context
	.word	op_CB_0xcb__FP16_z80_cpu_context
	.word	op_CB_0xcc__FP16_z80_cpu_context
	.word	op_CB_0xcd__FP16_z80_cpu_context
	.word	op_CB_0xce__FP16_z80_cpu_context
	.word	op_CB_0xcf__FP16_z80_cpu_context
	.word	op_CB_0xd0__FP16_z80_cpu_context
	.word	op_CB_0xd1__FP16_z80_cpu_context
	.word	op_CB_0xd2__FP16_z80_cpu_context
	.word	op_CB_0xd3__FP16_z80_cpu_context
	.word	op_CB_0xd4__FP16_z80_cpu_context
	.word	op_CB_0xd5__FP16_z80_cpu_context
	.word	op_CB_0xd6__FP16_z80_cpu_context
	.word	op_CB_0xd7__FP16_z80_cpu_context
	.word	op_CB_0xd8__FP16_z80_cpu_context
	.word	op_CB_0xd9__FP16_z80_cpu_context
	.word	op_CB_0xda__FP16_z80_cpu_context
	.word	op_CB_0xdb__FP16_z80_cpu_context
	.word	op_CB_0xdc__FP16_z80_cpu_context
	.word	op_CB_0xdd__FP16_z80_cpu_context
	.word	op_CB_0xde__FP16_z80_cpu_context
	.word	op_CB_0xdf__FP16_z80_cpu_context
	.word	op_CB_0xe0__FP16_z80_cpu_context
	.word	op_CB_0xe1__FP16_z80_cpu_context
	.word	op_CB_0xe2__FP16_z80_cpu_context
	.word	op_CB_0xe3__FP16_z80_cpu_context
	.word	op_CB_0xe4__FP16_z80_cpu_context
	.word	op_CB_0xe5__FP16_z80_cpu_context
	.word	op_CB_0xe6__FP16_z80_cpu_context
	.word	op_CB_0xe7__FP16_z80_cpu_context
	.word	op_CB_0xe8__FP16_z80_cpu_context
	.word	op_CB_0xe9__FP16_z80_cpu_context
	.word	op_CB_0xea__FP16_z80_cpu_context
	.word	op_CB_0xeb__FP16_z80_cpu_context
	.word	op_CB_0xec__FP16_z80_cpu_context
	.word	op_CB_0xed__FP16_z80_cpu_context
	.word	op_CB_0xee__FP16_z80_cpu_context
	.word	op_CB_0xef__FP16_z80_cpu_context
	.word	op_CB_0xf0__FP16_z80_cpu_context
	.word	op_CB_0xf1__FP16_z80_cpu_context
	.word	op_CB_0xf2__FP16_z80_cpu_context
	.word	op_CB_0xf3__FP16_z80_cpu_context
	.word	op_CB_0xf4__FP16_z80_cpu_context
	.word	op_CB_0xf5__FP16_z80_cpu_context
	.word	op_CB_0xf6__FP16_z80_cpu_context
	.word	op_CB_0xf7__FP16_z80_cpu_context
	.word	op_CB_0xf8__FP16_z80_cpu_context
	.word	op_CB_0xf9__FP16_z80_cpu_context
	.word	op_CB_0xfa__FP16_z80_cpu_context
	.word	op_CB_0xfb__FP16_z80_cpu_context
	.word	op_CB_0xfc__FP16_z80_cpu_context
	.word	op_CB_0xfd__FP16_z80_cpu_context
	.word	op_CB_0xfe__FP16_z80_cpu_context
	.word	op_CB_0xff__FP16_z80_cpu_context
.text
	.align	0
op_ED_0x40__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #5]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L2815
	ldrb	r2, [r4, #5]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L2814
.L2816:
	.align	0
.L2815:
	.word	sz53p_table
.L2814:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x41__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #5]	@ zero_extendqisi2
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x42__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r0, r0, r3, asl #8
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #5]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	rsb	r0, r3, r0
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r0, r3, r0
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	ldrh	r3, [ip, #4]	@ movhi
	and	r3, r3, #34816
	mov	r3, r3, lsr #10
	orr	r3, r3, r2, lsr #11
	and	r2, r0, #34816
	orr	r3, r3, r2, lsr #9
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L2824
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L2824+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L2820
	orr	r3, r1, #3
	b	.L2823
.L2825:
	.align	0
.L2824:
	.word	overflow_sub_table
	.word	halfcarry_sub_table
.L2820:
	orr	r3, r1, #2
.L2823:
	orr	r1, lr, r3
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x43__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2827
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2828
.L2827:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2828:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2829
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2830
.L2829:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2830:
	strb	r0, [r4, #145]
	ldrb	r5, [r4, #4]	@ zero_extendqisi2
	ldrb	r6, [r4, #5]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x44__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L2837
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L2837+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L2837+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L2833
	orr	r3, r1, #3
	b	.L2836
.L2838:
	.align	0
.L2837:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L2833:
	orr	r3, r1, #2
.L2836:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x45__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x46__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #0
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0x47__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #40]
	bx	lr
	.align	0
op_ED_0x48__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #4]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L2848
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L2847
.L2849:
	.align	0
.L2848:
	.word	sz53p_table
.L2847:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x49__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r2, r1, asl #8
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x4a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r0, r0, r3, asl #8
	ldrb	r3, [ip, #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #5]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r0, r0, r3
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	add	r0, r0, r3
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	ldrh	r3, [ip, #4]	@ movhi
	and	r3, r3, #34816
	mov	r3, r3, lsr #10
	orr	r3, r3, r2, lsr #11
	and	r2, r0, #34816
	orr	r3, r3, r2, lsr #9
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L2857
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L2857+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L2853
	orr	r3, r1, #1
	orr	r1, lr, r3
	b	.L2856
.L2858:
	.align	0
.L2857:
	.word	overflow_add_table
	.word	halfcarry_add_table
.L2853:
	orr	r1, lr, r1
.L2856:
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x4b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2860
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2861
.L2860:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2861:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2862
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2863
.L2862:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2863:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x4c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L2870
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L2870+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L2870+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L2866
	orr	r3, r1, #3
	b	.L2869
.L2871:
	.align	0
.L2870:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L2866:
	orr	r3, r1, #2
.L2869:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x4d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x4e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #0
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0x4f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #1]
	strb	r3, [r0, #44]
	and	r3, r3, #255
	strh	r3, [r0, #42]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
	.align	0
op_ED_0x50__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #9]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L2881
	ldrb	r2, [r4, #9]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L2880
.L2882:
	.align	0
.L2881:
	.word	sz53p_table
.L2880:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x51__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #9]	@ zero_extendqisi2
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x52__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r0, r0, r3, asl #8
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	ldrb	r2, [ip, #9]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	rsb	r0, r3, r0
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r0, r3, r0
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	ldrh	r3, [ip, #8]	@ movhi
	and	r3, r3, #34816
	mov	r3, r3, lsr #10
	orr	r3, r3, r2, lsr #11
	and	r2, r0, #34816
	orr	r3, r3, r2, lsr #9
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L2890
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L2890+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L2886
	orr	r3, r1, #3
	b	.L2889
.L2891:
	.align	0
.L2890:
	.word	overflow_sub_table
	.word	halfcarry_sub_table
.L2886:
	orr	r3, r1, #2
.L2889:
	orr	r1, lr, r3
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x53__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2893
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2894
.L2893:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2894:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2895
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2896
.L2895:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2896:
	strb	r0, [r4, #145]
	ldrb	r5, [r4, #8]	@ zero_extendqisi2
	ldrb	r6, [r4, #9]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x54__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L2903
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L2903+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L2903+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L2899
	orr	r3, r1, #3
	b	.L2902
.L2904:
	.align	0
.L2903:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L2899:
	orr	r3, r1, #2
.L2902:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x55__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x56__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #1
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0x57__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r3, [r0, #40]
	strb	r3, [r0, #1]
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	r2, .L2911
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]
	orr	r2, r2, r1
	ldrb	r3, [r0, #57]	@ zero_extendqisi2
	subs	r3, r3, #0
	movne	r3, #1
	orr	r3, r2, r3, asl #2
	strb	r3, [r0, #0]
	bx	lr
.L2912:
	.align	0
.L2911:
	.word	sz53_table
	.align	0
op_ED_0x58__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #8]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L2916
	ldrb	r2, [r4, #8]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L2915
.L2917:
	.align	0
.L2916:
	.word	sz53p_table
.L2915:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x59__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #8]	@ zero_extendqisi2
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x5a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r0, r0, r3, asl #8
	ldrb	r3, [ip, #8]	@ zero_extendqisi2
	ldrb	r2, [ip, #9]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r0, r0, r3
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	add	r0, r0, r3
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	ldrh	r3, [ip, #8]	@ movhi
	and	r3, r3, #34816
	mov	r3, r3, lsr #10
	orr	r3, r3, r2, lsr #11
	and	r2, r0, #34816
	orr	r3, r3, r2, lsr #9
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L2925
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L2925+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L2921
	orr	r3, r1, #1
	orr	r1, lr, r3
	b	.L2924
.L2926:
	.align	0
.L2925:
	.word	overflow_add_table
	.word	halfcarry_add_table
.L2921:
	orr	r1, lr, r1
.L2924:
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x5b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2928
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2929
.L2928:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2929:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2930
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2931
.L2930:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2931:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x5c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L2938
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L2938+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L2938+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L2934
	orr	r3, r1, #3
	b	.L2937
.L2939:
	.align	0
.L2938:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L2934:
	orr	r3, r1, #2
.L2937:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x5d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x5e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #2
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0x5f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r2, [r0, #42]
	ldrb	r3, [r0, #44]
	and	r3, r3, #128
	cmp	r3, #0
	orrne	r2, r2, #128
	andeq	r2, r2, #127
	strb	r2, [r0, #1]
	ldrb	r1, [r0, #0]
	and	r1, r1, #1
	ldr	r2, .L2946
	ldrb	r3, [r0, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]
	orr	r2, r2, r1
	ldrb	r3, [r0, #57]	@ zero_extendqisi2
	subs	r3, r3, #0
	movne	r3, #1
	orr	r3, r2, r3, asl #2
	strb	r3, [r0, #0]
	bx	lr
.L2947:
	.align	0
.L2946:
	.word	sz53_table
	.align	0
op_ED_0x60__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #13]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L2951
	ldrb	r2, [r4, #13]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L2950
.L2952:
	.align	0
.L2951:
	.word	sz53p_table
.L2950:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x61__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #13]	@ zero_extendqisi2
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x62__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #0]
	and	r0, r0, #1
	rsb	r0, r0, #0
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	mov	r3, r2, lsr #10
	orr	r3, r3, r2, lsr #11
	cmp	r0, #0
	movne	r2, #68
	moveq	r2, #0
	orr	r3, r3, r2
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L2960
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L2960+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L2956
	orr	r3, r1, #3
	b	.L2959
.L2961:
	.align	0
.L2960:
	.word	overflow_sub_table
	.word	halfcarry_sub_table
.L2956:
	orr	r3, r1, #2
.L2959:
	orr	r1, lr, r3
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x63__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2963
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2964
.L2963:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2964:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2965
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L2966
.L2965:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L2966:
	strb	r0, [r4, #145]
	ldrb	r5, [r4, #12]	@ zero_extendqisi2
	ldrb	r6, [r4, #13]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x64__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L2973
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L2973+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L2973+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L2969
	orr	r3, r1, #3
	b	.L2972
.L2974:
	.align	0
.L2973:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L2969:
	orr	r3, r1, #2
.L2972:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x65__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x66__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #0
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0x67__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	add	r6, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r6, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	mov	r5, r0
	and	r2, r5, #255
	ldrb	ip, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r6, #1]	@ zero_extendqisi2
	ldrb	r3, [r4, #1]
	mov	r2, r2, lsr #4
	orr	r2, r2, r3, asl #4
	and	r2, r2, #255
	mov	r0, r4
	orr	r1, ip, r1, asl #8
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrb	r3, [r4, #1]
	and	r3, r3, #240
	and	r5, r5, #15
	orr	r3, r3, r5
	strb	r3, [r4, #1]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L2982
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L2981
.L2983:
	.align	0
.L2982:
	.word	sz53p_table
.L2981:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x68__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #12]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L2987
	ldrb	r2, [r4, #12]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L2986
.L2988:
	.align	0
.L2987:
	.word	sz53p_table
.L2986:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x69__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #12]	@ zero_extendqisi2
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x6a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r0, r0, r3, asl #8
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	orr	r0, r3, r0, asl #1
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	mov	r3, r2, lsr #10
	orr	r3, r3, r2, lsr #11
	and	r2, r0, #34816
	orr	r3, r3, r2, lsr #9
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L2996
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L2996+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L2992
	orr	r3, r1, #1
	orr	r1, lr, r3
	b	.L2995
.L2997:
	.align	0
.L2996:
	.word	overflow_add_table
	.word	halfcarry_add_table
.L2992:
	orr	r1, lr, r1
.L2995:
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x6b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L2999
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L3000
.L2999:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L3000:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L3001
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L3002
.L3001:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L3002:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x6c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L3009
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L3009+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L3009+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L3005
	orr	r3, r1, #3
	b	.L3008
.L3010:
	.align	0
.L3009:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L3005:
	orr	r3, r1, #2
.L3008:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x6d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x6e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #0
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0x6f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	add	r6, r4, #12
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r6, #1]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	mov	r5, r0
	and	r5, r5, #255
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r6, #1]	@ zero_extendqisi2
	ldrb	r2, [r4, #1]
	and	r2, r2, #15
	orr	r2, r2, r5, asl #4
	and	r2, r2, #255
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrb	r3, [r4, #1]
	and	r3, r3, #240
	orr	r3, r3, r5, lsr #4
	strb	r3, [r4, #1]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L3018
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L3017
.L3019:
	.align	0
.L3018:
	.word	sz53p_table
.L3017:
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x70__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r2, .L3023
	ldrb	r2, [r2, r0]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L3022
.L3024:
	.align	0
.L3023:
	.word	sz53p_table
.L3022:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x71__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x72__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r0, r0, r3, asl #8
	ldrb	r3, [ip, #48]	@ zero_extendqisi2
	ldrb	r2, [ip, #49]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	rsb	r0, r3, r0
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	rsb	r0, r3, r0
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	ldrh	r3, [ip, #48]	@ movhi
	and	r3, r3, #34816
	mov	r3, r3, lsr #10
	orr	r3, r3, r2, lsr #11
	and	r2, r0, #34816
	orr	r3, r3, r2, lsr #9
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3032
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L3032+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L3028
	orr	r3, r1, #3
	b	.L3031
.L3033:
	.align	0
.L3032:
	.word	overflow_sub_table
	.word	halfcarry_sub_table
.L3028:
	orr	r3, r1, #2
.L3031:
	orr	r1, lr, r3
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x73__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L3035
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L3036
.L3035:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L3036:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L3037
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L3038
.L3037:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L3038:
	strb	r0, [r4, #145]
	ldrb	r5, [r4, #48]	@ zero_extendqisi2
	ldrb	r6, [r4, #49]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #140]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #140]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #141]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x74__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L3045
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L3045+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L3045+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L3041
	orr	r3, r1, #3
	b	.L3044
.L3046:
	.align	0
.L3045:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L3041:
	orr	r3, r1, #2
.L3044:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x75__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x76__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #1
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0x78__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #1]
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	ldr	r1, .L3054
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldrb	r2, [r1, r2]
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	b	.L3053
.L3055:
	.align	0
.L3054:
	.word	sz53p_table
.L3053:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x79__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldrb	r2, [r4, #1]	@ zero_extendqisi2
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0x7a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r0, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orr	r0, r0, r3, asl #8
	ldrb	r3, [ip, #48]	@ zero_extendqisi2
	ldrb	r2, [ip, #49]	@ zero_extendqisi2
	orr	r3, r3, r2, asl #8
	add	r0, r0, r3
	ldrb	r3, [ip, #0]
	and	r3, r3, #1
	add	r0, r0, r3
	ldrh	r1, [ip, #12]	@ movhi
	and	r2, r1, #34816
	ldrh	r3, [ip, #48]	@ movhi
	and	r3, r3, #34816
	mov	r3, r3, lsr #10
	orr	r3, r3, r2, lsr #11
	and	r2, r0, #34816
	orr	r3, r3, r2, lsr #9
	add	r1, r1, #1
	strh	r1, [ip, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r0, [ip, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3063
	ldrb	lr, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldrb	r2, [ip, #13]
	and	r1, r2, #168
	ldr	r2, .L3063+4
	and	r3, r3, #7
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #65536
	beq	.L3059
	orr	r3, r1, #1
	orr	r1, lr, r3
	b	.L3062
.L3064:
	.align	0
.L3063:
	.word	overflow_add_table
	.word	halfcarry_add_table
.L3059:
	orr	r1, lr, r1
.L3062:
	orr	r1, r1, r2
	ldrb	r2, [ip, #12]	@ zero_extendqisi2
	ldrb	r3, [ip, #13]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	movne	r3, #0
	moveq	r3, #1
	orr	r3, r1, r3, asl #6
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x7b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}
	mov	r4, r0
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L3066
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L3067
.L3066:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L3067:
	strb	r0, [r4, #144]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L3068
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L3069
.L3068:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L3069:
	strb	r0, [r4, #145]
	ldrb	r3, [r4, #144]	@ zero_extendqisi2
	ldrb	r1, [r4, #145]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #140]
	ldrh	r1, [r4, #144]	@ movhi
	add	r1, r1, #1
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #141]
	ldrb	r5, [r4, #140]	@ zero_extendqisi2
	ldrb	r6, [r4, #141]	@ zero_extendqisi2
	orr	r6, r5, r6, asl #8
	strh	r6, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #144]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, r6, lr}
	bx	lr
	.align	0
op_ED_0x7c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {lr}
	mov	ip, r0
	ldrb	r2, [ip, #1]	@ zero_extendqisi2
	rsb	r3, r2, #0
	mov	r3, r3, asl #16
	and	r2, r2, #136
	mov	r0, r3, lsr #16
	and	r3, r3, #8912896
	mov	r3, r3, lsr #17
	orr	r3, r3, r2, lsr #2
	strb	r0, [ip, #1]
	ldr	r1, .L3076
	and	r2, r3, #7
	ldrb	lr, [r1, r2]	@ zero_extendqisi2
	ldr	r2, .L3076+4
	ldrb	r1, [r2, r3, lsr #4]	@ zero_extendqisi2
	ldr	r2, .L3076+8
	ldrb	r3, [ip, #1]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	tst	r0, #256
	beq	.L3072
	orr	r3, r1, #3
	b	.L3075
.L3077:
	.align	0
.L3076:
	.word	halfcarry_sub_table
	.word	overflow_sub_table
	.word	sz53_table
.L3072:
	orr	r3, r1, #2
.L3075:
	orr	r3, lr, r3
	orr	r3, r3, r2
	strb	r3, [ip, #0]
	ldmfd	sp!, {ip}
	bx	ip
	.align	0
op_ED_0x7d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #57]
	strb	r3, [r4, #56]
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #255
	orr	r5, r0, r3
	ldrh	r1, [r4, #48]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #255
	bic	r3, r5, #65280
	orr	r5, r3, r0, asl #8
	strh	r5, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r5, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0x7e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r3, #2
	str	r3, [r0, #64]
	bx	lr
	.align	0
op_ED_0xa0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #8]	@ zero_extendqisi2
	ldrb	r1, [r4, #9]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #8]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #1]
	add	r3, r5, r3
	and	r5, r3, #255
	ldrb	r2, [r4, #0]
	and	r1, r2, #193
	and	r0, r3, #8
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3083
	cmp	r0, #0
	orrne	r2, r1, #12
	orreq	r2, r1, #4
	b	.L3084
.L3083:
	orr	r2, r1, r0
.L3084:
	mov	r3, r5, asl #4
	and	r3, r3, #32
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xa1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	ldrb	r2, [r4, #1]
	rsb	r3, r3, r2
	and	ip, r3, #255
	and	r2, r2, #8
	and	r0, r0, #8
	mov	r0, r0, lsr #2
	orr	r0, r0, r2, lsr #3
	and	r3, r3, #8
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	and	r0, r0, #255
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #0]
	and	lr, r3, #1
	ldr	r3, .L3095
	ldrb	r1, [r3, r0]	@ zero_extendqisi2
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3087
	cmp	lr, #0
	orrne	r3, r1, #7
	orreq	r3, r1, #6
	b	.L3088
.L3096:
	.align	0
.L3095:
	.word	halfcarry_sub_table
.L3087:
	cmp	lr, #0
	orrne	r3, r1, #3
	orreq	r3, r1, #2
.L3088:
	and	r2, ip, #128
	cmp	ip, #0
	bne	.L3089
	cmp	r2, #0
	orrne	r3, r3, #192
	orreq	r3, r3, #64
	b	.L3090
.L3089:
	orr	r3, r3, r2
.L3090:
	strb	r3, [r4, #0]
	tst	r3, #16
	subne	r3, ip, #1
	andne	ip, r3, #255
.L3091:
	and	r2, ip, #8
	ldrb	r3, [r4, #0]	@ zero_extendqisi2
	tst	ip, #2
	beq	.L3092
	cmp	r2, #0
	orrne	r3, r3, #40
	orreq	r3, r3, #32
	b	.L3093
.L3092:
	orr	r3, r3, r2
.L3093:
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #60]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0xa2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r5, r0
	ldrh	r3, [r5, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r5, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r5, #4]	@ zero_extendqisi2
	ldrb	r1, [r5, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r5, #104]
	ldr	ip, [r5, #100]
	mov	lr, pc
	bx	ip
	mov	r4, r0
	and	r4, r4, #255
	ldrb	r3, [r5, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #13]	@ zero_extendqisi2
	mov	r0, r5
	orr	r1, r3, r1, asl #8
	mov	r2, r4
	ldr	r3, [r5, #128]
	ldr	ip, [r5, #124]
	mov	lr, pc
	bx	ip
	ldrb	r3, [r5, #5]
	sub	r3, r3, #1
	strb	r3, [r5, #5]
	ldrh	r3, [r5, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r5, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3101
	ldrb	r3, [r5, #5]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	mov	r3, r4, lsr #7
	orr	r1, r2, r3, asl #1
	strb	r1, [r5, #0]
	ldrb	r3, [r5, #4]
	add	r3, r3, #1
	add	r3, r4, r3
	and	r2, r3, #255
	ldrb	r3, [r5, #4]	@ zero_extendqisi2
	add	r3, r3, #1
	and	r3, r3, #255
	add	r4, r4, r3
	cmp	r4, #255
	orrgt	r3, r1, #17
	strgtb	r3, [r5, #0]
.L3098:
	ldr	r1, .L3101+4
	and	r2, r2, #7
	ldrb	r3, [r5, #5]
	eor	r3, r3, r2
	ldrb	r2, [r5, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r5, #0]
	b	.L3100
.L3102:
	.align	0
.L3101:
	.word	sz53_table
	.word	parity_table
.L3100:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xa3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r5, r0
	ldrb	r3, [r5, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r5, #120]
	ldr	ip, [r5, #116]
	mov	lr, pc
	bx	ip
	mov	r4, r0
	and	r4, r4, #255
	ldrb	r3, [r5, #5]
	sub	r3, r3, #1
	strb	r3, [r5, #5]
	ldrh	r3, [r5, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r5, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r5, #4]	@ zero_extendqisi2
	ldrb	r1, [r5, #5]	@ zero_extendqisi2
	mov	r0, r5
	orr	r1, r3, r1, asl #8
	mov	r2, r4
	ldr	r3, [r5, #112]
	ldr	ip, [r5, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r5, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r5, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3107
	ldrb	r3, [r5, #5]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	mov	r3, r4, lsr #7
	orr	r1, r2, r3, asl #1
	strb	r1, [r5, #0]
	ldrb	r3, [r5, #12]
	add	r3, r4, r3
	and	r2, r3, #255
	ldrb	r3, [r5, #12]	@ zero_extendqisi2
	add	r4, r4, r3
	cmp	r4, #255
	orrgt	r3, r1, #17
	strgtb	r3, [r5, #0]
.L3104:
	ldr	r1, .L3107+4
	and	r2, r2, #7
	ldrb	r3, [r5, #5]
	eor	r3, r3, r2
	ldrb	r2, [r5, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r5, #0]
	b	.L3106
.L3108:
	.align	0
.L3107:
	.word	sz53_table
	.word	parity_table
.L3106:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xa8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #8]	@ zero_extendqisi2
	ldrb	r1, [r4, #9]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #8]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #1]
	add	r3, r5, r3
	and	r5, r3, #255
	ldrb	r2, [r4, #0]
	and	r1, r2, #193
	and	r0, r3, #8
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3110
	cmp	r0, #0
	orrne	r2, r1, #12
	orreq	r2, r1, #4
	b	.L3111
.L3110:
	orr	r2, r1, r0
.L3111:
	mov	r3, r5, asl #4
	and	r3, r3, #32
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xa9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	ldrb	r2, [r4, #1]
	rsb	r3, r3, r2
	and	ip, r3, #255
	and	r2, r2, #8
	and	r0, r0, #8
	mov	r0, r0, lsr #2
	orr	r0, r0, r2, lsr #3
	and	r3, r3, #8
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	and	r0, r0, #255
	ldrh	r3, [r4, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #0]
	and	lr, r3, #1
	ldr	r3, .L3122
	ldrb	r1, [r3, r0]	@ zero_extendqisi2
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3114
	cmp	lr, #0
	orrne	r3, r1, #7
	orreq	r3, r1, #6
	b	.L3115
.L3123:
	.align	0
.L3122:
	.word	halfcarry_sub_table
.L3114:
	cmp	lr, #0
	orrne	r3, r1, #3
	orreq	r3, r1, #2
.L3115:
	and	r2, ip, #128
	cmp	ip, #0
	bne	.L3116
	cmp	r2, #0
	orrne	r3, r3, #192
	orreq	r3, r3, #64
	b	.L3117
.L3116:
	orr	r3, r3, r2
.L3117:
	strb	r3, [r4, #0]
	tst	r3, #16
	subne	r3, ip, #1
	andne	ip, r3, #255
.L3118:
	and	r2, ip, #8
	ldrb	r3, [r4, #0]	@ zero_extendqisi2
	tst	ip, #2
	beq	.L3119
	cmp	r2, #0
	orrne	r3, r3, #40
	orreq	r3, r3, #32
	b	.L3120
.L3119:
	orr	r3, r3, r2
.L3120:
	strb	r3, [r4, #0]
	ldrh	r3, [r4, #60]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0xaa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r5, r0
	ldrh	r3, [r5, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r5, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r5, #4]	@ zero_extendqisi2
	ldrb	r1, [r5, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r5, #104]
	ldr	ip, [r5, #100]
	mov	lr, pc
	bx	ip
	mov	r4, r0
	and	r4, r4, #255
	ldrb	r3, [r5, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #13]	@ zero_extendqisi2
	mov	r0, r5
	orr	r1, r3, r1, asl #8
	mov	r2, r4
	ldr	r3, [r5, #128]
	ldr	ip, [r5, #124]
	mov	lr, pc
	bx	ip
	ldrb	r3, [r5, #5]
	sub	r3, r3, #1
	strb	r3, [r5, #5]
	ldrh	r3, [r5, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r5, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3128
	ldrb	r3, [r5, #5]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	mov	r3, r4, lsr #7
	orr	r1, r2, r3, asl #1
	strb	r1, [r5, #0]
	ldrb	r3, [r5, #4]
	add	r3, r3, #255
	add	r3, r4, r3
	and	r2, r3, #255
	ldrb	r3, [r5, #4]	@ zero_extendqisi2
	sub	r3, r3, #1
	and	r3, r3, #255
	add	r4, r4, r3
	cmp	r4, #255
	orrgt	r3, r1, #17
	strgtb	r3, [r5, #0]
.L3125:
	ldr	r1, .L3128+4
	and	r2, r2, #7
	ldrb	r3, [r5, #5]
	eor	r3, r3, r2
	ldrb	r2, [r5, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r5, #0]
	b	.L3127
.L3129:
	.align	0
.L3128:
	.word	sz53_table
	.word	parity_table
.L3127:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xab__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r5, r0
	ldrb	r3, [r5, #12]	@ zero_extendqisi2
	ldrb	r1, [r5, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r5, #120]
	ldr	ip, [r5, #116]
	mov	lr, pc
	bx	ip
	mov	r4, r0
	and	r4, r4, #255
	ldrb	r3, [r5, #5]
	sub	r3, r3, #1
	strb	r3, [r5, #5]
	ldrh	r3, [r5, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r5, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r5, #4]	@ zero_extendqisi2
	ldrb	r1, [r5, #5]	@ zero_extendqisi2
	mov	r0, r5
	orr	r1, r3, r1, asl #8
	mov	r2, r4
	ldr	r3, [r5, #112]
	ldr	ip, [r5, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r5, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r5, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3134
	ldrb	r3, [r5, #5]	@ zero_extendqisi2
	ldrb	r2, [r2, r3]	@ zero_extendqisi2
	mov	r3, r4, lsr #7
	orr	r1, r2, r3, asl #1
	strb	r1, [r5, #0]
	ldrb	r3, [r5, #12]
	add	r3, r4, r3
	and	r2, r3, #255
	ldrb	r3, [r5, #12]	@ zero_extendqisi2
	add	r4, r4, r3
	cmp	r4, #255
	orrgt	r3, r1, #17
	strgtb	r3, [r5, #0]
.L3131:
	ldr	r1, .L3134+4
	and	r2, r2, #7
	ldrb	r3, [r5, #5]
	eor	r3, r3, r2
	ldrb	r2, [r5, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r5, #0]
	b	.L3133
.L3135:
	.align	0
.L3134:
	.word	sz53_table
	.word	parity_table
.L3133:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xb0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrb	r3, [r4, #8]	@ zero_extendqisi2
	ldrb	r1, [r4, #9]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #8]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #1]
	add	r3, r5, r3
	and	r5, r3, #255
	ldrb	r2, [r4, #0]
	and	r1, r2, #193
	and	r0, r3, #8
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3137
	cmp	r0, #0
	orrne	r2, r1, #12
	orreq	r2, r1, #4
	b	.L3138
.L3137:
	orr	r2, r1, r0
.L3138:
	mov	r3, r5, asl #4
	and	r3, r3, #32
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3136
	ldrh	r3, [r4, #52]	@ movhi
	sub	r2, r3, #2
	strh	r2, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	sub	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L3136:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xb1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	ldrb	r2, [r4, #1]
	rsb	r3, r3, r2
	and	ip, r3, #255
	and	r2, r2, #8
	and	r0, r0, #8
	mov	r0, r0, lsr #2
	orr	r0, r0, r2, lsr #3
	and	r3, r3, #8
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	and	r0, r0, #255
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #0]
	and	lr, r3, #1
	ldr	r3, .L3154
	ldrb	r1, [r3, r0]	@ zero_extendqisi2
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3143
	cmp	lr, #0
	orrne	r3, r1, #7
	orreq	r3, r1, #6
	b	.L3144
.L3155:
	.align	0
.L3154:
	.word	halfcarry_sub_table
.L3143:
	cmp	lr, #0
	orrne	r3, r1, #3
	orreq	r3, r1, #2
.L3144:
	and	r2, ip, #128
	cmp	ip, #0
	bne	.L3145
	cmp	r2, #0
	orrne	r3, r3, #192
	orreq	r3, r3, #64
	b	.L3146
.L3145:
	orr	r3, r3, r2
.L3146:
	strb	r3, [r4, #0]
	tst	r3, #16
	subne	r3, ip, #1
	andne	ip, r3, #255
.L3147:
	and	r2, ip, #8
	ldrb	r3, [r4, #0]	@ zero_extendqisi2
	tst	ip, #2
	beq	.L3148
	cmp	r2, #0
	orrne	r3, r3, #40
	orreq	r3, r3, #32
	b	.L3149
.L3148:
	orr	r3, r3, r2
.L3149:
	strb	r3, [r4, #0]
	and	r3, r3, #68
	cmp	r3, #4
	bne	.L3150
	ldrh	r3, [r4, #52]	@ movhi
	sub	r2, r3, #2
	strh	r2, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	sub	r3, r3, #1
	b	.L3153
.L3150:
	ldrh	r3, [r4, #60]	@ movhi
	add	r3, r3, #1
.L3153:
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0xb2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #5]
	sub	r3, r3, #1
	strb	r3, [r4, #5]
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3162
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	mov	r2, r5, lsr #7
	orr	r3, r3, r2, asl #1
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	cmp	r3, #0
	ldrneh	r3, [r4, #52]	@ movhi
	subne	r3, r3, #2
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
.L3158:
	ldrb	r3, [r4, #4]
	add	r3, r3, #1
	add	r3, r5, r3
	and	r2, r3, #255
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	add	r3, r3, #1
	and	r3, r3, #255
	add	r3, r5, r3
	cmp	r3, #255
	ldrgtb	r3, [r4, #0]
	orrgt	r3, r3, #17
	strgtb	r3, [r4, #0]
.L3159:
	ldr	r1, .L3162+4
	and	r2, r2, #7
	ldrb	r3, [r4, #5]
	eor	r3, r3, r2
	ldrb	r2, [r4, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	b	.L3161
.L3163:
	.align	0
.L3162:
	.word	sz53_table
	.word	parity_table
.L3161:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xb3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrb	r3, [r4, #5]
	sub	r3, r3, #1
	strb	r3, [r4, #5]
	ldrh	r3, [r4, #4]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #12]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3170
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	mov	r2, r5, lsr #7
	orr	r3, r3, r2, asl #1
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	cmp	r3, #0
	ldrneh	r3, [r4, #52]	@ movhi
	subne	r3, r3, #2
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
.L3166:
	ldrb	r3, [r4, #12]
	add	r3, r5, r3
	and	r2, r3, #255
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	add	r3, r5, r3
	cmp	r3, #255
	ldrgtb	r3, [r4, #0]
	orrgt	r3, r3, #17
	strgtb	r3, [r4, #0]
.L3167:
	ldr	r1, .L3170+4
	and	r2, r2, #7
	ldrb	r3, [r4, #5]
	eor	r3, r3, r2
	ldrb	r2, [r4, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	b	.L3169
.L3171:
	.align	0
.L3170:
	.word	sz53_table
	.word	parity_table
.L3169:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xb8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrb	r3, [r4, #8]	@ zero_extendqisi2
	ldrb	r1, [r4, #9]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #8]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #1]
	add	r3, r5, r3
	and	r5, r3, #255
	ldrb	r2, [r4, #0]
	and	r1, r2, #193
	and	r0, r3, #8
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3173
	cmp	r0, #0
	orrne	r2, r1, #12
	orreq	r2, r1, #4
	b	.L3174
.L3173:
	orr	r2, r1, r0
.L3174:
	mov	r3, r5, asl #4
	and	r3, r3, #32
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3172
	ldrh	r3, [r4, #52]	@ movhi
	sub	r2, r3, #2
	strh	r2, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	sub	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L3172:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xb9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	ldrb	r2, [r4, #1]
	rsb	r3, r3, r2
	and	ip, r3, #255
	and	r2, r2, #8
	and	r0, r0, #8
	mov	r0, r0, lsr #2
	orr	r0, r0, r2, lsr #3
	and	r3, r3, #8
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	and	r0, r0, #255
	ldrh	r3, [r4, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #0]
	and	lr, r3, #1
	ldr	r3, .L3190
	ldrb	r1, [r3, r0]	@ zero_extendqisi2
	ldrb	r2, [r4, #4]	@ zero_extendqisi2
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	orrs	r2, r2, r3, asl #8
	beq	.L3179
	cmp	lr, #0
	orrne	r3, r1, #7
	orreq	r3, r1, #6
	b	.L3180
.L3191:
	.align	0
.L3190:
	.word	halfcarry_sub_table
.L3179:
	cmp	lr, #0
	orrne	r3, r1, #3
	orreq	r3, r1, #2
.L3180:
	and	r2, ip, #128
	cmp	ip, #0
	bne	.L3181
	cmp	r2, #0
	orrne	r3, r3, #192
	orreq	r3, r3, #64
	b	.L3182
.L3181:
	orr	r3, r3, r2
.L3182:
	strb	r3, [r4, #0]
	tst	r3, #16
	subne	r3, ip, #1
	andne	ip, r3, #255
.L3183:
	and	r2, ip, #8
	ldrb	r3, [r4, #0]	@ zero_extendqisi2
	tst	ip, #2
	beq	.L3184
	cmp	r2, #0
	orrne	r3, r3, #40
	orreq	r3, r3, #32
	b	.L3185
.L3184:
	orr	r3, r3, r2
.L3185:
	strb	r3, [r4, #0]
	and	r3, r3, #68
	cmp	r3, #4
	ldreqh	r3, [r4, #52]	@ movhi
	subeq	r2, r3, #2
	streqh	r2, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
.L3186:
	ldrneh	r3, [r4, #60]	@ movhi
.L3189:
	sub	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_ED_0xba__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	ldr	r2, [r4, #104]
	ldr	ip, [r4, #100]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #5]
	sub	r3, r3, #1
	strb	r3, [r4, #5]
	ldrh	r3, [r4, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3198
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	mov	r2, r5, lsr #7
	orr	r3, r3, r2, asl #1
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	cmp	r3, #0
	ldrneh	r3, [r4, #52]	@ movhi
	subne	r3, r3, #2
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
.L3194:
	ldrb	r3, [r4, #4]
	add	r3, r3, #255
	add	r3, r5, r3
	and	r2, r3, #255
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	sub	r3, r3, #1
	and	r3, r3, #255
	add	r3, r5, r3
	cmp	r3, #255
	ldrgtb	r3, [r4, #0]
	orrgt	r3, r3, #17
	strgtb	r3, [r4, #0]
.L3195:
	ldr	r1, .L3198+4
	and	r2, r2, #7
	ldrb	r3, [r4, #5]
	eor	r3, r3, r2
	ldrb	r2, [r4, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	b	.L3197
.L3199:
	.align	0
.L3198:
	.word	sz53_table
	.word	parity_table
.L3197:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
op_ED_0xbb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	ldrb	r1, [r4, #13]	@ zero_extendqisi2
	orr	r1, r3, r1, asl #8
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r5, r0, #255
	ldrb	r3, [r4, #5]
	sub	r3, r3, #1
	strb	r3, [r4, #5]
	ldrh	r3, [r4, #4]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #4]	@ zero_extendqisi2
	ldrb	r1, [r4, #5]	@ zero_extendqisi2
	mov	r0, r4
	orr	r1, r3, r1, asl #8
	mov	r2, r5
	ldr	r3, [r4, #112]
	ldr	ip, [r4, #108]
	mov	lr, pc
	bx	ip
	ldrh	r3, [r4, #12]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r4, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r2, .L3206
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	mov	r2, r5, lsr #7
	orr	r3, r3, r2, asl #1
	strb	r3, [r4, #0]
	ldrb	r3, [r4, #5]	@ zero_extendqisi2
	cmp	r3, #0
	ldrneh	r3, [r4, #52]	@ movhi
	subne	r3, r3, #2
	strneh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
.L3202:
	ldrb	r3, [r4, #12]
	add	r3, r5, r3
	and	r2, r3, #255
	ldrb	r3, [r4, #12]	@ zero_extendqisi2
	add	r3, r5, r3
	cmp	r3, #255
	ldrgtb	r3, [r4, #0]
	orrgt	r3, r3, #17
	strgtb	r3, [r4, #0]
.L3203:
	ldr	r1, .L3206+4
	and	r2, r2, #7
	ldrb	r3, [r4, #5]
	eor	r3, r3, r2
	ldrb	r2, [r4, #0]
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	b	.L3205
.L3207:
	.align	0
.L3206:
	.word	sz53_table
	.word	parity_table
.L3205:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
.data
	.align	0
opcodes_ed:
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_ED_0x40__FP16_z80_cpu_context
	.word	op_ED_0x41__FP16_z80_cpu_context
	.word	op_ED_0x42__FP16_z80_cpu_context
	.word	op_ED_0x43__FP16_z80_cpu_context
	.word	op_ED_0x44__FP16_z80_cpu_context
	.word	op_ED_0x45__FP16_z80_cpu_context
	.word	op_ED_0x46__FP16_z80_cpu_context
	.word	op_ED_0x47__FP16_z80_cpu_context
	.word	op_ED_0x48__FP16_z80_cpu_context
	.word	op_ED_0x49__FP16_z80_cpu_context
	.word	op_ED_0x4a__FP16_z80_cpu_context
	.word	op_ED_0x4b__FP16_z80_cpu_context
	.word	op_ED_0x4c__FP16_z80_cpu_context
	.word	op_ED_0x4d__FP16_z80_cpu_context
	.word	op_ED_0x4e__FP16_z80_cpu_context
	.word	op_ED_0x4f__FP16_z80_cpu_context
	.word	op_ED_0x50__FP16_z80_cpu_context
	.word	op_ED_0x51__FP16_z80_cpu_context
	.word	op_ED_0x52__FP16_z80_cpu_context
	.word	op_ED_0x53__FP16_z80_cpu_context
	.word	op_ED_0x54__FP16_z80_cpu_context
	.word	op_ED_0x55__FP16_z80_cpu_context
	.word	op_ED_0x56__FP16_z80_cpu_context
	.word	op_ED_0x57__FP16_z80_cpu_context
	.word	op_ED_0x58__FP16_z80_cpu_context
	.word	op_ED_0x59__FP16_z80_cpu_context
	.word	op_ED_0x5a__FP16_z80_cpu_context
	.word	op_ED_0x5b__FP16_z80_cpu_context
	.word	op_ED_0x5c__FP16_z80_cpu_context
	.word	op_ED_0x5d__FP16_z80_cpu_context
	.word	op_ED_0x5e__FP16_z80_cpu_context
	.word	op_ED_0x5f__FP16_z80_cpu_context
	.word	op_ED_0x60__FP16_z80_cpu_context
	.word	op_ED_0x61__FP16_z80_cpu_context
	.word	op_ED_0x62__FP16_z80_cpu_context
	.word	op_ED_0x63__FP16_z80_cpu_context
	.word	op_ED_0x64__FP16_z80_cpu_context
	.word	op_ED_0x65__FP16_z80_cpu_context
	.word	op_ED_0x66__FP16_z80_cpu_context
	.word	op_ED_0x67__FP16_z80_cpu_context
	.word	op_ED_0x68__FP16_z80_cpu_context
	.word	op_ED_0x69__FP16_z80_cpu_context
	.word	op_ED_0x6a__FP16_z80_cpu_context
	.word	op_ED_0x6b__FP16_z80_cpu_context
	.word	op_ED_0x6c__FP16_z80_cpu_context
	.word	op_ED_0x6d__FP16_z80_cpu_context
	.word	op_ED_0x6e__FP16_z80_cpu_context
	.word	op_ED_0x6f__FP16_z80_cpu_context
	.word	op_ED_0x70__FP16_z80_cpu_context
	.word	op_ED_0x71__FP16_z80_cpu_context
	.word	op_ED_0x72__FP16_z80_cpu_context
	.word	op_ED_0x73__FP16_z80_cpu_context
	.word	op_ED_0x74__FP16_z80_cpu_context
	.word	op_ED_0x75__FP16_z80_cpu_context
	.word	op_ED_0x76__FP16_z80_cpu_context
	.word	0
	.word	op_ED_0x78__FP16_z80_cpu_context
	.word	op_ED_0x79__FP16_z80_cpu_context
	.word	op_ED_0x7a__FP16_z80_cpu_context
	.word	op_ED_0x7b__FP16_z80_cpu_context
	.word	op_ED_0x7c__FP16_z80_cpu_context
	.word	op_ED_0x7d__FP16_z80_cpu_context
	.word	op_ED_0x7e__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_ED_0xa0__FP16_z80_cpu_context
	.word	op_ED_0xa1__FP16_z80_cpu_context
	.word	op_ED_0xa2__FP16_z80_cpu_context
	.word	op_ED_0xa3__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_ED_0xa8__FP16_z80_cpu_context
	.word	op_ED_0xa9__FP16_z80_cpu_context
	.word	op_ED_0xaa__FP16_z80_cpu_context
	.word	op_ED_0xab__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_ED_0xb0__FP16_z80_cpu_context
	.word	op_ED_0xb1__FP16_z80_cpu_context
	.word	op_ED_0xb2__FP16_z80_cpu_context
	.word	op_ED_0xb3__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	op_ED_0xb8__FP16_z80_cpu_context
	.word	op_ED_0xb9__FP16_z80_cpu_context
	.word	op_ED_0xba__FP16_z80_cpu_context
	.word	op_ED_0xbb__FP16_z80_cpu_context
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
.text
	.align	0
op_DDCB_0x00__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3211
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3210
.L3212:
	.align	0
.L3211:
	.word	sz53p_table
.L3210:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x01__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3216
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3215
.L3217:
	.align	0
.L3216:
	.word	sz53p_table
.L3215:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x02__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3221
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3220
.L3222:
	.align	0
.L3221:
	.word	sz53p_table
.L3220:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x03__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3226
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3225
.L3227:
	.align	0
.L3226:
	.word	sz53p_table
.L3225:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x04__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3231
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3230
.L3232:
	.align	0
.L3231:
	.word	sz53p_table
.L3230:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x05__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3236
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3235
.L3237:
	.align	0
.L3236:
	.word	sz53p_table
.L3235:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x06__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r0, r0, #1
	ldr	r2, .L3241
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3240
.L3242:
	.align	0
.L3241:
	.word	sz53p_table
.L3240:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x07__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3246
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3245
.L3247:
	.align	0
.L3246:
	.word	sz53p_table
.L3245:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x08__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3251
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3250
.L3252:
	.align	0
.L3251:
	.word	sz53p_table
.L3250:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x09__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3256
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3255
.L3257:
	.align	0
.L3256:
	.word	sz53p_table
.L3255:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x0a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3261
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3260
.L3262:
	.align	0
.L3261:
	.word	sz53p_table
.L3260:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x0b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3266
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3265
.L3267:
	.align	0
.L3266:
	.word	sz53p_table
.L3265:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x0c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3271
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3270
.L3272:
	.align	0
.L3271:
	.word	sz53p_table
.L3270:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x0d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3276
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3275
.L3277:
	.align	0
.L3276:
	.word	sz53p_table
.L3275:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x0e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3281
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3280
.L3282:
	.align	0
.L3281:
	.word	sz53p_table
.L3280:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x0f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3286
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3285
.L3287:
	.align	0
.L3286:
	.word	sz53p_table
.L3285:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x10__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3291
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3290
.L3292:
	.align	0
.L3291:
	.word	sz53p_table
.L3290:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x11__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3296
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3295
.L3297:
	.align	0
.L3296:
	.word	sz53p_table
.L3295:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x12__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3301
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3300
.L3302:
	.align	0
.L3301:
	.word	sz53p_table
.L3300:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x13__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3306
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3305
.L3307:
	.align	0
.L3306:
	.word	sz53p_table
.L3305:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x14__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3311
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3310
.L3312:
	.align	0
.L3311:
	.word	sz53p_table
.L3310:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x15__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3316
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3315
.L3317:
	.align	0
.L3316:
	.word	sz53p_table
.L3315:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x16__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	orr	r3, r3, r0, asl #1
	strb	r3, [r4, #148]
	ldr	r2, .L3321
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3320
.L3322:
	.align	0
.L3321:
	.word	sz53p_table
.L3320:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x17__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3326
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3325
.L3327:
	.align	0
.L3326:
	.word	sz53p_table
.L3325:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x18__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3331
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3330
.L3332:
	.align	0
.L3331:
	.word	sz53p_table
.L3330:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x19__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3336
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3335
.L3337:
	.align	0
.L3336:
	.word	sz53p_table
.L3335:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x1a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3341
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3340
.L3342:
	.align	0
.L3341:
	.word	sz53p_table
.L3340:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x1b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3346
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3345
.L3347:
	.align	0
.L3346:
	.word	sz53p_table
.L3345:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x1c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3351
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3350
.L3352:
	.align	0
.L3351:
	.word	sz53p_table
.L3350:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x1d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3356
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3355
.L3357:
	.align	0
.L3356:
	.word	sz53p_table
.L3355:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x1e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r4, #148]
	and	r2, r2, #1
	ldr	r1, .L3361
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3360
.L3362:
	.align	0
.L3361:
	.word	sz53p_table
.L3360:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x1f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3366
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3365
.L3367:
	.align	0
.L3366:
	.word	sz53p_table
.L3365:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x20__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3371
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3370
.L3372:
	.align	0
.L3371:
	.word	sz53p_table
.L3370:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x21__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3376
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3375
.L3377:
	.align	0
.L3376:
	.word	sz53p_table
.L3375:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x22__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3381
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3380
.L3382:
	.align	0
.L3381:
	.word	sz53p_table
.L3380:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x23__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3386
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3385
.L3387:
	.align	0
.L3386:
	.word	sz53p_table
.L3385:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x24__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3391
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3390
.L3392:
	.align	0
.L3391:
	.word	sz53p_table
.L3390:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x25__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3396
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3395
.L3397:
	.align	0
.L3396:
	.word	sz53p_table
.L3395:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x26__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3401
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3400
.L3402:
	.align	0
.L3401:
	.word	sz53p_table
.L3400:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x27__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3406
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3405
.L3407:
	.align	0
.L3406:
	.word	sz53p_table
.L3405:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x28__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3411
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3410
.L3412:
	.align	0
.L3411:
	.word	sz53p_table
.L3410:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x29__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3416
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3415
.L3417:
	.align	0
.L3416:
	.word	sz53p_table
.L3415:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x2a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3421
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3420
.L3422:
	.align	0
.L3421:
	.word	sz53p_table
.L3420:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x2b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3426
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3425
.L3427:
	.align	0
.L3426:
	.word	sz53p_table
.L3425:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x2c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3431
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3430
.L3432:
	.align	0
.L3431:
	.word	sz53p_table
.L3430:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x2d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3436
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3435
.L3437:
	.align	0
.L3436:
	.word	sz53p_table
.L3435:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x2e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3441
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3440
.L3442:
	.align	0
.L3441:
	.word	sz53p_table
.L3440:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x2f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L3446
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3445
.L3447:
	.align	0
.L3446:
	.word	sz53p_table
.L3445:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x30__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3451
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3450
.L3452:
	.align	0
.L3451:
	.word	sz53p_table
.L3450:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x31__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3456
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3455
.L3457:
	.align	0
.L3456:
	.word	sz53p_table
.L3455:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x32__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3461
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3460
.L3462:
	.align	0
.L3461:
	.word	sz53p_table
.L3460:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x33__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3466
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3465
.L3467:
	.align	0
.L3466:
	.word	sz53p_table
.L3465:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x34__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3471
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3470
.L3472:
	.align	0
.L3471:
	.word	sz53p_table
.L3470:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x35__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3476
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3475
.L3477:
	.align	0
.L3476:
	.word	sz53p_table
.L3475:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x36__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3481
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3480
.L3482:
	.align	0
.L3481:
	.word	sz53p_table
.L3480:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x37__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L3486
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3485
.L3487:
	.align	0
.L3486:
	.word	sz53p_table
.L3485:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x38__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L3491
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3490
.L3492:
	.align	0
.L3491:
	.word	sz53p_table
.L3490:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x39__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L3496
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3495
.L3497:
	.align	0
.L3496:
	.word	sz53p_table
.L3495:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x3a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L3501
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3500
.L3502:
	.align	0
.L3501:
	.word	sz53p_table
.L3500:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x3b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L3506
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3505
.L3507:
	.align	0
.L3506:
	.word	sz53p_table
.L3505:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x3c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L3511
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3510
.L3512:
	.align	0
.L3511:
	.word	sz53p_table
.L3510:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x3d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L3516
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3515
.L3517:
	.align	0
.L3516:
	.word	sz53p_table
.L3515:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x3e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r4, #148]
	ldr	r2, .L3521
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3520
.L3522:
	.align	0
.L3521:
	.word	sz53p_table
.L3520:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x3f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L3526
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3525
.L3527:
	.align	0
.L3526:
	.word	sz53p_table
.L3525:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x47__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3531
	and	r0, r0, #1
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3530
.L3532:
	.align	0
.L3531:
	.word	sz53p_table
.L3530:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x4f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3536
	and	r0, r0, #2
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3535
.L3537:
	.align	0
.L3536:
	.word	sz53p_table
.L3535:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x57__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3541
	and	r0, r0, #4
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3540
.L3542:
	.align	0
.L3541:
	.word	sz53p_table
.L3540:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x5f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3546
	and	r0, r0, #8
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3545
.L3547:
	.align	0
.L3546:
	.word	sz53p_table
.L3545:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x67__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3551
	and	r0, r0, #16
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3550
.L3552:
	.align	0
.L3551:
	.word	sz53p_table
.L3550:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x6f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3556
	and	r0, r0, #32
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3555
.L3557:
	.align	0
.L3556:
	.word	sz53p_table
.L3555:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x77__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3561
	and	r0, r0, #64
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3560
.L3562:
	.align	0
.L3561:
	.word	sz53p_table
.L3560:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x7f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L3566
	and	r0, r0, #128
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L3565
.L3567:
	.align	0
.L3566:
	.word	sz53p_table
.L3565:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x80__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x81__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x82__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x83__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x84__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x85__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x86__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x87__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x88__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x89__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x8a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x8b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x8c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x8d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x8e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x8f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x90__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x91__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x92__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x93__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x94__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x95__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x96__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x97__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x98__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x99__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x9a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x9b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x9c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x9d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x9e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0x9f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xa9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xaa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xab__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xac__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xad__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xae__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xaf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xb9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xba__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xbb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xbc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xbd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xbe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xbf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xc9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xca__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xcb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xcc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xcd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xce__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xcf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xd9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xda__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xdb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xdc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xdd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xde__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xdf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xe9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xea__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xeb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xec__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xed__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xee__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xef__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xf9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xfa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xfb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xfc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xfd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xfe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_DDCB_0xff__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #32]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #32]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
.data
	.align	0
opcodes_ddcb:
	.word	op_DDCB_0x00__FP16_z80_cpu_context
	.word	op_DDCB_0x01__FP16_z80_cpu_context
	.word	op_DDCB_0x02__FP16_z80_cpu_context
	.word	op_DDCB_0x03__FP16_z80_cpu_context
	.word	op_DDCB_0x04__FP16_z80_cpu_context
	.word	op_DDCB_0x05__FP16_z80_cpu_context
	.word	op_DDCB_0x06__FP16_z80_cpu_context
	.word	op_DDCB_0x07__FP16_z80_cpu_context
	.word	op_DDCB_0x08__FP16_z80_cpu_context
	.word	op_DDCB_0x09__FP16_z80_cpu_context
	.word	op_DDCB_0x0a__FP16_z80_cpu_context
	.word	op_DDCB_0x0b__FP16_z80_cpu_context
	.word	op_DDCB_0x0c__FP16_z80_cpu_context
	.word	op_DDCB_0x0d__FP16_z80_cpu_context
	.word	op_DDCB_0x0e__FP16_z80_cpu_context
	.word	op_DDCB_0x0f__FP16_z80_cpu_context
	.word	op_DDCB_0x10__FP16_z80_cpu_context
	.word	op_DDCB_0x11__FP16_z80_cpu_context
	.word	op_DDCB_0x12__FP16_z80_cpu_context
	.word	op_DDCB_0x13__FP16_z80_cpu_context
	.word	op_DDCB_0x14__FP16_z80_cpu_context
	.word	op_DDCB_0x15__FP16_z80_cpu_context
	.word	op_DDCB_0x16__FP16_z80_cpu_context
	.word	op_DDCB_0x17__FP16_z80_cpu_context
	.word	op_DDCB_0x18__FP16_z80_cpu_context
	.word	op_DDCB_0x19__FP16_z80_cpu_context
	.word	op_DDCB_0x1a__FP16_z80_cpu_context
	.word	op_DDCB_0x1b__FP16_z80_cpu_context
	.word	op_DDCB_0x1c__FP16_z80_cpu_context
	.word	op_DDCB_0x1d__FP16_z80_cpu_context
	.word	op_DDCB_0x1e__FP16_z80_cpu_context
	.word	op_DDCB_0x1f__FP16_z80_cpu_context
	.word	op_DDCB_0x20__FP16_z80_cpu_context
	.word	op_DDCB_0x21__FP16_z80_cpu_context
	.word	op_DDCB_0x22__FP16_z80_cpu_context
	.word	op_DDCB_0x23__FP16_z80_cpu_context
	.word	op_DDCB_0x24__FP16_z80_cpu_context
	.word	op_DDCB_0x25__FP16_z80_cpu_context
	.word	op_DDCB_0x26__FP16_z80_cpu_context
	.word	op_DDCB_0x27__FP16_z80_cpu_context
	.word	op_DDCB_0x28__FP16_z80_cpu_context
	.word	op_DDCB_0x29__FP16_z80_cpu_context
	.word	op_DDCB_0x2a__FP16_z80_cpu_context
	.word	op_DDCB_0x2b__FP16_z80_cpu_context
	.word	op_DDCB_0x2c__FP16_z80_cpu_context
	.word	op_DDCB_0x2d__FP16_z80_cpu_context
	.word	op_DDCB_0x2e__FP16_z80_cpu_context
	.word	op_DDCB_0x2f__FP16_z80_cpu_context
	.word	op_DDCB_0x30__FP16_z80_cpu_context
	.word	op_DDCB_0x31__FP16_z80_cpu_context
	.word	op_DDCB_0x32__FP16_z80_cpu_context
	.word	op_DDCB_0x33__FP16_z80_cpu_context
	.word	op_DDCB_0x34__FP16_z80_cpu_context
	.word	op_DDCB_0x35__FP16_z80_cpu_context
	.word	op_DDCB_0x36__FP16_z80_cpu_context
	.word	op_DDCB_0x37__FP16_z80_cpu_context
	.word	op_DDCB_0x38__FP16_z80_cpu_context
	.word	op_DDCB_0x39__FP16_z80_cpu_context
	.word	op_DDCB_0x3a__FP16_z80_cpu_context
	.word	op_DDCB_0x3b__FP16_z80_cpu_context
	.word	op_DDCB_0x3c__FP16_z80_cpu_context
	.word	op_DDCB_0x3d__FP16_z80_cpu_context
	.word	op_DDCB_0x3e__FP16_z80_cpu_context
	.word	op_DDCB_0x3f__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x47__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x4f__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x57__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x5f__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x67__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x6f__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x77__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x7f__FP16_z80_cpu_context
	.word	op_DDCB_0x80__FP16_z80_cpu_context
	.word	op_DDCB_0x81__FP16_z80_cpu_context
	.word	op_DDCB_0x82__FP16_z80_cpu_context
	.word	op_DDCB_0x83__FP16_z80_cpu_context
	.word	op_DDCB_0x84__FP16_z80_cpu_context
	.word	op_DDCB_0x85__FP16_z80_cpu_context
	.word	op_DDCB_0x86__FP16_z80_cpu_context
	.word	op_DDCB_0x87__FP16_z80_cpu_context
	.word	op_DDCB_0x88__FP16_z80_cpu_context
	.word	op_DDCB_0x89__FP16_z80_cpu_context
	.word	op_DDCB_0x8a__FP16_z80_cpu_context
	.word	op_DDCB_0x8b__FP16_z80_cpu_context
	.word	op_DDCB_0x8c__FP16_z80_cpu_context
	.word	op_DDCB_0x8d__FP16_z80_cpu_context
	.word	op_DDCB_0x8e__FP16_z80_cpu_context
	.word	op_DDCB_0x8f__FP16_z80_cpu_context
	.word	op_DDCB_0x90__FP16_z80_cpu_context
	.word	op_DDCB_0x91__FP16_z80_cpu_context
	.word	op_DDCB_0x92__FP16_z80_cpu_context
	.word	op_DDCB_0x93__FP16_z80_cpu_context
	.word	op_DDCB_0x94__FP16_z80_cpu_context
	.word	op_DDCB_0x95__FP16_z80_cpu_context
	.word	op_DDCB_0x96__FP16_z80_cpu_context
	.word	op_DDCB_0x97__FP16_z80_cpu_context
	.word	op_DDCB_0x98__FP16_z80_cpu_context
	.word	op_DDCB_0x99__FP16_z80_cpu_context
	.word	op_DDCB_0x9a__FP16_z80_cpu_context
	.word	op_DDCB_0x9b__FP16_z80_cpu_context
	.word	op_DDCB_0x9c__FP16_z80_cpu_context
	.word	op_DDCB_0x9d__FP16_z80_cpu_context
	.word	op_DDCB_0x9e__FP16_z80_cpu_context
	.word	op_DDCB_0x9f__FP16_z80_cpu_context
	.word	op_DDCB_0xa0__FP16_z80_cpu_context
	.word	op_DDCB_0xa1__FP16_z80_cpu_context
	.word	op_DDCB_0xa2__FP16_z80_cpu_context
	.word	op_DDCB_0xa3__FP16_z80_cpu_context
	.word	op_DDCB_0xa4__FP16_z80_cpu_context
	.word	op_DDCB_0xa5__FP16_z80_cpu_context
	.word	op_DDCB_0xa6__FP16_z80_cpu_context
	.word	op_DDCB_0xa7__FP16_z80_cpu_context
	.word	op_DDCB_0xa8__FP16_z80_cpu_context
	.word	op_DDCB_0xa9__FP16_z80_cpu_context
	.word	op_DDCB_0xaa__FP16_z80_cpu_context
	.word	op_DDCB_0xab__FP16_z80_cpu_context
	.word	op_DDCB_0xac__FP16_z80_cpu_context
	.word	op_DDCB_0xad__FP16_z80_cpu_context
	.word	op_DDCB_0xae__FP16_z80_cpu_context
	.word	op_DDCB_0xaf__FP16_z80_cpu_context
	.word	op_DDCB_0xb0__FP16_z80_cpu_context
	.word	op_DDCB_0xb1__FP16_z80_cpu_context
	.word	op_DDCB_0xb2__FP16_z80_cpu_context
	.word	op_DDCB_0xb3__FP16_z80_cpu_context
	.word	op_DDCB_0xb4__FP16_z80_cpu_context
	.word	op_DDCB_0xb5__FP16_z80_cpu_context
	.word	op_DDCB_0xb6__FP16_z80_cpu_context
	.word	op_DDCB_0xb7__FP16_z80_cpu_context
	.word	op_DDCB_0xb8__FP16_z80_cpu_context
	.word	op_DDCB_0xb9__FP16_z80_cpu_context
	.word	op_DDCB_0xba__FP16_z80_cpu_context
	.word	op_DDCB_0xbb__FP16_z80_cpu_context
	.word	op_DDCB_0xbc__FP16_z80_cpu_context
	.word	op_DDCB_0xbd__FP16_z80_cpu_context
	.word	op_DDCB_0xbe__FP16_z80_cpu_context
	.word	op_DDCB_0xbf__FP16_z80_cpu_context
	.word	op_DDCB_0xc0__FP16_z80_cpu_context
	.word	op_DDCB_0xc1__FP16_z80_cpu_context
	.word	op_DDCB_0xc2__FP16_z80_cpu_context
	.word	op_DDCB_0xc3__FP16_z80_cpu_context
	.word	op_DDCB_0xc4__FP16_z80_cpu_context
	.word	op_DDCB_0xc5__FP16_z80_cpu_context
	.word	op_DDCB_0xc6__FP16_z80_cpu_context
	.word	op_DDCB_0xc7__FP16_z80_cpu_context
	.word	op_DDCB_0xc8__FP16_z80_cpu_context
	.word	op_DDCB_0xc9__FP16_z80_cpu_context
	.word	op_DDCB_0xca__FP16_z80_cpu_context
	.word	op_DDCB_0xcb__FP16_z80_cpu_context
	.word	op_DDCB_0xcc__FP16_z80_cpu_context
	.word	op_DDCB_0xcd__FP16_z80_cpu_context
	.word	op_DDCB_0xce__FP16_z80_cpu_context
	.word	op_DDCB_0xcf__FP16_z80_cpu_context
	.word	op_DDCB_0xd0__FP16_z80_cpu_context
	.word	op_DDCB_0xd1__FP16_z80_cpu_context
	.word	op_DDCB_0xd2__FP16_z80_cpu_context
	.word	op_DDCB_0xd3__FP16_z80_cpu_context
	.word	op_DDCB_0xd4__FP16_z80_cpu_context
	.word	op_DDCB_0xd5__FP16_z80_cpu_context
	.word	op_DDCB_0xd6__FP16_z80_cpu_context
	.word	op_DDCB_0xd7__FP16_z80_cpu_context
	.word	op_DDCB_0xd8__FP16_z80_cpu_context
	.word	op_DDCB_0xd9__FP16_z80_cpu_context
	.word	op_DDCB_0xda__FP16_z80_cpu_context
	.word	op_DDCB_0xdb__FP16_z80_cpu_context
	.word	op_DDCB_0xdc__FP16_z80_cpu_context
	.word	op_DDCB_0xdd__FP16_z80_cpu_context
	.word	op_DDCB_0xde__FP16_z80_cpu_context
	.word	op_DDCB_0xdf__FP16_z80_cpu_context
	.word	op_DDCB_0xe0__FP16_z80_cpu_context
	.word	op_DDCB_0xe1__FP16_z80_cpu_context
	.word	op_DDCB_0xe2__FP16_z80_cpu_context
	.word	op_DDCB_0xe3__FP16_z80_cpu_context
	.word	op_DDCB_0xe4__FP16_z80_cpu_context
	.word	op_DDCB_0xe5__FP16_z80_cpu_context
	.word	op_DDCB_0xe6__FP16_z80_cpu_context
	.word	op_DDCB_0xe7__FP16_z80_cpu_context
	.word	op_DDCB_0xe8__FP16_z80_cpu_context
	.word	op_DDCB_0xe9__FP16_z80_cpu_context
	.word	op_DDCB_0xea__FP16_z80_cpu_context
	.word	op_DDCB_0xeb__FP16_z80_cpu_context
	.word	op_DDCB_0xec__FP16_z80_cpu_context
	.word	op_DDCB_0xed__FP16_z80_cpu_context
	.word	op_DDCB_0xee__FP16_z80_cpu_context
	.word	op_DDCB_0xef__FP16_z80_cpu_context
	.word	op_DDCB_0xf0__FP16_z80_cpu_context
	.word	op_DDCB_0xf1__FP16_z80_cpu_context
	.word	op_DDCB_0xf2__FP16_z80_cpu_context
	.word	op_DDCB_0xf3__FP16_z80_cpu_context
	.word	op_DDCB_0xf4__FP16_z80_cpu_context
	.word	op_DDCB_0xf5__FP16_z80_cpu_context
	.word	op_DDCB_0xf6__FP16_z80_cpu_context
	.word	op_DDCB_0xf7__FP16_z80_cpu_context
	.word	op_DDCB_0xf8__FP16_z80_cpu_context
	.word	op_DDCB_0xf9__FP16_z80_cpu_context
	.word	op_DDCB_0xfa__FP16_z80_cpu_context
	.word	op_DDCB_0xfb__FP16_z80_cpu_context
	.word	op_DDCB_0xfc__FP16_z80_cpu_context
	.word	op_DDCB_0xfd__FP16_z80_cpu_context
	.word	op_DDCB_0xfe__FP16_z80_cpu_context
	.word	op_DDCB_0xff__FP16_z80_cpu_context
.text
	.align	0
op_FDCB_0x00__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3827
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3826
.L3828:
	.align	0
.L3827:
	.word	sz53p_table
.L3826:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x01__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3832
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3831
.L3833:
	.align	0
.L3832:
	.word	sz53p_table
.L3831:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x02__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3837
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3836
.L3838:
	.align	0
.L3837:
	.word	sz53p_table
.L3836:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x03__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3842
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3841
.L3843:
	.align	0
.L3842:
	.word	sz53p_table
.L3841:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x04__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3847
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3846
.L3848:
	.align	0
.L3847:
	.word	sz53p_table
.L3846:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x05__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3852
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3851
.L3853:
	.align	0
.L3852:
	.word	sz53p_table
.L3851:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x06__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r0, r0, #1
	ldr	r2, .L3857
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3856
.L3858:
	.align	0
.L3857:
	.word	sz53p_table
.L3856:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x07__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r3, r0, #255
	mov	r0, r0, asl #1
	orr	r0, r0, r3, lsr #7
	strb	r0, [r4, #148]
	and	r2, r0, #1
	ldr	r1, .L3862
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3861
.L3863:
	.align	0
.L3862:
	.word	sz53p_table
.L3861:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x08__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3867
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3866
.L3868:
	.align	0
.L3867:
	.word	sz53p_table
.L3866:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x09__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3872
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3871
.L3873:
	.align	0
.L3872:
	.word	sz53p_table
.L3871:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x0a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3877
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3876
.L3878:
	.align	0
.L3877:
	.word	sz53p_table
.L3876:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x0b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3882
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3881
.L3883:
	.align	0
.L3882:
	.word	sz53p_table
.L3881:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x0c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3887
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3886
.L3888:
	.align	0
.L3887:
	.word	sz53p_table
.L3886:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x0d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3892
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3891
.L3893:
	.align	0
.L3892:
	.word	sz53p_table
.L3891:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x0e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3897
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3896
.L3898:
	.align	0
.L3897:
	.word	sz53p_table
.L3896:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x0f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r2, r0, #1
	strb	r2, [r4, #0]
	and	r3, r0, #255
	mov	r0, r0, asl #7
	orr	r0, r0, r3, lsr #1
	strb	r0, [r4, #148]
	ldr	r1, .L3902
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3901
.L3903:
	.align	0
.L3902:
	.word	sz53p_table
.L3901:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x10__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3907
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3906
.L3908:
	.align	0
.L3907:
	.word	sz53p_table
.L3906:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x11__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3912
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3911
.L3913:
	.align	0
.L3912:
	.word	sz53p_table
.L3911:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x12__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3917
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3916
.L3918:
	.align	0
.L3917:
	.word	sz53p_table
.L3916:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x13__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3922
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3921
.L3923:
	.align	0
.L3922:
	.word	sz53p_table
.L3921:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x14__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3927
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3926
.L3928:
	.align	0
.L3927:
	.word	sz53p_table
.L3926:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x15__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3932
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3931
.L3933:
	.align	0
.L3932:
	.word	sz53p_table
.L3931:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x16__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r1, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]
	and	r3, r3, #1
	orr	r3, r3, r0, asl #1
	strb	r3, [r4, #148]
	ldr	r2, .L3937
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r3, r3, r1, lsr #7
	strb	r3, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3936
.L3938:
	.align	0
.L3937:
	.word	sz53p_table
.L3936:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x17__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	ip, [r4, #148]	@ zero_extendqisi2
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	orr	r2, r2, r0, asl #1
	strb	r2, [r4, #148]
	ldr	r1, .L3942
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r3, r3, ip, lsr #7
	strb	r3, [r4, #0]
	strb	r2, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3941
.L3943:
	.align	0
.L3942:
	.word	sz53p_table
.L3941:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x18__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3947
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3946
.L3948:
	.align	0
.L3947:
	.word	sz53p_table
.L3946:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x19__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3952
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3951
.L3953:
	.align	0
.L3952:
	.word	sz53p_table
.L3951:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x1a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3957
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3956
.L3958:
	.align	0
.L3957:
	.word	sz53p_table
.L3956:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x1b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3962
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3961
.L3963:
	.align	0
.L3962:
	.word	sz53p_table
.L3961:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x1c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3967
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3966
.L3968:
	.align	0
.L3967:
	.word	sz53p_table
.L3966:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x1d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3972
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3971
.L3973:
	.align	0
.L3972:
	.word	sz53p_table
.L3971:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x1e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r4, #0]
	mov	r3, r3, asl #7
	orr	r3, r3, r2, lsr #1
	strb	r3, [r4, #148]
	and	r2, r2, #1
	ldr	r1, .L3977
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3976
.L3978:
	.align	0
.L3977:
	.word	sz53p_table
.L3976:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x1f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldrb	r1, [r4, #0]
	mov	r1, r1, asl #7
	orr	r1, r1, r2, lsr #1
	strb	r1, [r4, #148]
	and	r2, r2, #1
	ldr	r0, .L3982
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r0, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r1, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3981
.L3983:
	.align	0
.L3982:
	.word	sz53p_table
.L3981:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x20__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3987
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3986
.L3988:
	.align	0
.L3987:
	.word	sz53p_table
.L3986:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x21__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3992
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3991
.L3993:
	.align	0
.L3992:
	.word	sz53p_table
.L3991:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x22__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L3997
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L3996
.L3998:
	.align	0
.L3997:
	.word	sz53p_table
.L3996:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x23__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L4002
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4001
.L4003:
	.align	0
.L4002:
	.word	sz53p_table
.L4001:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x24__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L4007
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4006
.L4008:
	.align	0
.L4007:
	.word	sz53p_table
.L4006:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x25__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L4012
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4011
.L4013:
	.align	0
.L4012:
	.word	sz53p_table
.L4011:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x26__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L4017
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4016
.L4018:
	.align	0
.L4017:
	.word	sz53p_table
.L4016:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x27__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	strb	r0, [r4, #148]
	ldr	r1, .L4022
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4021
.L4023:
	.align	0
.L4022:
	.word	sz53p_table
.L4021:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x28__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4027
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4026
.L4028:
	.align	0
.L4027:
	.word	sz53p_table
.L4026:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x29__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4032
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4031
.L4033:
	.align	0
.L4032:
	.word	sz53p_table
.L4031:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x2a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4037
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4036
.L4038:
	.align	0
.L4037:
	.word	sz53p_table
.L4036:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x2b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4042
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4041
.L4043:
	.align	0
.L4042:
	.word	sz53p_table
.L4041:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x2c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4047
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4046
.L4048:
	.align	0
.L4047:
	.word	sz53p_table
.L4046:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x2d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4052
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4051
.L4053:
	.align	0
.L4052:
	.word	sz53p_table
.L4051:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x2e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4057
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4056
.L4058:
	.align	0
.L4057:
	.word	sz53p_table
.L4056:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x2f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r1, r0, #1
	strb	r1, [r4, #0]
	and	r0, r0, #128
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	orr	r0, r0, r3
	strb	r0, [r4, #148]
	ldr	r2, .L4062
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r1, r1, r3
	strb	r1, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4061
.L4063:
	.align	0
.L4062:
	.word	sz53p_table
.L4061:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x30__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4067
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4066
.L4068:
	.align	0
.L4067:
	.word	sz53p_table
.L4066:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x31__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4072
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4071
.L4073:
	.align	0
.L4072:
	.word	sz53p_table
.L4071:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x32__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4077
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4076
.L4078:
	.align	0
.L4077:
	.word	sz53p_table
.L4076:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x33__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4082
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4081
.L4083:
	.align	0
.L4082:
	.word	sz53p_table
.L4081:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x34__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4087
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4086
.L4088:
	.align	0
.L4087:
	.word	sz53p_table
.L4086:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x35__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4092
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4091
.L4093:
	.align	0
.L4092:
	.word	sz53p_table
.L4091:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x36__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4097
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4096
.L4098:
	.align	0
.L4097:
	.word	sz53p_table
.L4096:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x37__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #7
	strb	r2, [r4, #0]
	mov	r0, r0, asl #1
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldr	r1, .L4102
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r2, r2, r3
	strb	r2, [r4, #0]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4101
.L4103:
	.align	0
.L4102:
	.word	sz53p_table
.L4101:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x38__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L4107
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4106
.L4108:
	.align	0
.L4107:
	.word	sz53p_table
.L4106:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x39__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L4112
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4111
.L4113:
	.align	0
.L4112:
	.word	sz53p_table
.L4111:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x3a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L4117
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4116
.L4118:
	.align	0
.L4117:
	.word	sz53p_table
.L4116:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x3b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L4122
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4121
.L4123:
	.align	0
.L4122:
	.word	sz53p_table
.L4121:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x3c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L4127
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4126
.L4128:
	.align	0
.L4127:
	.word	sz53p_table
.L4126:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x3d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L4132
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4131
.L4133:
	.align	0
.L4132:
	.word	sz53p_table
.L4131:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x3e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	mov	r3, r3, lsr #1
	strb	r3, [r4, #148]
	ldr	r2, .L4137
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r2, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4136
.L4138:
	.align	0
.L4137:
	.word	sz53p_table
.L4136:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x3f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	and	r0, r0, #1
	strb	r0, [r4, #0]
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	mov	r2, r2, lsr #1
	strb	r2, [r4, #148]
	ldr	r1, .L4142
	ldrb	r3, [r4, #148]	@ zero_extendqisi2
	ldrb	r3, [r1, r3]
	orr	r0, r0, r3
	strb	r0, [r4, #0]
	strb	r2, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	b	.L4141
.L4143:
	.align	0
.L4142:
	.word	sz53p_table
.L4141:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x47__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4147
	and	r0, r0, #1
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4146
.L4148:
	.align	0
.L4147:
	.word	sz53p_table
.L4146:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x4f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4152
	and	r0, r0, #2
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4151
.L4153:
	.align	0
.L4152:
	.word	sz53p_table
.L4151:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x57__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4157
	and	r0, r0, #4
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4156
.L4158:
	.align	0
.L4157:
	.word	sz53p_table
.L4156:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x5f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4162
	and	r0, r0, #8
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4161
.L4163:
	.align	0
.L4162:
	.word	sz53p_table
.L4161:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x67__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4167
	and	r0, r0, #16
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4166
.L4168:
	.align	0
.L4167:
	.word	sz53p_table
.L4166:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x6f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4172
	and	r0, r0, #32
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4171
.L4173:
	.align	0
.L4172:
	.word	sz53p_table
.L4171:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x77__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4177
	and	r0, r0, #64
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4176
.L4178:
	.align	0
.L4177:
	.word	sz53p_table
.L4176:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x7f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r4, #148]
	ldrb	r2, [r4, #0]
	and	r2, r2, #1
	ldr	r3, .L4182
	and	r0, r0, #128
	ldrb	r3, [r3, r0]
	and	r3, r3, #215
	cmp	r2, #0
	orrne	r3, r3, #17
	orreq	r3, r3, #16
	ldrb	r2, [r4, #61]
	and	r2, r2, #40
	orr	r3, r3, r2
	strb	r3, [r4, #0]
	b	.L4181
.L4183:
	.align	0
.L4182:
	.word	sz53p_table
.L4181:
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x80__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x81__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x82__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x83__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x84__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x85__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x86__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x87__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #254
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x88__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x89__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x8a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x8b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x8c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x8d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x8e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x8f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #253
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x90__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x91__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x92__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x93__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x94__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x95__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x96__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x97__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #251
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x98__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x99__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x9a__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x9b__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x9c__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x9d__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x9e__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0x9f__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #247
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #239
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xa9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xaa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xab__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xac__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xad__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xae__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xaf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #223
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #191
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xb9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xba__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xbb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xbc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xbd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xbe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xbf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	and	r0, r0, #127
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #1
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xc9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xca__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xcb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xcc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xcd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xce__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xcf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #2
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #4
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xd9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xda__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xdb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xdc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xdd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xde__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xdf__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #8
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #16
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xe9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xea__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xeb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xec__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xed__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xee__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xef__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #32
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf0__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf1__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf2__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf3__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf4__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf5__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf6__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf7__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #64
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf8__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #5]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xf9__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #4]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xfa__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #9]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xfb__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #8]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xfc__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #13]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xfd__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #12]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xfe__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
op_FDCB_0xff__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldrsb	r3, [r4, #149]
	ldrh	r2, [r4, #36]	@ movhi
	add	r3, r3, r2
	strh	r3, [r4, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrsb	r1, [r4, #149]
	add	r1, r1, r2
	mov	r1, r1, asl #16
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
	orr	r0, r0, #128
	strb	r0, [r4, #148]
	strb	r0, [r4, #1]
	ldrsb	r1, [r4, #149]
	ldrh	r3, [r4, #36]	@ movhi
	add	r1, r1, r3
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	ldrb	r2, [r4, #148]	@ zero_extendqisi2
	ldr	r3, [r4, #128]
	ldr	ip, [r4, #124]
	mov	lr, pc
	bx	ip
	ldmfd	sp!, {r4, lr}
	bx	lr
.data
	.align	0
opcodes_fdcb:
	.word	op_FDCB_0x00__FP16_z80_cpu_context
	.word	op_FDCB_0x01__FP16_z80_cpu_context
	.word	op_FDCB_0x02__FP16_z80_cpu_context
	.word	op_FDCB_0x03__FP16_z80_cpu_context
	.word	op_FDCB_0x04__FP16_z80_cpu_context
	.word	op_FDCB_0x05__FP16_z80_cpu_context
	.word	op_FDCB_0x06__FP16_z80_cpu_context
	.word	op_FDCB_0x07__FP16_z80_cpu_context
	.word	op_FDCB_0x08__FP16_z80_cpu_context
	.word	op_FDCB_0x09__FP16_z80_cpu_context
	.word	op_FDCB_0x0a__FP16_z80_cpu_context
	.word	op_FDCB_0x0b__FP16_z80_cpu_context
	.word	op_FDCB_0x0c__FP16_z80_cpu_context
	.word	op_FDCB_0x0d__FP16_z80_cpu_context
	.word	op_FDCB_0x0e__FP16_z80_cpu_context
	.word	op_FDCB_0x0f__FP16_z80_cpu_context
	.word	op_FDCB_0x10__FP16_z80_cpu_context
	.word	op_FDCB_0x11__FP16_z80_cpu_context
	.word	op_FDCB_0x12__FP16_z80_cpu_context
	.word	op_FDCB_0x13__FP16_z80_cpu_context
	.word	op_FDCB_0x14__FP16_z80_cpu_context
	.word	op_FDCB_0x15__FP16_z80_cpu_context
	.word	op_FDCB_0x16__FP16_z80_cpu_context
	.word	op_FDCB_0x17__FP16_z80_cpu_context
	.word	op_FDCB_0x18__FP16_z80_cpu_context
	.word	op_FDCB_0x19__FP16_z80_cpu_context
	.word	op_FDCB_0x1a__FP16_z80_cpu_context
	.word	op_FDCB_0x1b__FP16_z80_cpu_context
	.word	op_FDCB_0x1c__FP16_z80_cpu_context
	.word	op_FDCB_0x1d__FP16_z80_cpu_context
	.word	op_FDCB_0x1e__FP16_z80_cpu_context
	.word	op_FDCB_0x1f__FP16_z80_cpu_context
	.word	op_FDCB_0x20__FP16_z80_cpu_context
	.word	op_FDCB_0x21__FP16_z80_cpu_context
	.word	op_FDCB_0x22__FP16_z80_cpu_context
	.word	op_FDCB_0x23__FP16_z80_cpu_context
	.word	op_FDCB_0x24__FP16_z80_cpu_context
	.word	op_FDCB_0x25__FP16_z80_cpu_context
	.word	op_FDCB_0x26__FP16_z80_cpu_context
	.word	op_FDCB_0x27__FP16_z80_cpu_context
	.word	op_FDCB_0x28__FP16_z80_cpu_context
	.word	op_FDCB_0x29__FP16_z80_cpu_context
	.word	op_FDCB_0x2a__FP16_z80_cpu_context
	.word	op_FDCB_0x2b__FP16_z80_cpu_context
	.word	op_FDCB_0x2c__FP16_z80_cpu_context
	.word	op_FDCB_0x2d__FP16_z80_cpu_context
	.word	op_FDCB_0x2e__FP16_z80_cpu_context
	.word	op_FDCB_0x2f__FP16_z80_cpu_context
	.word	op_FDCB_0x30__FP16_z80_cpu_context
	.word	op_FDCB_0x31__FP16_z80_cpu_context
	.word	op_FDCB_0x32__FP16_z80_cpu_context
	.word	op_FDCB_0x33__FP16_z80_cpu_context
	.word	op_FDCB_0x34__FP16_z80_cpu_context
	.word	op_FDCB_0x35__FP16_z80_cpu_context
	.word	op_FDCB_0x36__FP16_z80_cpu_context
	.word	op_FDCB_0x37__FP16_z80_cpu_context
	.word	op_FDCB_0x38__FP16_z80_cpu_context
	.word	op_FDCB_0x39__FP16_z80_cpu_context
	.word	op_FDCB_0x3a__FP16_z80_cpu_context
	.word	op_FDCB_0x3b__FP16_z80_cpu_context
	.word	op_FDCB_0x3c__FP16_z80_cpu_context
	.word	op_FDCB_0x3d__FP16_z80_cpu_context
	.word	op_FDCB_0x3e__FP16_z80_cpu_context
	.word	op_FDCB_0x3f__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x47__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x4f__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x57__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x5f__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x67__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x6f__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x77__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x7f__FP16_z80_cpu_context
	.word	op_FDCB_0x80__FP16_z80_cpu_context
	.word	op_FDCB_0x81__FP16_z80_cpu_context
	.word	op_FDCB_0x82__FP16_z80_cpu_context
	.word	op_FDCB_0x83__FP16_z80_cpu_context
	.word	op_FDCB_0x84__FP16_z80_cpu_context
	.word	op_FDCB_0x85__FP16_z80_cpu_context
	.word	op_FDCB_0x86__FP16_z80_cpu_context
	.word	op_FDCB_0x87__FP16_z80_cpu_context
	.word	op_FDCB_0x88__FP16_z80_cpu_context
	.word	op_FDCB_0x89__FP16_z80_cpu_context
	.word	op_FDCB_0x8a__FP16_z80_cpu_context
	.word	op_FDCB_0x8b__FP16_z80_cpu_context
	.word	op_FDCB_0x8c__FP16_z80_cpu_context
	.word	op_FDCB_0x8d__FP16_z80_cpu_context
	.word	op_FDCB_0x8e__FP16_z80_cpu_context
	.word	op_FDCB_0x8f__FP16_z80_cpu_context
	.word	op_FDCB_0x90__FP16_z80_cpu_context
	.word	op_FDCB_0x91__FP16_z80_cpu_context
	.word	op_FDCB_0x92__FP16_z80_cpu_context
	.word	op_FDCB_0x93__FP16_z80_cpu_context
	.word	op_FDCB_0x94__FP16_z80_cpu_context
	.word	op_FDCB_0x95__FP16_z80_cpu_context
	.word	op_FDCB_0x96__FP16_z80_cpu_context
	.word	op_FDCB_0x97__FP16_z80_cpu_context
	.word	op_FDCB_0x98__FP16_z80_cpu_context
	.word	op_FDCB_0x99__FP16_z80_cpu_context
	.word	op_FDCB_0x9a__FP16_z80_cpu_context
	.word	op_FDCB_0x9b__FP16_z80_cpu_context
	.word	op_FDCB_0x9c__FP16_z80_cpu_context
	.word	op_FDCB_0x9d__FP16_z80_cpu_context
	.word	op_FDCB_0x9e__FP16_z80_cpu_context
	.word	op_FDCB_0x9f__FP16_z80_cpu_context
	.word	op_FDCB_0xa0__FP16_z80_cpu_context
	.word	op_FDCB_0xa1__FP16_z80_cpu_context
	.word	op_FDCB_0xa2__FP16_z80_cpu_context
	.word	op_FDCB_0xa3__FP16_z80_cpu_context
	.word	op_FDCB_0xa4__FP16_z80_cpu_context
	.word	op_FDCB_0xa5__FP16_z80_cpu_context
	.word	op_FDCB_0xa6__FP16_z80_cpu_context
	.word	op_FDCB_0xa7__FP16_z80_cpu_context
	.word	op_FDCB_0xa8__FP16_z80_cpu_context
	.word	op_FDCB_0xa9__FP16_z80_cpu_context
	.word	op_FDCB_0xaa__FP16_z80_cpu_context
	.word	op_FDCB_0xab__FP16_z80_cpu_context
	.word	op_FDCB_0xac__FP16_z80_cpu_context
	.word	op_FDCB_0xad__FP16_z80_cpu_context
	.word	op_FDCB_0xae__FP16_z80_cpu_context
	.word	op_FDCB_0xaf__FP16_z80_cpu_context
	.word	op_FDCB_0xb0__FP16_z80_cpu_context
	.word	op_FDCB_0xb1__FP16_z80_cpu_context
	.word	op_FDCB_0xb2__FP16_z80_cpu_context
	.word	op_FDCB_0xb3__FP16_z80_cpu_context
	.word	op_FDCB_0xb4__FP16_z80_cpu_context
	.word	op_FDCB_0xb5__FP16_z80_cpu_context
	.word	op_FDCB_0xb6__FP16_z80_cpu_context
	.word	op_FDCB_0xb7__FP16_z80_cpu_context
	.word	op_FDCB_0xb8__FP16_z80_cpu_context
	.word	op_FDCB_0xb9__FP16_z80_cpu_context
	.word	op_FDCB_0xba__FP16_z80_cpu_context
	.word	op_FDCB_0xbb__FP16_z80_cpu_context
	.word	op_FDCB_0xbc__FP16_z80_cpu_context
	.word	op_FDCB_0xbd__FP16_z80_cpu_context
	.word	op_FDCB_0xbe__FP16_z80_cpu_context
	.word	op_FDCB_0xbf__FP16_z80_cpu_context
	.word	op_FDCB_0xc0__FP16_z80_cpu_context
	.word	op_FDCB_0xc1__FP16_z80_cpu_context
	.word	op_FDCB_0xc2__FP16_z80_cpu_context
	.word	op_FDCB_0xc3__FP16_z80_cpu_context
	.word	op_FDCB_0xc4__FP16_z80_cpu_context
	.word	op_FDCB_0xc5__FP16_z80_cpu_context
	.word	op_FDCB_0xc6__FP16_z80_cpu_context
	.word	op_FDCB_0xc7__FP16_z80_cpu_context
	.word	op_FDCB_0xc8__FP16_z80_cpu_context
	.word	op_FDCB_0xc9__FP16_z80_cpu_context
	.word	op_FDCB_0xca__FP16_z80_cpu_context
	.word	op_FDCB_0xcb__FP16_z80_cpu_context
	.word	op_FDCB_0xcc__FP16_z80_cpu_context
	.word	op_FDCB_0xcd__FP16_z80_cpu_context
	.word	op_FDCB_0xce__FP16_z80_cpu_context
	.word	op_FDCB_0xcf__FP16_z80_cpu_context
	.word	op_FDCB_0xd0__FP16_z80_cpu_context
	.word	op_FDCB_0xd1__FP16_z80_cpu_context
	.word	op_FDCB_0xd2__FP16_z80_cpu_context
	.word	op_FDCB_0xd3__FP16_z80_cpu_context
	.word	op_FDCB_0xd4__FP16_z80_cpu_context
	.word	op_FDCB_0xd5__FP16_z80_cpu_context
	.word	op_FDCB_0xd6__FP16_z80_cpu_context
	.word	op_FDCB_0xd7__FP16_z80_cpu_context
	.word	op_FDCB_0xd8__FP16_z80_cpu_context
	.word	op_FDCB_0xd9__FP16_z80_cpu_context
	.word	op_FDCB_0xda__FP16_z80_cpu_context
	.word	op_FDCB_0xdb__FP16_z80_cpu_context
	.word	op_FDCB_0xdc__FP16_z80_cpu_context
	.word	op_FDCB_0xdd__FP16_z80_cpu_context
	.word	op_FDCB_0xde__FP16_z80_cpu_context
	.word	op_FDCB_0xdf__FP16_z80_cpu_context
	.word	op_FDCB_0xe0__FP16_z80_cpu_context
	.word	op_FDCB_0xe1__FP16_z80_cpu_context
	.word	op_FDCB_0xe2__FP16_z80_cpu_context
	.word	op_FDCB_0xe3__FP16_z80_cpu_context
	.word	op_FDCB_0xe4__FP16_z80_cpu_context
	.word	op_FDCB_0xe5__FP16_z80_cpu_context
	.word	op_FDCB_0xe6__FP16_z80_cpu_context
	.word	op_FDCB_0xe7__FP16_z80_cpu_context
	.word	op_FDCB_0xe8__FP16_z80_cpu_context
	.word	op_FDCB_0xe9__FP16_z80_cpu_context
	.word	op_FDCB_0xea__FP16_z80_cpu_context
	.word	op_FDCB_0xeb__FP16_z80_cpu_context
	.word	op_FDCB_0xec__FP16_z80_cpu_context
	.word	op_FDCB_0xed__FP16_z80_cpu_context
	.word	op_FDCB_0xee__FP16_z80_cpu_context
	.word	op_FDCB_0xef__FP16_z80_cpu_context
	.word	op_FDCB_0xf0__FP16_z80_cpu_context
	.word	op_FDCB_0xf1__FP16_z80_cpu_context
	.word	op_FDCB_0xf2__FP16_z80_cpu_context
	.word	op_FDCB_0xf3__FP16_z80_cpu_context
	.word	op_FDCB_0xf4__FP16_z80_cpu_context
	.word	op_FDCB_0xf5__FP16_z80_cpu_context
	.word	op_FDCB_0xf6__FP16_z80_cpu_context
	.word	op_FDCB_0xf7__FP16_z80_cpu_context
	.word	op_FDCB_0xf8__FP16_z80_cpu_context
	.word	op_FDCB_0xf9__FP16_z80_cpu_context
	.word	op_FDCB_0xfa__FP16_z80_cpu_context
	.word	op_FDCB_0xfb__FP16_z80_cpu_context
	.word	op_FDCB_0xfc__FP16_z80_cpu_context
	.word	op_FDCB_0xfd__FP16_z80_cpu_context
	.word	op_FDCB_0xfe__FP16_z80_cpu_context
	.word	op_FDCB_0xff__FP16_z80_cpu_context
.text
	.align	0
init_tables__Fv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	ip, #0
	ldr	lr, .L4455
	ldr	r5, .L4455+4
	ldr	r4, .L4455+8
.L4444:
	bic	r3, ip, #87
	strb	r3, [lr, ip]
	mov	r0, ip
	mov	r1, #0
	mov	r2, r1
.L4448:
	and	r3, r0, #1
	eor	r1, r1, r3
	mov	r0, r0, asr #1
	add	r2, r2, #1
	cmp	r2, #7
	ble	.L4448
	ldr	r2, .L4455+8
	cmp	r1, #0
	bne	.L4450
	mov	r3, #4
	b	.L4454
.L4456:
	.align	0
.L4455:
	.word	sz53_table
	.word	sz53p_table
	.word	parity_table
.L4450:
	mov	r3, #0
.L4454:
	strb	r3, [r2, ip]
	ldrb	r3, [lr, ip]
	ldrb	r2, [r4, ip]
	orr	r3, r3, r2
	strb	r3, [r5, ip]
	add	ip, ip, #1
	cmp	ip, #255
	ble	.L4444
	ldr	r2, .L4458
	ldrb	r3, [r2, #0]
	orr	r3, r3, #64
	strb	r3, [r2, #0]
	ldr	r2, .L4458+4
	ldrb	r3, [r2, #0]
	orr	r3, r3, #64
	strb	r3, [r2, #0]
	b	.L4457
.L4459:
	.align	0
.L4458:
	.word	sz53_table
	.word	sz53p_table
.L4457:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
	.global	z80ex_step__FP16_z80_cpu_context
z80ex_step__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r4, r0
	mov	r5, #0
	mov	r3, #1
	str	r3, [r4, #84]
	str	r5, [r4, #80]
	str	r5, [r4, #72]
	strb	r5, [r4, #76]
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, r5
	beq	.L4461
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L4491
.L4461:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #1
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L4491:
	and	r0, r0, #255
	mov	r2, r0
	ldrh	r3, [r4, #42]	@ movhi
	add	r3, r3, #1
	strh	r3, [r4, #42]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r4, #89]	@ zero_extendqisi2
	cmp	r3, #0
	bne	.L4464
	ldr	r3, .L4496
	mov	r0, r4
	ldr	ip, [r3, r2, asl #2]
	mov	lr, pc
	bx	ip
	b	.L4465
.L4497:
	.align	0
.L4496:
	.word	opcodes_base
.L4464:
	ldrb	r3, [r4, #89]
	orr	r3, r3, #32
	cmp	r3, #253
	bne	.L4466
	orr	r3, r2, #32
	and	r3, r3, #255
	cmp	r2, #237
	cmpne	r3, #253
	streqb	r2, [r4, #89]
	moveq	r3, #1
	streq	r3, [r4, #80]
	beq	.L4465
.L4466:
	ldrb	r3, [r4, #89]	@ zero_extendqisi2
	cmp	r3, #221
	beq	.L4470
	bgt	.L4489
	cmp	r3, #203
	beq	.L4486
	b	.L4468
.L4489:
	cmp	r3, #237
	beq	.L4484
	cmp	r3, #253
	bne	.L4468
.L4470:
	cmp	r2, #203
	bne	.L4471
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L4472
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L4492
.L4472:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L4492:
	and	r0, r0, #255
	tst	r0, #128
	mvnne	r3, #127
	orrne	r3, r0, r3
	strneb	r3, [r4, #149]
.L4474:
	streqb	r0, [r4, #149]
.L4475:
	ldrb	r3, [r4, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L4476
	mov	r0, r4
	ldr	r1, [r4, #136]
	ldr	ip, [r4, #132]
	mov	lr, pc
	bx	ip
	b	.L4493
.L4476:
	ldrh	r1, [r4, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r4, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r4
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r4, #120]
	ldr	ip, [r4, #116]
	mov	lr, pc
	bx	ip
.L4493:
	and	r0, r0, #255
	mov	r2, r0
	ldrb	r3, [r4, #89]	@ zero_extendqisi2
	cmp	r3, #221
	bne	.L4478
	ldr	r3, .L4498
	b	.L4494
.L4499:
	.align	0
.L4498:
	.word	opcodes_ddcb
.L4478:
	ldr	r3, .L4500
	b	.L4494
.L4501:
	.align	0
.L4500:
	.word	opcodes_fdcb
.L4471:
	ldrb	r3, [r4, #89]	@ zero_extendqisi2
	cmp	r3, #221
	bne	.L4481
	ldr	r3, .L4502
	b	.L4495
.L4503:
	.align	0
.L4502:
	.word	opcodes_dd
.L4481:
	ldr	r3, .L4504
.L4495:
	ldr	r5, [r3, r2, asl #2]
	cmp	r5, #0
	bne	.L4468
	ldr	r3, .L4504+4
	b	.L4494
.L4505:
	.align	0
.L4504:
	.word	opcodes_fd
	.word	opcodes_base
.L4484:
	ldr	r3, .L4506
	ldr	r5, [r3, r2, asl #2]
	cmp	r5, #0
	ldreq	r3, .L4506+4
	ldreq	r5, [r3, #0]
	b	.L4468
.L4507:
	.align	0
.L4506:
	.word	opcodes_ed
	.word	opcodes_base
.L4486:
	ldr	r3, .L4509
.L4494:
	ldr	r5, [r3, r2, asl #2]
.L4468:
	mov	r0, r4
	mov	lr, pc
	bx	r5
	mov	r3, #0
	strb	r3, [r4, #89]
.L4465:
	mov	r3, #0
	str	r3, [r4, #84]
	ldr	r0, [r4, #72]
	b	.L4508
.L4510:
	.align	0
.L4509:
	.word	opcodes_cb
.L4508:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
	.global	z80ex_last_op_type__FP16_z80_cpu_context
z80ex_last_op_type__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldrb	r0, [r0, #89]	@ zero_extendqisi2
	bx	lr
	.align	0
	.global	z80ex_reset__FP16_z80_cpu_context
z80ex_reset__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r2, #0
	mov	r1, r2	@ movhi
	strh	r2, [r0, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strb	r1, [r0, #57]
	strb	r1, [r0, #56]
	str	r2, [r0, #64]
	mvn	r3, #0
	strh	r3, [r0, #28]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #24]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #20]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #16]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r0, #0]	@ movhi   ;; CYGNUS LOCAL nickc
	strb	r1, [r0, #44]
	strh	r2, [r0, #42]	@ movhi   ;; CYGNUS LOCAL nickc
	strb	r1, [r0, #40]
	str	r2, [r0, #80]
	str	r2, [r0, #68]
	strb	r1, [r0, #88]
	str	r2, [r0, #84]
	strb	r1, [r0, #76]
	str	r2, [r0, #72]
	strb	r1, [r0, #89]
	bx	lr
	.align	0
	.global	z80ex_create__FPFP16_z80_cpu_contextUsiPv_UcPvPFP16_z80_cpu_contextUsUcPv_vT1PFP16_z80_cpu_contextUsPv_UcT1T2T1PFP16_z80_cpu_contextPv_UcT1
z80ex_create__FPFP16_z80_cpu_contextUsiPv_UcPvPFP16_z80_cpu_contextUsUcPv_vT1PFP16_z80_cpu_contextUsPv_UcT1T2T1PFP16_z80_cpu_contextPv_UcT1:
	@ args = 24, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}
	mov	r5, r0
	mov	r6, r1
	mov	r7, r2
	mov	r8, r3
	mov	r0, #152
	bl	__builtin_new
	subs	r4, r0, #0
	beq	.L4516
	mov	r0, r4
	mov	r1, #0
	mov	r2, #152
	bl	memset
	mov	r0, r4
	bl	z80ex_reset__FP16_z80_cpu_context
	str	r5, [r4, #116]
	str	r6, [r4, #120]
	str	r7, [r4, #124]
	str	r8, [r4, #128]
	ldr	r3, [sp, #24]
	str	r3, [r4, #100]
	ldr	r3, [sp, #28]
	str	r3, [r4, #104]
	ldr	r3, [sp, #32]
	str	r3, [r4, #108]
	ldr	r3, [sp, #36]
	str	r3, [r4, #112]
	ldr	r3, [sp, #40]
	str	r3, [r4, #132]
	ldr	r3, [sp, #44]
	str	r3, [r4, #136]
	mov	r0, r4
	b	.L4517
.L4516:
	mov	r0, #0
.L4517:
	ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
	bx	lr
	.align	0
	.global	z80ex_destroy__FP16_z80_cpu_context
z80ex_destroy__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	@ I don't think this function clobbers lr
	b	__builtin_delete
	.align	0
	.global	z80ex_set_tstate_callback__FP16_z80_cpu_contextPFP16_z80_cpu_contextPv_vPv
z80ex_set_tstate_callback__FP16_z80_cpu_contextPFP16_z80_cpu_contextPv_vPv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	str	r1, [r0, #92]
	str	r2, [r0, #96]
	bx	lr
	.align	0
	.global	z80ex_nmi__FP16_z80_cpu_context
z80ex_nmi__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, lr}
	mov	r5, r0
	ldr	r3, [r5, #84]
	cmp	r3, #0
	bne	.L4522
	ldr	r3, [r5, #80]
	cmp	r3, #0
	bne	.L4522
	ldrb	r3, [r5, #89]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L4521
.L4522:
	mov	r0, #0
	b	.L4523
.L4521:
	mov	r3, #1
	str	r3, [r5, #84]
	ldrh	r3, [r5, #42]	@ movhi
	add	r3, r3, #1
	strh	r3, [r5, #42]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r4, #0
	strb	r4, [r5, #56]
	ldrh	r1, [r5, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r5, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r5
	mov	r1, r1, lsr #16
	ldrb	r2, [r5, #53]	@ zero_extendqisi2
	ldr	r3, [r5, #128]
	ldr	ip, [r5, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r5, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r5, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r5
	mov	r1, r1, lsr #16
	ldrb	r2, [r5, #52]	@ zero_extendqisi2
	ldr	r3, [r5, #128]
	ldr	ip, [r5, #124]
	mov	lr, pc
	bx	ip
	mov	r3, #102
	strh	r3, [r5, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strh	r3, [r5, #60]	@ movhi   ;; CYGNUS LOCAL nickc
	str	r4, [r5, #84]
	mov	r0, #11
.L4523:
	ldmfd	sp!, {r4, r5, lr}
	bx	lr
	.align	0
	.global	z80ex_int__FP16_z80_cpu_context
z80ex_int__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}
	mov	r6, r0
	ldrb	r3, [r6, #56]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L4526
	ldr	r3, [r6, #80]
	cmp	r3, #0
	bne	.L4526
	ldr	r3, [r6, #84]
	cmp	r3, #0
	bne	.L4526
	ldrb	r3, [r6, #89]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L4525
.L4526:
	mov	r0, #0
	b	.L4542
.L4525:
	mov	r2, #0
	str	r2, [r6, #72]
	strb	r2, [r6, #76]
	ldr	r3, [r6, #68]
	cmp	r3, r2
	ldrneh	r3, [r6, #52]	@ movhi
	addne	r3, r3, #1
	strneh	r3, [r6, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	strne	r2, [r6, #68]
.L4527:
	mov	r3, #0
	strb	r3, [r6, #57]
	strb	r3, [r6, #56]
	mov	r3, #1
	strb	r3, [r6, #88]
	str	r3, [r6, #84]
	ldr	r3, [r6, #64]
	cmp	r3, #1
	beq	.L4534
	bgt	.L4540
	cmp	r3, #0
	beq	.L4529
	b	.L4528
.L4540:
	cmp	r3, #2
	beq	.L4535
	b	.L4528
.L4529:
	mov	r0, r6
	bl	z80ex_step__FP16_z80_cpu_context
	mov	r4, r0
	b	.L4543
.L4532:
	mov	r0, r6
	bl	z80ex_step__FP16_z80_cpu_context
	add	r4, r4, r0
.L4543:
	ldrb	r3, [r6, #89]	@ zero_extendqisi2
	cmp	r3, #0
	bne	.L4532
	str	r4, [r6, #72]
	b	.L4528
.L4534:
	ldrh	r3, [r6, #42]	@ movhi
	add	r3, r3, #1
	strh	r3, [r6, #42]	@ movhi   ;; CYGNUS LOCAL nickc
	ldr	r3, .L4545
	mov	r0, r6
	ldr	ip, [r3, #1020]
	mov	lr, pc
	bx	ip
	b	.L4528
.L4546:
	.align	0
.L4545:
	.word	opcodes_base
.L4535:
	ldrh	r3, [r6, #42]	@ movhi
	add	r3, r3, #1
	strh	r3, [r6, #42]	@ movhi   ;; CYGNUS LOCAL nickc
	ldrb	r3, [r6, #88]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L4536
	mov	r0, r6
	ldr	r1, [r6, #136]
	ldr	ip, [r6, #132]
	mov	lr, pc
	bx	ip
	b	.L4544
.L4536:
	ldrh	r1, [r6, #52]	@ movhi
	add	r3, r1, #1
	strh	r3, [r6, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r0, r6
	mov	r1, r1, lsr #16
	mov	r2, #0
	ldr	r3, [r6, #120]
	ldr	ip, [r6, #116]
	mov	lr, pc
	bx	ip
.L4544:
	and	r0, r0, #255
	ldrb	r5, [r6, #40]	@ zero_extendqisi2
	orr	r5, r0, r5, asl #8
	ldrh	r3, [r6, #52]	@ movhi
	mov	r3, r3, asl #16
	orr	r3, r3, r4, lsr #16
	mov	r4, r3, ror #16
	ldrh	r1, [r6, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r6, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	mov	r2, r4, lsr #8
	mov	r0, r6
	mov	r1, r1, lsr #16
	and	r2, r2, #255
	ldr	r3, [r6, #128]
	ldr	ip, [r6, #124]
	mov	lr, pc
	bx	ip
	ldrh	r1, [r6, #48]	@ movhi
	sub	r1, r1, #1
	strh	r1, [r6, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	mov	r1, r1, asl #16
	and	r2, r4, #255
	mov	r0, r6
	mov	r1, r1, lsr #16
	ldr	r3, [r6, #128]
	ldr	ip, [r6, #124]
	mov	lr, pc
	bx	ip
	add	r4, r5, #1
	mov	r4, r4, asl #16
	mov	r4, r4, lsr #16
	mov	r0, r6
	mov	r1, r5
	mov	r2, #0
	ldr	r3, [r6, #120]
	ldr	ip, [r6, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r6, #52]
	mov	r0, r6
	mov	r1, r4
	mov	r2, #0
	ldr	r3, [r6, #120]
	ldr	ip, [r6, #116]
	mov	lr, pc
	bx	ip
	strb	r0, [r6, #53]
	ldrb	r7, [r6, #52]	@ zero_extendqisi2
	ldrb	r8, [r6, #53]	@ zero_extendqisi2
	orr	r8, r7, r8, asl #8
	strh	r8, [r6, #60]	@ movhi   ;; CYGNUS LOCAL nickc
.L4528:
	mov	r3, #0
	str	r3, [r6, #84]
	strb	r3, [r6, #88]
	ldr	r0, [r6, #72]
.L4542:
	ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
	bx	lr
	.align	0
	.global	z80ex_w_states__FP16_z80_cpu_contextUi
z80ex_w_states__FP16_z80_cpu_contextUi:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	bx	lr
	.align	0
	.global	z80ex_next_t_state__FP16_z80_cpu_context
z80ex_next_t_state__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	r4, r0
	ldr	r3, [r4, #92]
	cmp	r3, #0
	ldrne	r1, [r4, #96]
	movne	lr, pc
	bxne	r3
.L4550:
	ldr	r3, [r4, #72]
	add	r3, r3, #1
	str	r3, [r4, #72]
	ldrb	r3, [r4, #76]
	add	r3, r3, #1
	strb	r3, [r4, #76]
	ldmfd	sp!, {r4, lr}
	bx	lr
	.align	0
	.global	z80ex_get_reg__FP16_z80_cpu_context9Z80_REG_T
z80ex_get_reg__FP16_z80_cpu_context9Z80_REG_T:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	cmp	r1, #17
	ldrls	pc, [pc, r1, asl #2]
	b	.L4553
	.align	0
.L4572:
	.word	.L4554
	.word	.L4555
	.word	.L4556
	.word	.L4557
	.word	.L4558
	.word	.L4559
	.word	.L4560
	.word	.L4561
	.word	.L4562
	.word	.L4563
	.word	.L4564
	.word	.L4565
	.word	.L4566
	.word	.L4567
	.word	.L4568
	.word	.L4569
	.word	.L4570
	.word	.L4571
.L4554:
	ldrb	r3, [r0, #0]	@ zero_extendqisi2
	ldrb	r0, [r0, #1]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4555:
	ldrb	r3, [r0, #4]	@ zero_extendqisi2
	ldrb	r0, [r0, #5]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4556:
	ldrb	r3, [r0, #8]	@ zero_extendqisi2
	ldrb	r0, [r0, #9]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4557:
	ldrb	r3, [r0, #12]	@ zero_extendqisi2
	ldrb	r0, [r0, #13]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4558:
	ldrb	r3, [r0, #16]	@ zero_extendqisi2
	ldrb	r0, [r0, #17]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4559:
	ldrb	r3, [r0, #20]	@ zero_extendqisi2
	ldrb	r0, [r0, #21]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4560:
	ldrb	r3, [r0, #24]	@ zero_extendqisi2
	ldrb	r0, [r0, #25]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4561:
	ldrb	r3, [r0, #28]	@ zero_extendqisi2
	ldrb	r0, [r0, #29]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4562:
	ldrb	r3, [r0, #32]	@ zero_extendqisi2
	ldrb	r0, [r0, #33]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4563:
	ldrb	r3, [r0, #36]	@ zero_extendqisi2
	ldrb	r0, [r0, #37]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4564:
	ldrb	r3, [r0, #52]	@ zero_extendqisi2
	ldrb	r0, [r0, #53]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4565:
	ldrb	r3, [r0, #48]	@ zero_extendqisi2
	ldrb	r0, [r0, #49]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4566:
	ldrb	r0, [r0, #40]	@ zero_extendqisi2
	bx	lr
.L4567:
	ldrb	r3, [r0, #42]	@ zero_extendqisi2
	ldrb	r0, [r0, #43]	@ zero_extendqisi2
	orr	r0, r3, r0, asl #8
	bx	lr
.L4568:
	ldrb	r0, [r0, #44]	@ zero_extendqisi2
	bx	lr
.L4569:
	ldr	r0, [r0, #64]
	bx	lr
.L4570:
	ldrb	r0, [r0, #56]	@ zero_extendqisi2
	bx	lr
.L4571:
	ldrb	r0, [r0, #57]	@ zero_extendqisi2
	bx	lr
.L4553:
	mov	r0, #0
	bx	lr
	.align	0
	.global	z80ex_set_reg__FP16_z80_cpu_context9Z80_REG_TUs
z80ex_set_reg__FP16_z80_cpu_context9Z80_REG_TUs:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	mov	r2, r2, asl #16
	mov	r2, r2, lsr #16
	cmp	r1, #17
	ldrls	pc, [pc, r1, asl #2]
	b	.L4576
	.align	0
.L4603:
	.word	.L4578
	.word	.L4579
	.word	.L4580
	.word	.L4581
	.word	.L4582
	.word	.L4583
	.word	.L4584
	.word	.L4585
	.word	.L4586
	.word	.L4587
	.word	.L4588
	.word	.L4589
	.word	.L4590
	.word	.L4591
	.word	.L4592
	.word	.L4593
	.word	.L4601
	.word	.L4602
.L4578:
	strh	r2, [r0, #0]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4579:
	strh	r2, [r0, #4]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4580:
	strh	r2, [r0, #8]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4581:
	strh	r2, [r0, #12]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4582:
	strh	r2, [r0, #16]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4583:
	strh	r2, [r0, #20]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4584:
	strh	r2, [r0, #24]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4585:
	strh	r2, [r0, #28]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4586:
	strh	r2, [r0, #32]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4587:
	strh	r2, [r0, #36]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4588:
	strh	r2, [r0, #52]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4589:
	strh	r2, [r0, #48]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4590:
	strb	r2, [r0, #40]
	bx	lr
.L4591:
	and	r3, r2, #255
	strh	r3, [r0, #42]	@ movhi   ;; CYGNUS LOCAL nickc
	bx	lr
.L4592:
	strb	r2, [r0, #44]
	bx	lr
.L4593:
	and	r3, r2, #3
	cmp	r3, #1
	beq	.L4596
	bgt	.L4600
	cmp	r3, #0
	beq	.L4595
	b	.L4601
.L4600:
	cmp	r3, #2
	beq	.L4597
	b	.L4601
.L4595:
	mov	r3, #0
	str	r3, [r0, #64]
	bx	lr
.L4596:
	mov	r3, #1
	str	r3, [r0, #64]
	bx	lr
.L4597:
	mov	r3, #2
	str	r3, [r0, #64]
	bx	lr
.L4601:
	and	r3, r2, #1
	strb	r3, [r0, #56]
	bx	lr
.L4602:
	and	r3, r2, #1
	strb	r3, [r0, #57]
.L4576:
	bx	lr
	.align	0
	.global	z80ex_op_tstate__FP16_z80_cpu_context
z80ex_op_tstate__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r0, [r0, #72]
	bx	lr
	.align	0
	.global	z80ex_doing_halt__FP16_z80_cpu_context
z80ex_doing_halt__FP16_z80_cpu_context:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, current_function_anonymous_args = 0
	ldr	r0, [r0, #68]
	bx	lr
	.section .rdata
halfcarry_add_table:
	.byte	0
	.byte	16
	.byte	16
	.byte	16
	.byte	0
	.byte	0
	.byte	0
	.byte	16
halfcarry_sub_table:
	.byte	0
	.byte	0
	.byte	16
	.byte	0
	.byte	16
	.byte	0
	.byte	16
	.byte	16
overflow_add_table:
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.byte	4
	.byte	0
	.byte	0
	.byte	0
overflow_sub_table:
	.byte	0
	.byte	4
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.byte	0
.bss
sz53_table:
	.space	256
parity_table:
	.space	256
sz53p_table:
	.space	256
	.section .rdata
daatab:
	.byte	68
	.byte	0
	.byte	0
	.byte	1
	.byte	0
	.byte	2
	.byte	4
	.byte	3
	.byte	0
	.byte	4
	.byte	4
	.byte	5
	.byte	4
	.byte	6
	.byte	0
	.byte	7
	.byte	8
	.byte	8
	.byte	12
	.byte	9
	.byte	16
	.byte	16
	.byte	20
	.byte	17
	.byte	20
	.byte	18
	.byte	16
	.byte	19
	.byte	20
	.byte	20
	.byte	16
	.byte	21
	.byte	0
	.byte	16
	.byte	4
	.byte	17
	.byte	4
	.byte	18
	.byte	0
	.byte	19
	.byte	4
	.byte	20
	.byte	0
	.byte	21
	.byte	0
	.byte	22
	.byte	4
	.byte	23
	.byte	12
	.byte	24
	.byte	8
	.byte	25
	.byte	48
	.byte	32
	.byte	52
	.byte	33
	.byte	52
	.byte	34
	.byte	48
	.byte	35
	.byte	52
	.byte	36
	.byte	48
	.byte	37
	.byte	32
	.byte	32
	.byte	36
	.byte	33
	.byte	36
	.byte	34
	.byte	32
	.byte	35
	.byte	36
	.byte	36
	.byte	32
	.byte	37
	.byte	32
	.byte	38
	.byte	36
	.byte	39
	.byte	44
	.byte	40
	.byte	40
	.byte	41
	.byte	52
	.byte	48
	.byte	48
	.byte	49
	.byte	48
	.byte	50
	.byte	52
	.byte	51
	.byte	48
	.byte	52
	.byte	52
	.byte	53
	.byte	36
	.byte	48
	.byte	32
	.byte	49
	.byte	32
	.byte	50
	.byte	36
	.byte	51
	.byte	32
	.byte	52
	.byte	36
	.byte	53
	.byte	36
	.byte	54
	.byte	32
	.byte	55
	.byte	40
	.byte	56
	.byte	44
	.byte	57
	.byte	16
	.byte	64
	.byte	20
	.byte	65
	.byte	20
	.byte	66
	.byte	16
	.byte	67
	.byte	20
	.byte	68
	.byte	16
	.byte	69
	.byte	0
	.byte	64
	.byte	4
	.byte	65
	.byte	4
	.byte	66
	.byte	0
	.byte	67
	.byte	4
	.byte	68
	.byte	0
	.byte	69
	.byte	0
	.byte	70
	.byte	4
	.byte	71
	.byte	12
	.byte	72
	.byte	8
	.byte	73
	.byte	20
	.byte	80
	.byte	16
	.byte	81
	.byte	16
	.byte	82
	.byte	20
	.byte	83
	.byte	16
	.byte	84
	.byte	20
	.byte	85
	.byte	4
	.byte	80
	.byte	0
	.byte	81
	.byte	0
	.byte	82
	.byte	4
	.byte	83
	.byte	0
	.byte	84
	.byte	4
	.byte	85
	.byte	4
	.byte	86
	.byte	0
	.byte	87
	.byte	8
	.byte	88
	.byte	12
	.byte	89
	.byte	52
	.byte	96
	.byte	48
	.byte	97
	.byte	48
	.byte	98
	.byte	52
	.byte	99
	.byte	48
	.byte	100
	.byte	52
	.byte	101
	.byte	36
	.byte	96
	.byte	32
	.byte	97
	.byte	32
	.byte	98
	.byte	36
	.byte	99
	.byte	32
	.byte	100
	.byte	36
	.byte	101
	.byte	36
	.byte	102
	.byte	32
	.byte	103
	.byte	40
	.byte	104
	.byte	44
	.byte	105
	.byte	48
	.byte	112
	.byte	52
	.byte	113
	.byte	52
	.byte	114
	.byte	48
	.byte	115
	.byte	52
	.byte	116
	.byte	48
	.byte	117
	.byte	32
	.byte	112
	.byte	36
	.byte	113
	.byte	36
	.byte	114
	.byte	32
	.byte	115
	.byte	36
	.byte	116
	.byte	32
	.byte	117
	.byte	32
	.byte	118
	.byte	36
	.byte	119
	.byte	44
	.byte	120
	.byte	40
	.byte	121
	.byte	144
	.byte	128
	.byte	148
	.byte	129
	.byte	148
	.byte	130
	.byte	144
	.byte	131
	.byte	148
	.byte	132
	.byte	144
	.byte	133
	.byte	128
	.byte	128
	.byte	132
	.byte	129
	.byte	132
	.byte	130
	.byte	128
	.byte	131
	.byte	132
	.byte	132
	.byte	128
	.byte	133
	.byte	128
	.byte	134
	.byte	132
	.byte	135
	.byte	140
	.byte	136
	.byte	136
	.byte	137
	.byte	148
	.byte	144
	.byte	144
	.byte	145
	.byte	144
	.byte	146
	.byte	148
	.byte	147
	.byte	144
	.byte	148
	.byte	148
	.byte	149
	.byte	132
	.byte	144
	.byte	128
	.byte	145
	.byte	128
	.byte	146
	.byte	132
	.byte	147
	.byte	128
	.byte	148
	.byte	132
	.byte	149
	.byte	132
	.byte	150
	.byte	128
	.byte	151
	.byte	136
	.byte	152
	.byte	140
	.byte	153
	.byte	85
	.byte	0
	.byte	17
	.byte	1
	.byte	17
	.byte	2
	.byte	21
	.byte	3
	.byte	17
	.byte	4
	.byte	21
	.byte	5
	.byte	69
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	2
	.byte	5
	.byte	3
	.byte	1
	.byte	4
	.byte	5
	.byte	5
	.byte	5
	.byte	6
	.byte	1
	.byte	7
	.byte	9
	.byte	8
	.byte	13
	.byte	9
	.byte	17
	.byte	16
	.byte	21
	.byte	17
	.byte	21
	.byte	18
	.byte	17
	.byte	19
	.byte	21
	.byte	20
	.byte	17
	.byte	21
	.byte	1
	.byte	16
	.byte	5
	.byte	17
	.byte	5
	.byte	18
	.byte	1
	.byte	19
	.byte	5
	.byte	20
	.byte	1
	.byte	21
	.byte	1
	.byte	22
	.byte	5
	.byte	23
	.byte	13
	.byte	24
	.byte	9
	.byte	25
	.byte	49
	.byte	32
	.byte	53
	.byte	33
	.byte	53
	.byte	34
	.byte	49
	.byte	35
	.byte	53
	.byte	36
	.byte	49
	.byte	37
	.byte	33
	.byte	32
	.byte	37
	.byte	33
	.byte	37
	.byte	34
	.byte	33
	.byte	35
	.byte	37
	.byte	36
	.byte	33
	.byte	37
	.byte	33
	.byte	38
	.byte	37
	.byte	39
	.byte	45
	.byte	40
	.byte	41
	.byte	41
	.byte	53
	.byte	48
	.byte	49
	.byte	49
	.byte	49
	.byte	50
	.byte	53
	.byte	51
	.byte	49
	.byte	52
	.byte	53
	.byte	53
	.byte	37
	.byte	48
	.byte	33
	.byte	49
	.byte	33
	.byte	50
	.byte	37
	.byte	51
	.byte	33
	.byte	52
	.byte	37
	.byte	53
	.byte	37
	.byte	54
	.byte	33
	.byte	55
	.byte	41
	.byte	56
	.byte	45
	.byte	57
	.byte	17
	.byte	64
	.byte	21
	.byte	65
	.byte	21
	.byte	66
	.byte	17
	.byte	67
	.byte	21
	.byte	68
	.byte	17
	.byte	69
	.byte	1
	.byte	64
	.byte	5
	.byte	65
	.byte	5
	.byte	66
	.byte	1
	.byte	67
	.byte	5
	.byte	68
	.byte	1
	.byte	69
	.byte	1
	.byte	70
	.byte	5
	.byte	71
	.byte	13
	.byte	72
	.byte	9
	.byte	73
	.byte	21
	.byte	80
	.byte	17
	.byte	81
	.byte	17
	.byte	82
	.byte	21
	.byte	83
	.byte	17
	.byte	84
	.byte	21
	.byte	85
	.byte	5
	.byte	80
	.byte	1
	.byte	81
	.byte	1
	.byte	82
	.byte	5
	.byte	83
	.byte	1
	.byte	84
	.byte	5
	.byte	85
	.byte	5
	.byte	86
	.byte	1
	.byte	87
	.byte	9
	.byte	88
	.byte	13
	.byte	89
	.byte	53
	.byte	96
	.byte	49
	.byte	97
	.byte	49
	.byte	98
	.byte	53
	.byte	99
	.byte	49
	.byte	100
	.byte	53
	.byte	101
	.byte	37
	.byte	96
	.byte	33
	.byte	97
	.byte	33
	.byte	98
	.byte	37
	.byte	99
	.byte	33
	.byte	100
	.byte	37
	.byte	101
	.byte	37
	.byte	102
	.byte	33
	.byte	103
	.byte	41
	.byte	104
	.byte	45
	.byte	105
	.byte	49
	.byte	112
	.byte	53
	.byte	113
	.byte	53
	.byte	114
	.byte	49
	.byte	115
	.byte	53
	.byte	116
	.byte	49
	.byte	117
	.byte	33
	.byte	112
	.byte	37
	.byte	113
	.byte	37
	.byte	114
	.byte	33
	.byte	115
	.byte	37
	.byte	116
	.byte	33
	.byte	117
	.byte	33
	.byte	118
	.byte	37
	.byte	119
	.byte	45
	.byte	120
	.byte	41
	.byte	121
	.byte	145
	.byte	128
	.byte	149
	.byte	129
	.byte	149
	.byte	130
	.byte	145
	.byte	131
	.byte	149
	.byte	132
	.byte	145
	.byte	133
	.byte	129
	.byte	128
	.byte	133
	.byte	129
	.byte	133
	.byte	130
	.byte	129
	.byte	131
	.byte	133
	.byte	132
	.byte	129
	.byte	133
	.byte	129
	.byte	134
	.byte	133
	.byte	135
	.byte	141
	.byte	136
	.byte	137
	.byte	137
	.byte	149
	.byte	144
	.byte	145
	.byte	145
	.byte	145
	.byte	146
	.byte	149
	.byte	147
	.byte	145
	.byte	148
	.byte	149
	.byte	149
	.byte	133
	.byte	144
	.byte	129
	.byte	145
	.byte	129
	.byte	146
	.byte	133
	.byte	147
	.byte	129
	.byte	148
	.byte	133
	.byte	149
	.byte	133
	.byte	150
	.byte	129
	.byte	151
	.byte	137
	.byte	152
	.byte	141
	.byte	153
	.byte	181
	.byte	160
	.byte	177
	.byte	161
	.byte	177
	.byte	162
	.byte	181
	.byte	163
	.byte	177
	.byte	164
	.byte	181
	.byte	165
	.byte	165
	.byte	160
	.byte	161
	.byte	161
	.byte	161
	.byte	162
	.byte	165
	.byte	163
	.byte	161
	.byte	164
	.byte	165
	.byte	165
	.byte	165
	.byte	166
	.byte	161
	.byte	167
	.byte	169
	.byte	168
	.byte	173
	.byte	169
	.byte	177
	.byte	176
	.byte	181
	.byte	177
	.byte	181
	.byte	178
	.byte	177
	.byte	179
	.byte	181
	.byte	180
	.byte	177
	.byte	181
	.byte	161
	.byte	176
	.byte	165
	.byte	177
	.byte	165
	.byte	178
	.byte	161
	.byte	179
	.byte	165
	.byte	180
	.byte	161
	.byte	181
	.byte	161
	.byte	182
	.byte	165
	.byte	183
	.byte	173
	.byte	184
	.byte	169
	.byte	185
	.byte	149
	.byte	192
	.byte	145
	.byte	193
	.byte	145
	.byte	194
	.byte	149
	.byte	195
	.byte	145
	.byte	196
	.byte	149
	.byte	197
	.byte	133
	.byte	192
	.byte	129
	.byte	193
	.byte	129
	.byte	194
	.byte	133
	.byte	195
	.byte	129
	.byte	196
	.byte	133
	.byte	197
	.byte	133
	.byte	198
	.byte	129
	.byte	199
	.byte	137
	.byte	200
	.byte	141
	.byte	201
	.byte	145
	.byte	208
	.byte	149
	.byte	209
	.byte	149
	.byte	210
	.byte	145
	.byte	211
	.byte	149
	.byte	212
	.byte	145
	.byte	213
	.byte	129
	.byte	208
	.byte	133
	.byte	209
	.byte	133
	.byte	210
	.byte	129
	.byte	211
	.byte	133
	.byte	212
	.byte	129
	.byte	213
	.byte	129
	.byte	214
	.byte	133
	.byte	215
	.byte	141
	.byte	216
	.byte	137
	.byte	217
	.byte	177
	.byte	224
	.byte	181
	.byte	225
	.byte	181
	.byte	226
	.byte	177
	.byte	227
	.byte	181
	.byte	228
	.byte	177
	.byte	229
	.byte	161
	.byte	224
	.byte	165
	.byte	225
	.byte	165
	.byte	226
	.byte	161
	.byte	227
	.byte	165
	.byte	228
	.byte	161
	.byte	229
	.byte	161
	.byte	230
	.byte	165
	.byte	231
	.byte	173
	.byte	232
	.byte	169
	.byte	233
	.byte	181
	.byte	240
	.byte	177
	.byte	241
	.byte	177
	.byte	242
	.byte	181
	.byte	243
	.byte	177
	.byte	244
	.byte	181
	.byte	245
	.byte	165
	.byte	240
	.byte	161
	.byte	241
	.byte	161
	.byte	242
	.byte	165
	.byte	243
	.byte	161
	.byte	244
	.byte	165
	.byte	245
	.byte	165
	.byte	246
	.byte	161
	.byte	247
	.byte	169
	.byte	248
	.byte	173
	.byte	249
	.byte	85
	.byte	0
	.byte	17
	.byte	1
	.byte	17
	.byte	2
	.byte	21
	.byte	3
	.byte	17
	.byte	4
	.byte	21
	.byte	5
	.byte	69
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	2
	.byte	5
	.byte	3
	.byte	1
	.byte	4
	.byte	5
	.byte	5
	.byte	5
	.byte	6
	.byte	1
	.byte	7
	.byte	9
	.byte	8
	.byte	13
	.byte	9
	.byte	17
	.byte	16
	.byte	21
	.byte	17
	.byte	21
	.byte	18
	.byte	17
	.byte	19
	.byte	21
	.byte	20
	.byte	17
	.byte	21
	.byte	1
	.byte	16
	.byte	5
	.byte	17
	.byte	5
	.byte	18
	.byte	1
	.byte	19
	.byte	5
	.byte	20
	.byte	1
	.byte	21
	.byte	1
	.byte	22
	.byte	5
	.byte	23
	.byte	13
	.byte	24
	.byte	9
	.byte	25
	.byte	49
	.byte	32
	.byte	53
	.byte	33
	.byte	53
	.byte	34
	.byte	49
	.byte	35
	.byte	53
	.byte	36
	.byte	49
	.byte	37
	.byte	33
	.byte	32
	.byte	37
	.byte	33
	.byte	37
	.byte	34
	.byte	33
	.byte	35
	.byte	37
	.byte	36
	.byte	33
	.byte	37
	.byte	33
	.byte	38
	.byte	37
	.byte	39
	.byte	45
	.byte	40
	.byte	41
	.byte	41
	.byte	53
	.byte	48
	.byte	49
	.byte	49
	.byte	49
	.byte	50
	.byte	53
	.byte	51
	.byte	49
	.byte	52
	.byte	53
	.byte	53
	.byte	37
	.byte	48
	.byte	33
	.byte	49
	.byte	33
	.byte	50
	.byte	37
	.byte	51
	.byte	33
	.byte	52
	.byte	37
	.byte	53
	.byte	37
	.byte	54
	.byte	33
	.byte	55
	.byte	41
	.byte	56
	.byte	45
	.byte	57
	.byte	17
	.byte	64
	.byte	21
	.byte	65
	.byte	21
	.byte	66
	.byte	17
	.byte	67
	.byte	21
	.byte	68
	.byte	17
	.byte	69
	.byte	1
	.byte	64
	.byte	5
	.byte	65
	.byte	5
	.byte	66
	.byte	1
	.byte	67
	.byte	5
	.byte	68
	.byte	1
	.byte	69
	.byte	1
	.byte	70
	.byte	5
	.byte	71
	.byte	13
	.byte	72
	.byte	9
	.byte	73
	.byte	21
	.byte	80
	.byte	17
	.byte	81
	.byte	17
	.byte	82
	.byte	21
	.byte	83
	.byte	17
	.byte	84
	.byte	21
	.byte	85
	.byte	5
	.byte	80
	.byte	1
	.byte	81
	.byte	1
	.byte	82
	.byte	5
	.byte	83
	.byte	1
	.byte	84
	.byte	5
	.byte	85
	.byte	5
	.byte	86
	.byte	1
	.byte	87
	.byte	9
	.byte	88
	.byte	13
	.byte	89
	.byte	53
	.byte	96
	.byte	49
	.byte	97
	.byte	49
	.byte	98
	.byte	53
	.byte	99
	.byte	49
	.byte	100
	.byte	53
	.byte	101
	.byte	70
	.byte	0
	.byte	2
	.byte	1
	.byte	2
	.byte	2
	.byte	6
	.byte	3
	.byte	2
	.byte	4
	.byte	6
	.byte	5
	.byte	6
	.byte	6
	.byte	2
	.byte	7
	.byte	10
	.byte	8
	.byte	14
	.byte	9
	.byte	2
	.byte	4
	.byte	6
	.byte	5
	.byte	6
	.byte	6
	.byte	2
	.byte	7
	.byte	10
	.byte	8
	.byte	14
	.byte	9
	.byte	2
	.byte	16
	.byte	6
	.byte	17
	.byte	6
	.byte	18
	.byte	2
	.byte	19
	.byte	6
	.byte	20
	.byte	2
	.byte	21
	.byte	2
	.byte	22
	.byte	6
	.byte	23
	.byte	14
	.byte	24
	.byte	10
	.byte	25
	.byte	6
	.byte	20
	.byte	2
	.byte	21
	.byte	2
	.byte	22
	.byte	6
	.byte	23
	.byte	14
	.byte	24
	.byte	10
	.byte	25
	.byte	34
	.byte	32
	.byte	38
	.byte	33
	.byte	38
	.byte	34
	.byte	34
	.byte	35
	.byte	38
	.byte	36
	.byte	34
	.byte	37
	.byte	34
	.byte	38
	.byte	38
	.byte	39
	.byte	46
	.byte	40
	.byte	42
	.byte	41
	.byte	38
	.byte	36
	.byte	34
	.byte	37
	.byte	34
	.byte	38
	.byte	38
	.byte	39
	.byte	46
	.byte	40
	.byte	42
	.byte	41
	.byte	38
	.byte	48
	.byte	34
	.byte	49
	.byte	34
	.byte	50
	.byte	38
	.byte	51
	.byte	34
	.byte	52
	.byte	38
	.byte	53
	.byte	38
	.byte	54
	.byte	34
	.byte	55
	.byte	42
	.byte	56
	.byte	46
	.byte	57
	.byte	34
	.byte	52
	.byte	38
	.byte	53
	.byte	38
	.byte	54
	.byte	34
	.byte	55
	.byte	42
	.byte	56
	.byte	46
	.byte	57
	.byte	2
	.byte	64
	.byte	6
	.byte	65
	.byte	6
	.byte	66
	.byte	2
	.byte	67
	.byte	6
	.byte	68
	.byte	2
	.byte	69
	.byte	2
	.byte	70
	.byte	6
	.byte	71
	.byte	14
	.byte	72
	.byte	10
	.byte	73
	.byte	6
	.byte	68
	.byte	2
	.byte	69
	.byte	2
	.byte	70
	.byte	6
	.byte	71
	.byte	14
	.byte	72
	.byte	10
	.byte	73
	.byte	6
	.byte	80
	.byte	2
	.byte	81
	.byte	2
	.byte	82
	.byte	6
	.byte	83
	.byte	2
	.byte	84
	.byte	6
	.byte	85
	.byte	6
	.byte	86
	.byte	2
	.byte	87
	.byte	10
	.byte	88
	.byte	14
	.byte	89
	.byte	2
	.byte	84
	.byte	6
	.byte	85
	.byte	6
	.byte	86
	.byte	2
	.byte	87
	.byte	10
	.byte	88
	.byte	14
	.byte	89
	.byte	38
	.byte	96
	.byte	34
	.byte	97
	.byte	34
	.byte	98
	.byte	38
	.byte	99
	.byte	34
	.byte	100
	.byte	38
	.byte	101
	.byte	38
	.byte	102
	.byte	34
	.byte	103
	.byte	42
	.byte	104
	.byte	46
	.byte	105
	.byte	34
	.byte	100
	.byte	38
	.byte	101
	.byte	38
	.byte	102
	.byte	34
	.byte	103
	.byte	42
	.byte	104
	.byte	46
	.byte	105
	.byte	34
	.byte	112
	.byte	38
	.byte	113
	.byte	38
	.byte	114
	.byte	34
	.byte	115
	.byte	38
	.byte	116
	.byte	34
	.byte	117
	.byte	34
	.byte	118
	.byte	38
	.byte	119
	.byte	46
	.byte	120
	.byte	42
	.byte	121
	.byte	38
	.byte	116
	.byte	34
	.byte	117
	.byte	34
	.byte	118
	.byte	38
	.byte	119
	.byte	46
	.byte	120
	.byte	42
	.byte	121
	.byte	130
	.byte	128
	.byte	134
	.byte	129
	.byte	134
	.byte	130
	.byte	130
	.byte	131
	.byte	134
	.byte	132
	.byte	130
	.byte	133
	.byte	130
	.byte	134
	.byte	134
	.byte	135
	.byte	142
	.byte	136
	.byte	138
	.byte	137
	.byte	134
	.byte	132
	.byte	130
	.byte	133
	.byte	130
	.byte	134
	.byte	134
	.byte	135
	.byte	142
	.byte	136
	.byte	138
	.byte	137
	.byte	134
	.byte	144
	.byte	130
	.byte	145
	.byte	130
	.byte	146
	.byte	134
	.byte	147
	.byte	130
	.byte	148
	.byte	134
	.byte	149
	.byte	134
	.byte	150
	.byte	130
	.byte	151
	.byte	138
	.byte	152
	.byte	142
	.byte	153
	.byte	35
	.byte	52
	.byte	39
	.byte	53
	.byte	39
	.byte	54
	.byte	35
	.byte	55
	.byte	43
	.byte	56
	.byte	47
	.byte	57
	.byte	3
	.byte	64
	.byte	7
	.byte	65
	.byte	7
	.byte	66
	.byte	3
	.byte	67
	.byte	7
	.byte	68
	.byte	3
	.byte	69
	.byte	3
	.byte	70
	.byte	7
	.byte	71
	.byte	15
	.byte	72
	.byte	11
	.byte	73
	.byte	7
	.byte	68
	.byte	3
	.byte	69
	.byte	3
	.byte	70
	.byte	7
	.byte	71
	.byte	15
	.byte	72
	.byte	11
	.byte	73
	.byte	7
	.byte	80
	.byte	3
	.byte	81
	.byte	3
	.byte	82
	.byte	7
	.byte	83
	.byte	3
	.byte	84
	.byte	7
	.byte	85
	.byte	7
	.byte	86
	.byte	3
	.byte	87
	.byte	11
	.byte	88
	.byte	15
	.byte	89
	.byte	3
	.byte	84
	.byte	7
	.byte	85
	.byte	7
	.byte	86
	.byte	3
	.byte	87
	.byte	11
	.byte	88
	.byte	15
	.byte	89
	.byte	39
	.byte	96
	.byte	35
	.byte	97
	.byte	35
	.byte	98
	.byte	39
	.byte	99
	.byte	35
	.byte	100
	.byte	39
	.byte	101
	.byte	39
	.byte	102
	.byte	35
	.byte	103
	.byte	43
	.byte	104
	.byte	47
	.byte	105
	.byte	35
	.byte	100
	.byte	39
	.byte	101
	.byte	39
	.byte	102
	.byte	35
	.byte	103
	.byte	43
	.byte	104
	.byte	47
	.byte	105
	.byte	35
	.byte	112
	.byte	39
	.byte	113
	.byte	39
	.byte	114
	.byte	35
	.byte	115
	.byte	39
	.byte	116
	.byte	35
	.byte	117
	.byte	35
	.byte	118
	.byte	39
	.byte	119
	.byte	47
	.byte	120
	.byte	43
	.byte	121
	.byte	39
	.byte	116
	.byte	35
	.byte	117
	.byte	35
	.byte	118
	.byte	39
	.byte	119
	.byte	47
	.byte	120
	.byte	43
	.byte	121
	.byte	131
	.byte	128
	.byte	135
	.byte	129
	.byte	135
	.byte	130
	.byte	131
	.byte	131
	.byte	135
	.byte	132
	.byte	131
	.byte	133
	.byte	131
	.byte	134
	.byte	135
	.byte	135
	.byte	143
	.byte	136
	.byte	139
	.byte	137
	.byte	135
	.byte	132
	.byte	131
	.byte	133
	.byte	131
	.byte	134
	.byte	135
	.byte	135
	.byte	143
	.byte	136
	.byte	139
	.byte	137
	.byte	135
	.byte	144
	.byte	131
	.byte	145
	.byte	131
	.byte	146
	.byte	135
	.byte	147
	.byte	131
	.byte	148
	.byte	135
	.byte	149
	.byte	135
	.byte	150
	.byte	131
	.byte	151
	.byte	139
	.byte	152
	.byte	143
	.byte	153
	.byte	131
	.byte	148
	.byte	135
	.byte	149
	.byte	135
	.byte	150
	.byte	131
	.byte	151
	.byte	139
	.byte	152
	.byte	143
	.byte	153
	.byte	167
	.byte	160
	.byte	163
	.byte	161
	.byte	163
	.byte	162
	.byte	167
	.byte	163
	.byte	163
	.byte	164
	.byte	167
	.byte	165
	.byte	167
	.byte	166
	.byte	163
	.byte	167
	.byte	171
	.byte	168
	.byte	175
	.byte	169
	.byte	163
	.byte	164
	.byte	167
	.byte	165
	.byte	167
	.byte	166
	.byte	163
	.byte	167
	.byte	171
	.byte	168
	.byte	175
	.byte	169
	.byte	163
	.byte	176
	.byte	167
	.byte	177
	.byte	167
	.byte	178
	.byte	163
	.byte	179
	.byte	167
	.byte	180
	.byte	163
	.byte	181
	.byte	163
	.byte	182
	.byte	167
	.byte	183
	.byte	175
	.byte	184
	.byte	171
	.byte	185
	.byte	167
	.byte	180
	.byte	163
	.byte	181
	.byte	163
	.byte	182
	.byte	167
	.byte	183
	.byte	175
	.byte	184
	.byte	171
	.byte	185
	.byte	135
	.byte	192
	.byte	131
	.byte	193
	.byte	131
	.byte	194
	.byte	135
	.byte	195
	.byte	131
	.byte	196
	.byte	135
	.byte	197
	.byte	135
	.byte	198
	.byte	131
	.byte	199
	.byte	139
	.byte	200
	.byte	143
	.byte	201
	.byte	131
	.byte	196
	.byte	135
	.byte	197
	.byte	135
	.byte	198
	.byte	131
	.byte	199
	.byte	139
	.byte	200
	.byte	143
	.byte	201
	.byte	131
	.byte	208
	.byte	135
	.byte	209
	.byte	135
	.byte	210
	.byte	131
	.byte	211
	.byte	135
	.byte	212
	.byte	131
	.byte	213
	.byte	131
	.byte	214
	.byte	135
	.byte	215
	.byte	143
	.byte	216
	.byte	139
	.byte	217
	.byte	135
	.byte	212
	.byte	131
	.byte	213
	.byte	131
	.byte	214
	.byte	135
	.byte	215
	.byte	143
	.byte	216
	.byte	139
	.byte	217
	.byte	163
	.byte	224
	.byte	167
	.byte	225
	.byte	167
	.byte	226
	.byte	163
	.byte	227
	.byte	167
	.byte	228
	.byte	163
	.byte	229
	.byte	163
	.byte	230
	.byte	167
	.byte	231
	.byte	175
	.byte	232
	.byte	171
	.byte	233
	.byte	167
	.byte	228
	.byte	163
	.byte	229
	.byte	163
	.byte	230
	.byte	167
	.byte	231
	.byte	175
	.byte	232
	.byte	171
	.byte	233
	.byte	167
	.byte	240
	.byte	163
	.byte	241
	.byte	163
	.byte	242
	.byte	167
	.byte	243
	.byte	163
	.byte	244
	.byte	167
	.byte	245
	.byte	167
	.byte	246
	.byte	163
	.byte	247
	.byte	171
	.byte	248
	.byte	175
	.byte	249
	.byte	163
	.byte	244
	.byte	167
	.byte	245
	.byte	167
	.byte	246
	.byte	163
	.byte	247
	.byte	171
	.byte	248
	.byte	175
	.byte	249
	.byte	71
	.byte	0
	.byte	3
	.byte	1
	.byte	3
	.byte	2
	.byte	7
	.byte	3
	.byte	3
	.byte	4
	.byte	7
	.byte	5
	.byte	7
	.byte	6
	.byte	3
	.byte	7
	.byte	11
	.byte	8
	.byte	15
	.byte	9
	.byte	3
	.byte	4
	.byte	7
	.byte	5
	.byte	7
	.byte	6
	.byte	3
	.byte	7
	.byte	11
	.byte	8
	.byte	15
	.byte	9
	.byte	3
	.byte	16
	.byte	7
	.byte	17
	.byte	7
	.byte	18
	.byte	3
	.byte	19
	.byte	7
	.byte	20
	.byte	3
	.byte	21
	.byte	3
	.byte	22
	.byte	7
	.byte	23
	.byte	15
	.byte	24
	.byte	11
	.byte	25
	.byte	7
	.byte	20
	.byte	3
	.byte	21
	.byte	3
	.byte	22
	.byte	7
	.byte	23
	.byte	15
	.byte	24
	.byte	11
	.byte	25
	.byte	35
	.byte	32
	.byte	39
	.byte	33
	.byte	39
	.byte	34
	.byte	35
	.byte	35
	.byte	39
	.byte	36
	.byte	35
	.byte	37
	.byte	35
	.byte	38
	.byte	39
	.byte	39
	.byte	47
	.byte	40
	.byte	43
	.byte	41
	.byte	39
	.byte	36
	.byte	35
	.byte	37
	.byte	35
	.byte	38
	.byte	39
	.byte	39
	.byte	47
	.byte	40
	.byte	43
	.byte	41
	.byte	39
	.byte	48
	.byte	35
	.byte	49
	.byte	35
	.byte	50
	.byte	39
	.byte	51
	.byte	35
	.byte	52
	.byte	39
	.byte	53
	.byte	39
	.byte	54
	.byte	35
	.byte	55
	.byte	43
	.byte	56
	.byte	47
	.byte	57
	.byte	35
	.byte	52
	.byte	39
	.byte	53
	.byte	39
	.byte	54
	.byte	35
	.byte	55
	.byte	43
	.byte	56
	.byte	47
	.byte	57
	.byte	3
	.byte	64
	.byte	7
	.byte	65
	.byte	7
	.byte	66
	.byte	3
	.byte	67
	.byte	7
	.byte	68
	.byte	3
	.byte	69
	.byte	3
	.byte	70
	.byte	7
	.byte	71
	.byte	15
	.byte	72
	.byte	11
	.byte	73
	.byte	7
	.byte	68
	.byte	3
	.byte	69
	.byte	3
	.byte	70
	.byte	7
	.byte	71
	.byte	15
	.byte	72
	.byte	11
	.byte	73
	.byte	7
	.byte	80
	.byte	3
	.byte	81
	.byte	3
	.byte	82
	.byte	7
	.byte	83
	.byte	3
	.byte	84
	.byte	7
	.byte	85
	.byte	7
	.byte	86
	.byte	3
	.byte	87
	.byte	11
	.byte	88
	.byte	15
	.byte	89
	.byte	3
	.byte	84
	.byte	7
	.byte	85
	.byte	7
	.byte	86
	.byte	3
	.byte	87
	.byte	11
	.byte	88
	.byte	15
	.byte	89
	.byte	39
	.byte	96
	.byte	35
	.byte	97
	.byte	35
	.byte	98
	.byte	39
	.byte	99
	.byte	35
	.byte	100
	.byte	39
	.byte	101
	.byte	39
	.byte	102
	.byte	35
	.byte	103
	.byte	43
	.byte	104
	.byte	47
	.byte	105
	.byte	35
	.byte	100
	.byte	39
	.byte	101
	.byte	39
	.byte	102
	.byte	35
	.byte	103
	.byte	43
	.byte	104
	.byte	47
	.byte	105
	.byte	35
	.byte	112
	.byte	39
	.byte	113
	.byte	39
	.byte	114
	.byte	35
	.byte	115
	.byte	39
	.byte	116
	.byte	35
	.byte	117
	.byte	35
	.byte	118
	.byte	39
	.byte	119
	.byte	47
	.byte	120
	.byte	43
	.byte	121
	.byte	39
	.byte	116
	.byte	35
	.byte	117
	.byte	35
	.byte	118
	.byte	39
	.byte	119
	.byte	47
	.byte	120
	.byte	43
	.byte	121
	.byte	131
	.byte	128
	.byte	135
	.byte	129
	.byte	135
	.byte	130
	.byte	131
	.byte	131
	.byte	135
	.byte	132
	.byte	131
	.byte	133
	.byte	131
	.byte	134
	.byte	135
	.byte	135
	.byte	143
	.byte	136
	.byte	139
	.byte	137
	.byte	135
	.byte	132
	.byte	131
	.byte	133
	.byte	131
	.byte	134
	.byte	135
	.byte	135
	.byte	143
	.byte	136
	.byte	139
	.byte	137
	.byte	135
	.byte	144
	.byte	131
	.byte	145
	.byte	131
	.byte	146
	.byte	135
	.byte	147
	.byte	131
	.byte	148
	.byte	135
	.byte	149
	.byte	135
	.byte	150
	.byte	131
	.byte	151
	.byte	139
	.byte	152
	.byte	143
	.byte	153
	.byte	131
	.byte	148
	.byte	135
	.byte	149
	.byte	135
	.byte	150
	.byte	131
	.byte	151
	.byte	139
	.byte	152
	.byte	143
	.byte	153
	.byte	4
	.byte	6
	.byte	0
	.byte	7
	.byte	8
	.byte	8
	.byte	12
	.byte	9
	.byte	12
	.byte	10
	.byte	8
	.byte	11
	.byte	12
	.byte	12
	.byte	8
	.byte	13
	.byte	8
	.byte	14
	.byte	12
	.byte	15
	.byte	16
	.byte	16
	.byte	20
	.byte	17
	.byte	20
	.byte	18
	.byte	16
	.byte	19
	.byte	20
	.byte	20
	.byte	16
	.byte	21
	.byte	0
	.byte	22
	.byte	4
	.byte	23
	.byte	12
	.byte	24
	.byte	8
	.byte	25
	.byte	8
	.byte	26
	.byte	12
	.byte	27
	.byte	8
	.byte	28
	.byte	12
	.byte	29
	.byte	12
	.byte	30
	.byte	8
	.byte	31
	.byte	48
	.byte	32
	.byte	52
	.byte	33
	.byte	52
	.byte	34
	.byte	48
	.byte	35
	.byte	52
	.byte	36
	.byte	48
	.byte	37
	.byte	32
	.byte	38
	.byte	36
	.byte	39
	.byte	44
	.byte	40
	.byte	40
	.byte	41
	.byte	40
	.byte	42
	.byte	44
	.byte	43
	.byte	40
	.byte	44
	.byte	44
	.byte	45
	.byte	44
	.byte	46
	.byte	40
	.byte	47
	.byte	52
	.byte	48
	.byte	48
	.byte	49
	.byte	48
	.byte	50
	.byte	52
	.byte	51
	.byte	48
	.byte	52
	.byte	52
	.byte	53
	.byte	36
	.byte	54
	.byte	32
	.byte	55
	.byte	40
	.byte	56
	.byte	44
	.byte	57
	.byte	44
	.byte	58
	.byte	40
	.byte	59
	.byte	44
	.byte	60
	.byte	40
	.byte	61
	.byte	40
	.byte	62
	.byte	44
	.byte	63
	.byte	16
	.byte	64
	.byte	20
	.byte	65
	.byte	20
	.byte	66
	.byte	16
	.byte	67
	.byte	20
	.byte	68
	.byte	16
	.byte	69
	.byte	0
	.byte	70
	.byte	4
	.byte	71
	.byte	12
	.byte	72
	.byte	8
	.byte	73
	.byte	8
	.byte	74
	.byte	12
	.byte	75
	.byte	8
	.byte	76
	.byte	12
	.byte	77
	.byte	12
	.byte	78
	.byte	8
	.byte	79
	.byte	20
	.byte	80
	.byte	16
	.byte	81
	.byte	16
	.byte	82
	.byte	20
	.byte	83
	.byte	16
	.byte	84
	.byte	20
	.byte	85
	.byte	4
	.byte	86
	.byte	0
	.byte	87
	.byte	8
	.byte	88
	.byte	12
	.byte	89
	.byte	12
	.byte	90
	.byte	8
	.byte	91
	.byte	12
	.byte	92
	.byte	8
	.byte	93
	.byte	8
	.byte	94
	.byte	12
	.byte	95
	.byte	52
	.byte	96
	.byte	48
	.byte	97
	.byte	48
	.byte	98
	.byte	52
	.byte	99
	.byte	48
	.byte	100
	.byte	52
	.byte	101
	.byte	36
	.byte	102
	.byte	32
	.byte	103
	.byte	40
	.byte	104
	.byte	44
	.byte	105
	.byte	44
	.byte	106
	.byte	40
	.byte	107
	.byte	44
	.byte	108
	.byte	40
	.byte	109
	.byte	40
	.byte	110
	.byte	44
	.byte	111
	.byte	48
	.byte	112
	.byte	52
	.byte	113
	.byte	52
	.byte	114
	.byte	48
	.byte	115
	.byte	52
	.byte	116
	.byte	48
	.byte	117
	.byte	32
	.byte	118
	.byte	36
	.byte	119
	.byte	44
	.byte	120
	.byte	40
	.byte	121
	.byte	40
	.byte	122
	.byte	44
	.byte	123
	.byte	40
	.byte	124
	.byte	44
	.byte	125
	.byte	44
	.byte	126
	.byte	40
	.byte	127
	.byte	144
	.byte	128
	.byte	148
	.byte	129
	.byte	148
	.byte	130
	.byte	144
	.byte	131
	.byte	148
	.byte	132
	.byte	144
	.byte	133
	.byte	128
	.byte	134
	.byte	132
	.byte	135
	.byte	140
	.byte	136
	.byte	136
	.byte	137
	.byte	136
	.byte	138
	.byte	140
	.byte	139
	.byte	136
	.byte	140
	.byte	140
	.byte	141
	.byte	140
	.byte	142
	.byte	136
	.byte	143
	.byte	148
	.byte	144
	.byte	144
	.byte	145
	.byte	144
	.byte	146
	.byte	148
	.byte	147
	.byte	144
	.byte	148
	.byte	148
	.byte	149
	.byte	132
	.byte	150
	.byte	128
	.byte	151
	.byte	136
	.byte	152
	.byte	140
	.byte	153
	.byte	140
	.byte	154
	.byte	136
	.byte	155
	.byte	140
	.byte	156
	.byte	136
	.byte	157
	.byte	136
	.byte	158
	.byte	140
	.byte	159
	.byte	85
	.byte	0
	.byte	17
	.byte	1
	.byte	17
	.byte	2
	.byte	21
	.byte	3
	.byte	17
	.byte	4
	.byte	21
	.byte	5
	.byte	5
	.byte	6
	.byte	1
	.byte	7
	.byte	9
	.byte	8
	.byte	13
	.byte	9
	.byte	13
	.byte	10
	.byte	9
	.byte	11
	.byte	13
	.byte	12
	.byte	9
	.byte	13
	.byte	9
	.byte	14
	.byte	13
	.byte	15
	.byte	17
	.byte	16
	.byte	21
	.byte	17
	.byte	21
	.byte	18
	.byte	17
	.byte	19
	.byte	21
	.byte	20
	.byte	17
	.byte	21
	.byte	1
	.byte	22
	.byte	5
	.byte	23
	.byte	13
	.byte	24
	.byte	9
	.byte	25
	.byte	9
	.byte	26
	.byte	13
	.byte	27
	.byte	9
	.byte	28
	.byte	13
	.byte	29
	.byte	13
	.byte	30
	.byte	9
	.byte	31
	.byte	49
	.byte	32
	.byte	53
	.byte	33
	.byte	53
	.byte	34
	.byte	49
	.byte	35
	.byte	53
	.byte	36
	.byte	49
	.byte	37
	.byte	33
	.byte	38
	.byte	37
	.byte	39
	.byte	45
	.byte	40
	.byte	41
	.byte	41
	.byte	41
	.byte	42
	.byte	45
	.byte	43
	.byte	41
	.byte	44
	.byte	45
	.byte	45
	.byte	45
	.byte	46
	.byte	41
	.byte	47
	.byte	53
	.byte	48
	.byte	49
	.byte	49
	.byte	49
	.byte	50
	.byte	53
	.byte	51
	.byte	49
	.byte	52
	.byte	53
	.byte	53
	.byte	37
	.byte	54
	.byte	33
	.byte	55
	.byte	41
	.byte	56
	.byte	45
	.byte	57
	.byte	45
	.byte	58
	.byte	41
	.byte	59
	.byte	45
	.byte	60
	.byte	41
	.byte	61
	.byte	41
	.byte	62
	.byte	45
	.byte	63
	.byte	17
	.byte	64
	.byte	21
	.byte	65
	.byte	21
	.byte	66
	.byte	17
	.byte	67
	.byte	21
	.byte	68
	.byte	17
	.byte	69
	.byte	1
	.byte	70
	.byte	5
	.byte	71
	.byte	13
	.byte	72
	.byte	9
	.byte	73
	.byte	9
	.byte	74
	.byte	13
	.byte	75
	.byte	9
	.byte	76
	.byte	13
	.byte	77
	.byte	13
	.byte	78
	.byte	9
	.byte	79
	.byte	21
	.byte	80
	.byte	17
	.byte	81
	.byte	17
	.byte	82
	.byte	21
	.byte	83
	.byte	17
	.byte	84
	.byte	21
	.byte	85
	.byte	5
	.byte	86
	.byte	1
	.byte	87
	.byte	9
	.byte	88
	.byte	13
	.byte	89
	.byte	13
	.byte	90
	.byte	9
	.byte	91
	.byte	13
	.byte	92
	.byte	9
	.byte	93
	.byte	9
	.byte	94
	.byte	13
	.byte	95
	.byte	53
	.byte	96
	.byte	49
	.byte	97
	.byte	49
	.byte	98
	.byte	53
	.byte	99
	.byte	49
	.byte	100
	.byte	53
	.byte	101
	.byte	37
	.byte	102
	.byte	33
	.byte	103
	.byte	41
	.byte	104
	.byte	45
	.byte	105
	.byte	45
	.byte	106
	.byte	41
	.byte	107
	.byte	45
	.byte	108
	.byte	41
	.byte	109
	.byte	41
	.byte	110
	.byte	45
	.byte	111
	.byte	49
	.byte	112
	.byte	53
	.byte	113
	.byte	53
	.byte	114
	.byte	49
	.byte	115
	.byte	53
	.byte	116
	.byte	49
	.byte	117
	.byte	33
	.byte	118
	.byte	37
	.byte	119
	.byte	45
	.byte	120
	.byte	41
	.byte	121
	.byte	41
	.byte	122
	.byte	45
	.byte	123
	.byte	41
	.byte	124
	.byte	45
	.byte	125
	.byte	45
	.byte	126
	.byte	41
	.byte	127
	.byte	145
	.byte	128
	.byte	149
	.byte	129
	.byte	149
	.byte	130
	.byte	145
	.byte	131
	.byte	149
	.byte	132
	.byte	145
	.byte	133
	.byte	129
	.byte	134
	.byte	133
	.byte	135
	.byte	141
	.byte	136
	.byte	137
	.byte	137
	.byte	137
	.byte	138
	.byte	141
	.byte	139
	.byte	137
	.byte	140
	.byte	141
	.byte	141
	.byte	141
	.byte	142
	.byte	137
	.byte	143
	.byte	149
	.byte	144
	.byte	145
	.byte	145
	.byte	145
	.byte	146
	.byte	149
	.byte	147
	.byte	145
	.byte	148
	.byte	149
	.byte	149
	.byte	133
	.byte	150
	.byte	129
	.byte	151
	.byte	137
	.byte	152
	.byte	141
	.byte	153
	.byte	141
	.byte	154
	.byte	137
	.byte	155
	.byte	141
	.byte	156
	.byte	137
	.byte	157
	.byte	137
	.byte	158
	.byte	141
	.byte	159
	.byte	181
	.byte	160
	.byte	177
	.byte	161
	.byte	177
	.byte	162
	.byte	181
	.byte	163
	.byte	177
	.byte	164
	.byte	181
	.byte	165
	.byte	165
	.byte	166
	.byte	161
	.byte	167
	.byte	169
	.byte	168
	.byte	173
	.byte	169
	.byte	173
	.byte	170
	.byte	169
	.byte	171
	.byte	173
	.byte	172
	.byte	169
	.byte	173
	.byte	169
	.byte	174
	.byte	173
	.byte	175
	.byte	177
	.byte	176
	.byte	181
	.byte	177
	.byte	181
	.byte	178
	.byte	177
	.byte	179
	.byte	181
	.byte	180
	.byte	177
	.byte	181
	.byte	161
	.byte	182
	.byte	165
	.byte	183
	.byte	173
	.byte	184
	.byte	169
	.byte	185
	.byte	169
	.byte	186
	.byte	173
	.byte	187
	.byte	169
	.byte	188
	.byte	173
	.byte	189
	.byte	173
	.byte	190
	.byte	169
	.byte	191
	.byte	149
	.byte	192
	.byte	145
	.byte	193
	.byte	145
	.byte	194
	.byte	149
	.byte	195
	.byte	145
	.byte	196
	.byte	149
	.byte	197
	.byte	133
	.byte	198
	.byte	129
	.byte	199
	.byte	137
	.byte	200
	.byte	141
	.byte	201
	.byte	141
	.byte	202
	.byte	137
	.byte	203
	.byte	141
	.byte	204
	.byte	137
	.byte	205
	.byte	137
	.byte	206
	.byte	141
	.byte	207
	.byte	145
	.byte	208
	.byte	149
	.byte	209
	.byte	149
	.byte	210
	.byte	145
	.byte	211
	.byte	149
	.byte	212
	.byte	145
	.byte	213
	.byte	129
	.byte	214
	.byte	133
	.byte	215
	.byte	141
	.byte	216
	.byte	137
	.byte	217
	.byte	137
	.byte	218
	.byte	141
	.byte	219
	.byte	137
	.byte	220
	.byte	141
	.byte	221
	.byte	141
	.byte	222
	.byte	137
	.byte	223
	.byte	177
	.byte	224
	.byte	181
	.byte	225
	.byte	181
	.byte	226
	.byte	177
	.byte	227
	.byte	181
	.byte	228
	.byte	177
	.byte	229
	.byte	161
	.byte	230
	.byte	165
	.byte	231
	.byte	173
	.byte	232
	.byte	169
	.byte	233
	.byte	169
	.byte	234
	.byte	173
	.byte	235
	.byte	169
	.byte	236
	.byte	173
	.byte	237
	.byte	173
	.byte	238
	.byte	169
	.byte	239
	.byte	181
	.byte	240
	.byte	177
	.byte	241
	.byte	177
	.byte	242
	.byte	181
	.byte	243
	.byte	177
	.byte	244
	.byte	181
	.byte	245
	.byte	165
	.byte	246
	.byte	161
	.byte	247
	.byte	169
	.byte	248
	.byte	173
	.byte	249
	.byte	173
	.byte	250
	.byte	169
	.byte	251
	.byte	173
	.byte	252
	.byte	169
	.byte	253
	.byte	169
	.byte	254
	.byte	173
	.byte	255
	.byte	85
	.byte	0
	.byte	17
	.byte	1
	.byte	17
	.byte	2
	.byte	21
	.byte	3
	.byte	17
	.byte	4
	.byte	21
	.byte	5
	.byte	5
	.byte	6
	.byte	1
	.byte	7
	.byte	9
	.byte	8
	.byte	13
	.byte	9
	.byte	13
	.byte	10
	.byte	9
	.byte	11
	.byte	13
	.byte	12
	.byte	9
	.byte	13
	.byte	9
	.byte	14
	.byte	13
	.byte	15
	.byte	17
	.byte	16
	.byte	21
	.byte	17
	.byte	21
	.byte	18
	.byte	17
	.byte	19
	.byte	21
	.byte	20
	.byte	17
	.byte	21
	.byte	1
	.byte	22
	.byte	5
	.byte	23
	.byte	13
	.byte	24
	.byte	9
	.byte	25
	.byte	9
	.byte	26
	.byte	13
	.byte	27
	.byte	9
	.byte	28
	.byte	13
	.byte	29
	.byte	13
	.byte	30
	.byte	9
	.byte	31
	.byte	49
	.byte	32
	.byte	53
	.byte	33
	.byte	53
	.byte	34
	.byte	49
	.byte	35
	.byte	53
	.byte	36
	.byte	49
	.byte	37
	.byte	33
	.byte	38
	.byte	37
	.byte	39
	.byte	45
	.byte	40
	.byte	41
	.byte	41
	.byte	41
	.byte	42
	.byte	45
	.byte	43
	.byte	41
	.byte	44
	.byte	45
	.byte	45
	.byte	45
	.byte	46
	.byte	41
	.byte	47
	.byte	53
	.byte	48
	.byte	49
	.byte	49
	.byte	49
	.byte	50
	.byte	53
	.byte	51
	.byte	49
	.byte	52
	.byte	53
	.byte	53
	.byte	37
	.byte	54
	.byte	33
	.byte	55
	.byte	41
	.byte	56
	.byte	45
	.byte	57
	.byte	45
	.byte	58
	.byte	41
	.byte	59
	.byte	45
	.byte	60
	.byte	41
	.byte	61
	.byte	41
	.byte	62
	.byte	45
	.byte	63
	.byte	17
	.byte	64
	.byte	21
	.byte	65
	.byte	21
	.byte	66
	.byte	17
	.byte	67
	.byte	21
	.byte	68
	.byte	17
	.byte	69
	.byte	1
	.byte	70
	.byte	5
	.byte	71
	.byte	13
	.byte	72
	.byte	9
	.byte	73
	.byte	9
	.byte	74
	.byte	13
	.byte	75
	.byte	9
	.byte	76
	.byte	13
	.byte	77
	.byte	13
	.byte	78
	.byte	9
	.byte	79
	.byte	21
	.byte	80
	.byte	17
	.byte	81
	.byte	17
	.byte	82
	.byte	21
	.byte	83
	.byte	17
	.byte	84
	.byte	21
	.byte	85
	.byte	5
	.byte	86
	.byte	1
	.byte	87
	.byte	9
	.byte	88
	.byte	13
	.byte	89
	.byte	13
	.byte	90
	.byte	9
	.byte	91
	.byte	13
	.byte	92
	.byte	9
	.byte	93
	.byte	9
	.byte	94
	.byte	13
	.byte	95
	.byte	53
	.byte	96
	.byte	49
	.byte	97
	.byte	49
	.byte	98
	.byte	53
	.byte	99
	.byte	49
	.byte	100
	.byte	53
	.byte	101
	.byte	190
	.byte	250
	.byte	186
	.byte	251
	.byte	190
	.byte	252
	.byte	186
	.byte	253
	.byte	186
	.byte	254
	.byte	190
	.byte	255
	.byte	70
	.byte	0
	.byte	2
	.byte	1
	.byte	2
	.byte	2
	.byte	6
	.byte	3
	.byte	2
	.byte	4
	.byte	6
	.byte	5
	.byte	6
	.byte	6
	.byte	2
	.byte	7
	.byte	10
	.byte	8
	.byte	14
	.byte	9
	.byte	30
	.byte	10
	.byte	26
	.byte	11
	.byte	30
	.byte	12
	.byte	26
	.byte	13
	.byte	26
	.byte	14
	.byte	30
	.byte	15
	.byte	2
	.byte	16
	.byte	6
	.byte	17
	.byte	6
	.byte	18
	.byte	2
	.byte	19
	.byte	6
	.byte	20
	.byte	2
	.byte	21
	.byte	2
	.byte	22
	.byte	6
	.byte	23
	.byte	14
	.byte	24
	.byte	10
	.byte	25
	.byte	26
	.byte	26
	.byte	30
	.byte	27
	.byte	26
	.byte	28
	.byte	30
	.byte	29
	.byte	30
	.byte	30
	.byte	26
	.byte	31
	.byte	34
	.byte	32
	.byte	38
	.byte	33
	.byte	38
	.byte	34
	.byte	34
	.byte	35
	.byte	38
	.byte	36
	.byte	34
	.byte	37
	.byte	34
	.byte	38
	.byte	38
	.byte	39
	.byte	46
	.byte	40
	.byte	42
	.byte	41
	.byte	58
	.byte	42
	.byte	62
	.byte	43
	.byte	58
	.byte	44
	.byte	62
	.byte	45
	.byte	62
	.byte	46
	.byte	58
	.byte	47
	.byte	38
	.byte	48
	.byte	34
	.byte	49
	.byte	34
	.byte	50
	.byte	38
	.byte	51
	.byte	34
	.byte	52
	.byte	38
	.byte	53
	.byte	38
	.byte	54
	.byte	34
	.byte	55
	.byte	42
	.byte	56
	.byte	46
	.byte	57
	.byte	62
	.byte	58
	.byte	58
	.byte	59
	.byte	62
	.byte	60
	.byte	58
	.byte	61
	.byte	58
	.byte	62
	.byte	62
	.byte	63
	.byte	2
	.byte	64
	.byte	6
	.byte	65
	.byte	6
	.byte	66
	.byte	2
	.byte	67
	.byte	6
	.byte	68
	.byte	2
	.byte	69
	.byte	2
	.byte	70
	.byte	6
	.byte	71
	.byte	14
	.byte	72
	.byte	10
	.byte	73
	.byte	26
	.byte	74
	.byte	30
	.byte	75
	.byte	26
	.byte	76
	.byte	30
	.byte	77
	.byte	30
	.byte	78
	.byte	26
	.byte	79
	.byte	6
	.byte	80
	.byte	2
	.byte	81
	.byte	2
	.byte	82
	.byte	6
	.byte	83
	.byte	2
	.byte	84
	.byte	6
	.byte	85
	.byte	6
	.byte	86
	.byte	2
	.byte	87
	.byte	10
	.byte	88
	.byte	14
	.byte	89
	.byte	30
	.byte	90
	.byte	26
	.byte	91
	.byte	30
	.byte	92
	.byte	26
	.byte	93
	.byte	26
	.byte	94
	.byte	30
	.byte	95
	.byte	38
	.byte	96
	.byte	34
	.byte	97
	.byte	34
	.byte	98
	.byte	38
	.byte	99
	.byte	34
	.byte	100
	.byte	38
	.byte	101
	.byte	38
	.byte	102
	.byte	34
	.byte	103
	.byte	42
	.byte	104
	.byte	46
	.byte	105
	.byte	62
	.byte	106
	.byte	58
	.byte	107
	.byte	62
	.byte	108
	.byte	58
	.byte	109
	.byte	58
	.byte	110
	.byte	62
	.byte	111
	.byte	34
	.byte	112
	.byte	38
	.byte	113
	.byte	38
	.byte	114
	.byte	34
	.byte	115
	.byte	38
	.byte	116
	.byte	34
	.byte	117
	.byte	34
	.byte	118
	.byte	38
	.byte	119
	.byte	46
	.byte	120
	.byte	42
	.byte	121
	.byte	58
	.byte	122
	.byte	62
	.byte	123
	.byte	58
	.byte	124
	.byte	62
	.byte	125
	.byte	62
	.byte	126
	.byte	58
	.byte	127
	.byte	130
	.byte	128
	.byte	134
	.byte	129
	.byte	134
	.byte	130
	.byte	130
	.byte	131
	.byte	134
	.byte	132
	.byte	130
	.byte	133
	.byte	130
	.byte	134
	.byte	134
	.byte	135
	.byte	142
	.byte	136
	.byte	138
	.byte	137
	.byte	154
	.byte	138
	.byte	158
	.byte	139
	.byte	154
	.byte	140
	.byte	158
	.byte	141
	.byte	158
	.byte	142
	.byte	154
	.byte	143
	.byte	134
	.byte	144
	.byte	130
	.byte	145
	.byte	130
	.byte	146
	.byte	134
	.byte	147
	.byte	35
	.byte	52
	.byte	39
	.byte	53
	.byte	39
	.byte	54
	.byte	35
	.byte	55
	.byte	43
	.byte	56
	.byte	47
	.byte	57
	.byte	63
	.byte	58
	.byte	59
	.byte	59
	.byte	63
	.byte	60
	.byte	59
	.byte	61
	.byte	59
	.byte	62
	.byte	63
	.byte	63
	.byte	3
	.byte	64
	.byte	7
	.byte	65
	.byte	7
	.byte	66
	.byte	3
	.byte	67
	.byte	7
	.byte	68
	.byte	3
	.byte	69
	.byte	3
	.byte	70
	.byte	7
	.byte	71
	.byte	15
	.byte	72
	.byte	11
	.byte	73
	.byte	27
	.byte	74
	.byte	31
	.byte	75
	.byte	27
	.byte	76
	.byte	31
	.byte	77
	.byte	31
	.byte	78
	.byte	27
	.byte	79
	.byte	7
	.byte	80
	.byte	3
	.byte	81
	.byte	3
	.byte	82
	.byte	7
	.byte	83
	.byte	3
	.byte	84
	.byte	7
	.byte	85
	.byte	7
	.byte	86
	.byte	3
	.byte	87
	.byte	11
	.byte	88
	.byte	15
	.byte	89
	.byte	31
	.byte	90
	.byte	27
	.byte	91
	.byte	31
	.byte	92
	.byte	27
	.byte	93
	.byte	27
	.byte	94
	.byte	31
	.byte	95
	.byte	39
	.byte	96
	.byte	35
	.byte	97
	.byte	35
	.byte	98
	.byte	39
	.byte	99
	.byte	35
	.byte	100
	.byte	39
	.byte	101
	.byte	39
	.byte	102
	.byte	35
	.byte	103
	.byte	43
	.byte	104
	.byte	47
	.byte	105
	.byte	63
	.byte	106
	.byte	59
	.byte	107
	.byte	63
	.byte	108
	.byte	59
	.byte	109
	.byte	59
	.byte	110
	.byte	63
	.byte	111
	.byte	35
	.byte	112
	.byte	39
	.byte	113
	.byte	39
	.byte	114
	.byte	35
	.byte	115
	.byte	39
	.byte	116
	.byte	35
	.byte	117
	.byte	35
	.byte	118
	.byte	39
	.byte	119
	.byte	47
	.byte	120
	.byte	43
	.byte	121
	.byte	59
	.byte	122
	.byte	63
	.byte	123
	.byte	59
	.byte	124
	.byte	63
	.byte	125
	.byte	63
	.byte	126
	.byte	59
	.byte	127
	.byte	131
	.byte	128
	.byte	135
	.byte	129
	.byte	135
	.byte	130
	.byte	131
	.byte	131
	.byte	135
	.byte	132
	.byte	131
	.byte	133
	.byte	131
	.byte	134
	.byte	135
	.byte	135
	.byte	143
	.byte	136
	.byte	139
	.byte	137
	.byte	155
	.byte	138
	.byte	159
	.byte	139
	.byte	155
	.byte	140
	.byte	159
	.byte	141
	.byte	159
	.byte	142
	.byte	155
	.byte	143
	.byte	135
	.byte	144
	.byte	131
	.byte	145
	.byte	131
	.byte	146
	.byte	135
	.byte	147
	.byte	131
	.byte	148
	.byte	135
	.byte	149
	.byte	135
	.byte	150
	.byte	131
	.byte	151
	.byte	139
	.byte	152
	.byte	143
	.byte	153
	.byte	159
	.byte	154
	.byte	155
	.byte	155
	.byte	159
	.byte	156
	.byte	155
	.byte	157
	.byte	155
	.byte	158
	.byte	159
	.byte	159
	.byte	167
	.byte	160
	.byte	163
	.byte	161
	.byte	163
	.byte	162
	.byte	167
	.byte	163
	.byte	163
	.byte	164
	.byte	167
	.byte	165
	.byte	167
	.byte	166
	.byte	163
	.byte	167
	.byte	171
	.byte	168
	.byte	175
	.byte	169
	.byte	191
	.byte	170
	.byte	187
	.byte	171
	.byte	191
	.byte	172
	.byte	187
	.byte	173
	.byte	187
	.byte	174
	.byte	191
	.byte	175
	.byte	163
	.byte	176
	.byte	167
	.byte	177
	.byte	167
	.byte	178
	.byte	163
	.byte	179
	.byte	167
	.byte	180
	.byte	163
	.byte	181
	.byte	163
	.byte	182
	.byte	167
	.byte	183
	.byte	175
	.byte	184
	.byte	171
	.byte	185
	.byte	187
	.byte	186
	.byte	191
	.byte	187
	.byte	187
	.byte	188
	.byte	191
	.byte	189
	.byte	191
	.byte	190
	.byte	187
	.byte	191
	.byte	135
	.byte	192
	.byte	131
	.byte	193
	.byte	131
	.byte	194
	.byte	135
	.byte	195
	.byte	131
	.byte	196
	.byte	135
	.byte	197
	.byte	135
	.byte	198
	.byte	131
	.byte	199
	.byte	139
	.byte	200
	.byte	143
	.byte	201
	.byte	159
	.byte	202
	.byte	155
	.byte	203
	.byte	159
	.byte	204
	.byte	155
	.byte	205
	.byte	155
	.byte	206
	.byte	159
	.byte	207
	.byte	131
	.byte	208
	.byte	135
	.byte	209
	.byte	135
	.byte	210
	.byte	131
	.byte	211
	.byte	135
	.byte	212
	.byte	131
	.byte	213
	.byte	131
	.byte	214
	.byte	135
	.byte	215
	.byte	143
	.byte	216
	.byte	139
	.byte	217
	.byte	155
	.byte	218
	.byte	159
	.byte	219
	.byte	155
	.byte	220
	.byte	159
	.byte	221
	.byte	159
	.byte	222
	.byte	155
	.byte	223
	.byte	163
	.byte	224
	.byte	167
	.byte	225
	.byte	167
	.byte	226
	.byte	163
	.byte	227
	.byte	167
	.byte	228
	.byte	163
	.byte	229
	.byte	163
	.byte	230
	.byte	167
	.byte	231
	.byte	175
	.byte	232
	.byte	171
	.byte	233
	.byte	187
	.byte	234
	.byte	191
	.byte	235
	.byte	187
	.byte	236
	.byte	191
	.byte	237
	.byte	191
	.byte	238
	.byte	187
	.byte	239
	.byte	167
	.byte	240
	.byte	163
	.byte	241
	.byte	163
	.byte	242
	.byte	167
	.byte	243
	.byte	163
	.byte	244
	.byte	167
	.byte	245
	.byte	167
	.byte	246
	.byte	163
	.byte	247
	.byte	171
	.byte	248
	.byte	175
	.byte	249
	.byte	191
	.byte	250
	.byte	187
	.byte	251
	.byte	191
	.byte	252
	.byte	187
	.byte	253
	.byte	187
	.byte	254
	.byte	191
	.byte	255
	.byte	71
	.byte	0
	.byte	3
	.byte	1
	.byte	3
	.byte	2
	.byte	7
	.byte	3
	.byte	3
	.byte	4
	.byte	7
	.byte	5
	.byte	7
	.byte	6
	.byte	3
	.byte	7
	.byte	11
	.byte	8
	.byte	15
	.byte	9
	.byte	31
	.byte	10
	.byte	27
	.byte	11
	.byte	31
	.byte	12
	.byte	27
	.byte	13
	.byte	27
	.byte	14
	.byte	31
	.byte	15
	.byte	3
	.byte	16
	.byte	7
	.byte	17
	.byte	7
	.byte	18
	.byte	3
	.byte	19
	.byte	7
	.byte	20
	.byte	3
	.byte	21
	.byte	3
	.byte	22
	.byte	7
	.byte	23
	.byte	15
	.byte	24
	.byte	11
	.byte	25
	.byte	27
	.byte	26
	.byte	31
	.byte	27
	.byte	27
	.byte	28
	.byte	31
	.byte	29
	.byte	31
	.byte	30
	.byte	27
	.byte	31
	.byte	35
	.byte	32
	.byte	39
	.byte	33
	.byte	39
	.byte	34
	.byte	35
	.byte	35
	.byte	39
	.byte	36
	.byte	35
	.byte	37
	.byte	35
	.byte	38
	.byte	39
	.byte	39
	.byte	47
	.byte	40
	.byte	43
	.byte	41
	.byte	59
	.byte	42
	.byte	63
	.byte	43
	.byte	59
	.byte	44
	.byte	63
	.byte	45
	.byte	63
	.byte	46
	.byte	59
	.byte	47
	.byte	39
	.byte	48
	.byte	35
	.byte	49
	.byte	35
	.byte	50
	.byte	39
	.byte	51
	.byte	35
	.byte	52
	.byte	39
	.byte	53
	.byte	39
	.byte	54
	.byte	35
	.byte	55
	.byte	43
	.byte	56
	.byte	47
	.byte	57
	.byte	63
	.byte	58
	.byte	59
	.byte	59
	.byte	63
	.byte	60
	.byte	59
	.byte	61
	.byte	59
	.byte	62
	.byte	63
	.byte	63
	.byte	3
	.byte	64
	.byte	7
	.byte	65
	.byte	7
	.byte	66
	.byte	3
	.byte	67
	.byte	7
	.byte	68
	.byte	3
	.byte	69
	.byte	3
	.byte	70
	.byte	7
	.byte	71
	.byte	15
	.byte	72
	.byte	11
	.byte	73
	.byte	27
	.byte	74
	.byte	31
	.byte	75
	.byte	27
	.byte	76
	.byte	31
	.byte	77
	.byte	31
	.byte	78
	.byte	27
	.byte	79
	.byte	7
	.byte	80
	.byte	3
	.byte	81
	.byte	3
	.byte	82
	.byte	7
	.byte	83
	.byte	3
	.byte	84
	.byte	7
	.byte	85
	.byte	7
	.byte	86
	.byte	3
	.byte	87
	.byte	11
	.byte	88
	.byte	15
	.byte	89
	.byte	31
	.byte	90
	.byte	27
	.byte	91
	.byte	31
	.byte	92
	.byte	27
	.byte	93
	.byte	27
	.byte	94
	.byte	31
	.byte	95
	.byte	39
	.byte	96
	.byte	35
	.byte	97
	.byte	35
	.byte	98
	.byte	39
	.byte	99
	.byte	35
	.byte	100
	.byte	39
	.byte	101
	.byte	39
	.byte	102
	.byte	35
	.byte	103
	.byte	43
	.byte	104
	.byte	47
	.byte	105
	.byte	63
	.byte	106
	.byte	59
	.byte	107
	.byte	63
	.byte	108
	.byte	59
	.byte	109
	.byte	59
	.byte	110
	.byte	63
	.byte	111
	.byte	35
	.byte	112
	.byte	39
	.byte	113
	.byte	39
	.byte	114
	.byte	35
	.byte	115
	.byte	39
	.byte	116
	.byte	35
	.byte	117
	.byte	35
	.byte	118
	.byte	39
	.byte	119
	.byte	47
	.byte	120
	.byte	43
	.byte	121
	.byte	59
	.byte	122
	.byte	63
	.byte	123
	.byte	59
	.byte	124
	.byte	63
	.byte	125
	.byte	63
	.byte	126
	.byte	59
	.byte	127
	.byte	131
	.byte	128
	.byte	135
	.byte	129
	.byte	135
	.byte	130
	.byte	131
	.byte	131
	.byte	135
	.byte	132
	.byte	131
	.byte	133
	.byte	131
	.byte	134
	.byte	135
	.byte	135
	.byte	143
	.byte	136
	.byte	139
	.byte	137
	.byte	155
	.byte	138
	.byte	159
	.byte	139
	.byte	155
	.byte	140
	.byte	159
	.byte	141
	.byte	159
	.byte	142
	.byte	155
	.byte	143
	.byte	135
	.byte	144
	.byte	131
	.byte	145
	.byte	131
	.byte	146
	.byte	135
	.byte	147
	.byte	131
	.byte	148
	.byte	135
	.byte	149
	.byte	135
	.byte	150
	.byte	131
	.byte	151
	.byte	139
	.byte	152
	.byte	143
	.byte	153
